(n.samples.df<-as.data.frame(n.samples))
(mean.sqmeter.high<-t(tapply(high$Freq,INDEX=list(high$year,  high$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.high.df<-as.data.frame(mean.sqmeter.high)
sd.sqmeter.high<-tapply(high$Freq,INDEX=list(high$year,  high$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.high <-t(sd.sqmeter.high/sqrt(n.samples.df$high))
sem.sqmeter.high.df<-as.data.frame(sem.sqmeter.high)
(mean.sqmeter.middle<-t(tapply(middle$Freq,INDEX=list(middle$year,  middle$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.middle.df<-as.data.frame(mean.sqmeter.middle)
sd.sqmeter.middle<-tapply(middle$Freq,INDEX=list(middle$year,  middle$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.middle <-t(sd.sqmeter.middle/sqrt(n.samples.df$middle))
sem.sqmeter.middle.df<-as.data.frame(sem.sqmeter.middle)
#нижний горизонт
(mean.sqmeter.low<-t(tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.low.df<-as.data.frame(mean.sqmeter.low)
sd.sqmeter.low<-tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low <-t(sd.sqmeter.low/sqrt(n.samples.df$low))
sem.sqmeter.low.df<-as.data.frame(sem.sqmeter.low)
length.class<-seq(1,22,1)
for (j in 1:length(colnames(mean.sqmeter.high)))
{
pdf(file=paste("high", colnames(mean.sqmeter.high)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.high[,j], nn=length.class,  z=sem.sqmeter.high[,j])
title(main=colnames(mean.sqmeter.high)[j], xlab="", ylab="")
dev.off()
embedFonts(paste("high", colnames(mean.sqmeter.high)[j], ".pdf",sep="_"))
}
#средний горизонт
for (j in 1:length(colnames(mean.sqmeter.middle)))
{
pdf(file=paste("middle", colnames(mean.sqmeter.middle)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.middle[,j], nn=length.class,  z=sem.sqmeter.middle[,j])
title(main=colnames(mean.sqmeter.middle)[j], xlab="", ylab="")
dev.off()
embedFonts(paste("middle", colnames(mean.sqmeter.middle)[j], ".pdf",sep="_"))
}
#нижний горизонт
for (j in 1:length(colnames(mean.sqmeter.low)))
{
pdf(file=paste("low", colnames(mean.sqmeter.low)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.low[,j], nn=length.class,  z=sem.sqmeter.low[,j])
title(main=colnames(mean.sqmeter.low)[j], xlab="", ylab="")
dev.off()
embedFonts(paste("low", colnames(mean.sqmeter.low)[j], ".pdf",sep="_"))
}
for (j in 1:length(colnames(mean.sqmeter.low)))
{
pdf(file=paste("low", colnames(mean.sqmeter.low)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.low[,j], nn=length.class,  z=sem.sqmeter.low[,j])
title(main=colnames(mean.sqmeter.low)[j], xlab="", ylab="")
dev.off()
embedFonts(paste("low", colnames(mean.sqmeter.low)[j], ".pdf",sep="_"))
}
pdf(file=paste("high", colnames(mean.sqmeter.high)[2], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.high[,2], nn=length.class,  z=sem.sqmeter.high[,j])
title(main=colnames(mean.sqmeter.high)[2], xlab="", ylab="")
dev.off()
embedFonts(paste("high", colnames(mean.sqmeter.high)[2], ".pdf",sep="_"))
pdf(file=paste("high", colnames(mean.sqmeter.high)[2], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.high[,2], nn=length.class,  z=sem.sqmeter.high[,2])
title(main=colnames(mean.sqmeter.high)[2], xlab="", ylab="")
dev.off()
embedFonts(paste("high", colnames(mean.sqmeter.high)[2], ".pdf",sep="_"))
pdf(file=paste("middle", colnames(mean.sqmeter.middle)[1], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.middle[,1], nn=length.class,  z=sem.sqmeter.middle[,1])
title(main=colnames(mean.sqmeter.middle)[1], xlab="", ylab="")
dev.off()
embedFonts(paste("middle", colnames(mean.sqmeter.middle)[j], ".pdf",sep="_"))
embedFonts(paste("middle", colnames(mean.sqmeter.middle)[2], ".pdf",sep="_"))
embedFonts(paste("middle", colnames(mean.sqmeter.middle)[1], ".pdf",sep="_"))
pdf(file=paste("low", colnames(mean.sqmeter.low)[2], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.low[,2], nn=length.class,  z=sem.sqmeter.low[,2])
title(main=colnames(mean.sqmeter.low)[2], xlab="", ylab="")
dev.off()
embedFonts(paste("low", colnames(mean.sqmeter.low)[2], ".pdf",sep="_"))
}
dev.off()
dev.off()
dev.off()
dev.off()
pdf(file=paste("high", colnames(mean.sqmeter.high)[2], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.high[,2], nn=length.class,  z=sem.sqmeter.high[,2])
title(main=colnames(mean.sqmeter.high)[2], xlab="", ylab="")
dev.off()
embedFonts(paste("high", colnames(mean.sqmeter.high)[2], ".pdf",sep="_"))
pdf(file=paste("middle", colnames(mean.sqmeter.middle)[1], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.middle[,1], nn=length.class,  z=sem.sqmeter.middle[,1])
title(main=colnames(mean.sqmeter.middle)[1], xlab="", ylab="")
dev.off()
embedFonts(paste("middle", colnames(mean.sqmeter.middle)[1], ".pdf",sep="_"))
pdf(file=paste("low", colnames(mean.sqmeter.low)[2], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.low[,2], nn=length.class,  z=sem.sqmeter.low[,2])
title(main=colnames(mean.sqmeter.low)[2], xlab="", ylab="")
dev.off()
embedFonts(paste("low", colnames(mean.sqmeter.low)[2], ".pdf",sep="_"))
}
(age.int<-as.factor(age))
(age.str.table<-table(age.int, year, tidal_level, sample))
age.str.df<-as.data.frame(age.str.table) # как таблица данных
for (i in 1:length(levels(age.str.df$year))){
for(j in 1:length(levels(age.str.df$tidal_level))){
(xxx<-age.str.df$sample[age.str.df$year==levels(age.str.df$year)[i] &
age.str.df$tidal_level==levels(age.str.df$tidal_level)[j]]%in%
samples.names$sample[samples.names$year==levels(age.str.df$year)[i] &
samples.names$tidal_level==levels(age.str.df$tidal_level)[j]])
antixxx<-as.logical(1-xxx)
age.str.df$Freq[age.str.df$year==levels(age.str.df$year)[i] &
age.str.df$tidal_level==levels(age.str.df$tidal_level)[j]][antixxx]<-NA
}}
age.str.sqmeter<-age.str.df
for (i in 1:length(levels(age.str.sqmeter$year)))
{
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]]<-
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(age.str.sqmeter$year)[i]]
}
for (i in 1: length(levels(age.str.sqmeter$tidal_level)))
{
write.table(assign(paste("age",levels(age.str.sqmeter$tidal_level)[i], sep="."),
subset(age.str.sqmeter, age.str.sqmeter$tidal_level==levels(age.str.sqmeter$tidal_level)[i])), file=paste(levels(age.str.sqmeter$tidal_level)[i]), sep=",")
}
(age.mean.sqmeter.high<-t(tapply(age.high$Freq,INDEX=list(age.high$year,  age.high$age.int),FUN=mean, na.rm=T)))
age.mean.sqmeter.high.df<-as.data.frame(age.mean.sqmeter.high)
age.sd.sqmeter.high<-tapply(age.high$Freq,INDEX=list(age.high$year,  age.high$age.int),FUN=sd, na.rm=T)
age.sem.sqmeter.high <-t(age.sd.sqmeter.high/sqrt(n.samples.df$high))
age.sem.sqmeter.high.df<-as.data.frame(age.sem.sqmeter.high)
(age.mean.sqmeter.middle<-t(tapply(age.middle$Freq,INDEX=list(age.middle$year,  age.middle$age.int),FUN=mean, na.rm=T)))
age.mean.sqmeter.middle.df<-as.data.frame(age.mean.sqmeter.middle)
age.sd.sqmeter.middle<-tapply(age.middle$Freq,INDEX=list(age.middle$year,  age.middle$age.int),FUN=sd, na.rm=T)
age.sem.sqmeter.middle <-t(age.sd.sqmeter.middle/sqrt(n.samples.df$middle))
age.sem.sqmeter.middle.df<-as.data.frame(age.sem.sqmeter.middle)
(age.mean.sqmeter.low<-t(tapply(age.low$Freq,INDEX=list(age.low$year,  age.low$age.int),FUN=mean, na.rm=T)))
age.mean.sqmeter.low.df<-as.data.frame(age.mean.sqmeter.low)
age.sd.sqmeter.low<-tapply(age.low$Freq,INDEX=list(age.low$year,  age.low$age.int),FUN=sd, na.rm=T)
age.sem.sqmeter.low <-t(age.sd.sqmeter.low/sqrt(n.samples.df$low))
age.sem.sqmeter.low.df<-as.data.frame(age.sem.sqmeter.low)
pdf(file=paste("age_high", colnames(age.mean.sqmeter.high)[1], ".pdf",sep="_"))
error.bars(yv=age.mean.sqmeter.high[,1], nn=as.numeric(levels(age.int)),  z=age.sem.sqmeter.high[,1])
title(main=colnames(age.mean.sqmeter.high)[1], xlab="", ylab="")
dev.off()
embedFonts(paste("age_high", colnames(age.mean.sqmeter.high)[1], ".pdf",sep="_"))
dev.off()
pdf(file=paste("age_high", colnames(age.mean.sqmeter.high)[2], ".pdf",sep="_"))
error.bars(yv=age.mean.sqmeter.high[,2], nn=as.numeric(levels(age.int)),  z=age.sem.sqmeter.high[,2])
title(main=colnames(age.mean.sqmeter.high)[2], xlab="", ylab="")
dev.off()
embedFonts(paste("age_high", colnames(age.mean.sqmeter.high)[2], ".pdf",sep="_"))
pdf(file=paste("age_middle", colnames(age.mean.sqmeter.middle)[1], ".pdf",sep="_"))
error.bars(yv=age.mean.sqmeter.middle[,1], nn=as.numeric(levels(age.int)),  z=age.sem.sqmeter.middle[,1])
title(main=colnames(age.mean.sqmeter.middle)[1], xlab="", ylab="")
dev.off()
embedFonts(paste("age_middle", colnames(age.mean.sqmeter.middle)[1], ".pdf",sep="_"))
pdf(file=paste("age_low", colnames(age.mean.sqmeter.low)[2], ".pdf",sep="_"))
error.bars(yv=age.mean.sqmeter.low[,2], nn=as.numeric(levels(age.int)),  z=age.sem.sqmeter.low[,2])
title(main=colnames(age.mean.sqmeter.low)[2], xlab="", ylab="")
dev.off()
embedFonts(paste("low", colnames(mean.sqmeter.low)[2], ".pdf",sep="_"))
setwd("~/Dropbox/PhD_thesis/PhD_thesis/Barenc_Sea/Abram-mys/")
detach(ishodnik)
ishodnik<-read.table(file="length_age.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
str(ishodnik)
max(Length.mm, na.rm=T)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int, year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
for (i in 1:length(levels(size.str.df$year))){
for(j in 1:length(levels(size.str.df$tidal_level))){
(xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] &
size.str.df$tidal_level==levels(size.str.df$tidal_level)[j]]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i] &
samples.names$tidal_level==levels(size.str.df$tidal_level)[j]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i] &
size.str.df$tidal_level==levels(size.str.df$tidal_level)[j]][antixxx]<-NA
}}
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
write.table(assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i])), file=paste(levels(size.str.sqmeter$tidal_level)[i]), sep=",")
}
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal_level), length ))
(n.samples.df<-as.data.frame(n.samples))
#средний горизонт
(mean.sqmeter.middle<-t(tapply(middle$Freq,INDEX=list(middle$year,  middle$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.middle.df<-as.data.frame(mean.sqmeter.middle)
sd.sqmeter.middle<-tapply(middle$Freq,INDEX=list(middle$year,  middle$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.middle <-t(sd.sqmeter.middle/sqrt(n.samples.df$middle))
sem.sqmeter.middle.df<-as.data.frame(sem.sqmeter.middle)
#нижний горизонт, у нуля глубин
(mean.sqmeter.low<-t(tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.low.df<-as.data.frame(mean.sqmeter.low)
sd.sqmeter.low<-tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low <-t(sd.sqmeter.low/sqrt(n.samples.df$low))
sem.sqmeter.low.df<-as.data.frame(sem.sqmeter.low)
length.class<-seq(1,20,1)
#from R-book
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
#средний горизонт
for (j in 1:length(colnames(mean.sqmeter.middle)))
{
pdf(file=paste("middle", colnames(mean.sqmeter.middle)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.middle[,j], nn=length.class,  z=sem.sqmeter.middle[,j])
title(main=colnames(mean.sqmeter.middle)[j], xlab="", ylab="")
dev.off()
embedFonts(paste("middle", colnames(mean.sqmeter.middle)[j], ".pdf",sep="_"))
}
#нижний горизонт
for (j in 1:length(colnames(mean.sqmeter.low)))
{
pdf(file=paste("low", colnames(mean.sqmeter.low)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.low[,j], nn=length.class,  z=sem.sqmeter.low[,j])
title(main=colnames(mean.sqmeter.low)[j], xlab="", ylab="")
dev.off()
embedFonts(paste("low", colnames(mean.sqmeter.low)[j], ".pdf",sep="_"))
}
## возрастная структура
(age.int<-as.factor(age))
(age.str.table<-table(age.int, year, tidal_level, sample))
age.str.df<-as.data.frame(age.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(age.str.df$year))){
for(j in 1:length(levels(age.str.df$tidal_level))){
(xxx<-age.str.df$sample[age.str.df$year==levels(age.str.df$year)[i] &
age.str.df$tidal_level==levels(age.str.df$tidal_level)[j]]%in%
samples.names$sample[samples.names$year==levels(age.str.df$year)[i] &
samples.names$tidal_level==levels(age.str.df$tidal_level)[j]])
antixxx<-as.logical(1-xxx)
age.str.df$Freq[age.str.df$year==levels(age.str.df$year)[i] &
age.str.df$tidal_level==levels(age.str.df$tidal_level)[j]][antixxx]<-NA
}}
#теперь на квадратный метр
age.str.sqmeter<-age.str.df
for (i in 1:length(levels(age.str.sqmeter$year)))
{
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]]<-
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(age.str.sqmeter$year)[i]]
}
for (i in 1: length(levels(age.str.sqmeter$tidal_level)))
{
write.table(assign(paste("age",levels(age.str.sqmeter$tidal_level)[i], sep="."),
subset(age.str.sqmeter, age.str.sqmeter$tidal_level==levels(age.str.sqmeter$tidal_level)[i])), file=paste(levels(age.str.sqmeter$tidal_level)[i]), sep=",")
}
#средний горизонт
(age.mean.sqmeter.middle<-t(tapply(age.middle$Freq,INDEX=list(age.middle$year,  age.middle$age.int),FUN=mean, na.rm=T)))
age.mean.sqmeter.middle.df<-as.data.frame(age.mean.sqmeter.middle)
age.sd.sqmeter.middle<-tapply(age.middle$Freq,INDEX=list(age.middle$year,  age.middle$age.int),FUN=sd, na.rm=T)
age.sem.sqmeter.middle <-t(age.sd.sqmeter.middle/sqrt(n.samples.df$middle))
age.sem.sqmeter.middle.df<-as.data.frame(age.sem.sqmeter.middle)
#нижний горизонт, у нуля глубин
(age.mean.sqmeter.low<-t(tapply(age.low$Freq,INDEX=list(age.low$year,  age.low$age.int),FUN=mean, na.rm=T)))
age.mean.sqmeter.low.df<-as.data.frame(age.mean.sqmeter.low)
age.sd.sqmeter.low<-tapply(age.low$Freq,INDEX=list(age.low$year,  age.low$age.int),FUN=sd, na.rm=T)
age.sem.sqmeter.low <-t(age.sd.sqmeter.low/sqrt(n.samples.df$low))
age.sem.sqmeter.low.df<-as.data.frame(age.sem.sqmeter.low)
#средний горизонт
for (j in 1:length(colnames(mean.sqmeter.middle)))
{
pdf(file=paste("age_middle", colnames(age.mean.sqmeter.middle)[j], ".pdf",sep="_"))
error.bars(yv=age.mean.sqmeter.middle[,j], nn=as.numeric(levels(age.int)),  z=age.sem.sqmeter.middle[,j])
title(main=colnames(age.mean.sqmeter.middle)[j], xlab="", ylab="")
dev.off()
embedFonts(paste("age_middle", colnames(age.mean.sqmeter.middle)[j], ".pdf",sep="_"))
}
#нижний горизонт
for (j in 1:length(colnames(mean.sqmeter.low)))
{
pdf(file=paste("age_low", colnames(age.mean.sqmeter.low)[j], ".pdf",sep="_"))
error.bars(yv=age.mean.sqmeter.low[,j], nn=as.numeric(levels(age.int)),  z=age.sem.sqmeter.low[,j])
title(main=colnames(age.mean.sqmeter.low)[j], xlab="", ylab="")
dev.off()
embedFonts(paste("low", colnames(mean.sqmeter.low)[j], ".pdf",sep="_"))
}
setwd("~/Dropbox/PhD_thesis/PhD_thesis/Barenc_Sea/Dalnezeleneckaya/")
detach(ishodnik)
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
setwd("~/Dropbox/PhD_thesis/PhD_thesis/Barenc_Sea/Dalnezeleneckaya/")
detach(ishodnik)
ishodnik<-read.table(file="length_age.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
attach(ishodnik)
(age.int<-as.factor(age))
(age.str.table<-table(age.int, year, sample))
age.str.df<-as.data.frame(age.str.table) # как таблица данных
for (i in 1:length(levels(age.str.df$year)))
{ (xxx<-age.str.df$sample[age.str.df$year==levels(age.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(age.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
age.str.df$Freq[age.str.df$year==levels(age.str.df$year)[i]][antixxx]<-NA
}
age.str.sqmeter<-age.str.df
for (i in 1:length(levels(age.str.sqmeter$year)))
{
}
(age.str.sqmeter<-age.str.df)
for (i in 1:length(levels(age.str.sqmeter$year)))
{
x30<-age.str.sqmeter$sample[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i] ]%in%
samples.squares$sample[samples.squares$year==levels(age.str.sqmeter$year)[i] & samples.squares$square==30]
x10<-age.str.sqmeter$sample[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i] ]%in%
samples.squares$sample[samples.squares$year==levels(age.str.sqmeter$year)[i] & samples.squares$square==10]
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]][x30]<-
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]][x30] * 30
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]][x10]<-
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]][x10] * 10
}
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
(n.samples<-tapply(samples.names$sample,samples.names$year, length ))
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
sd.sizestr.sqmeter
n.samples
n.samples["2008"]
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
(age.str.sqmeter<-age.str.df)
for (i in 1:length(levels(age.str.sqmeter$year)))
{
x30<-age.str.sqmeter$sample[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i] ]%in%
samples.squares$sample[samples.squares$year==levels(age.str.sqmeter$year)[i] & samples.squares$square==30]
x10<-age.str.sqmeter$sample[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i] ]%in%
samples.squares$sample[samples.squares$year==levels(age.str.sqmeter$year)[i] & samples.squares$square==10]
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]][x30]<-
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]][x30] * 30
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]][x10]<-
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]][x10] * 10
}
age.str.sqmeter
setwd("~/Dropbox/PhD_thesis/PhD_thesis/Barenc_Sea/Dalnezeleneckaya/")
detach(ishodnik)
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
attach(ishodnik)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
(size.str.sqmeter<-size.str.df)
for (i in 1:length(levels(size.str.sqmeter$year)))
{
x30<-size.str.sqmeter$sample[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i] ]%in%
samples.squares$sample[samples.squares$year==levels(size.str.sqmeter$year)[i] & samples.squares$square==30]
x10<-size.str.sqmeter$sample[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i] ]%in%
samples.squares$sample[samples.squares$year==levels(size.str.sqmeter$year)[i] & samples.squares$square==10]
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]][x30]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]][x30] * 30
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]][x10]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]][x10] * 10
}
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
(n.samples<-tapply(samples.names$sample,samples.names$year, length ))
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
length.class<-seq(1,20,1)
length.class2<-seq(2,20,1)
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
## size structure plot
#from R-book
error.bars1<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn,ylab)
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
for (j in 1:length(colnames(mean.sizestr.sqmeter)))
{
pdf(file=paste("DZ", colnames(mean.sizestr.sqmeter)[j], ".pdf",sep="_"))
error.bars(yv=mean.sizestr.sqmeter[,j], nn=length.class, z=sem.sizestr.sqmeter[,j])
title(main=colnames(mean.sizestr.sqmeter)[j], xlab="", ylab="")
dev.off()
}
#>2mm
for (j in 1:length(colnames(mean.sizestr.sqmeter2)))
{
pdf(file=paste("DZ2", colnames(mean.sizestr.sqmeter2)[j], ".pdf",sep="_"))
error.bars(yv=mean.sizestr.sqmeter2[,j], nn=length.class2, z=sem.sizestr.sqmeter2[,j])
title(main=colnames(mean.sizestr.sqmeter2)[j], xlab="", ylab="")
dev.off()
}
##динамика обилия
(N.sqmeter<-(t(tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample), sum))))
(N.mean.sqmeter<-colMeans(N.sqmeter, na.rm=T))
(N.sd.sqmeter<-apply(N.sqmeter, 2, sd, na.rm=T))
(N.sem.sqmeter<-N.sd.sqmeter/sqrt(n.samples))
#точность учета
(D.n<-N.sem.sqmeter/N.mean.sqmeter*100)
pdf(file="N_dynamic.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=N.mean.sqmeter, x=names(N.mean.sqmeter),pch=15, main="г. Дальнезеленецкая",
ylim=c(min(N.mean.sqmeter)-max(N.sem.sqmeter), max(N.mean.sqmeter)+max(N.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1), N.mean.sqmeter, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
x1=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
y0=N.mean.sqmeter-N.sem.sqmeter, y1=N.mean.sqmeter+N.sem.sqmeter, angle=90, code=3, length=0.1)
dev.off()
embedFonts("N_dynamic.pdf") #встройка шрифтов в файл
##динамика без молод ( больше 2+)
(N2.sqmeter<-(t(tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"]), sum))))
(N2.mean.sqmeter<-colMeans(N2.sqmeter, na.rm=T))
N2.sd.sqmeter<-apply(N2.sqmeter, 2, sd, na.rm=T)
N2.sem.sqmeter<-N2.sd.sqmeter/sqrt(n.samples)
#точность учета
(D.n2<-N2.sem.sqmeter/N2.mean.sqmeter*100)
# запишем численность всех крупнее 1 мм в файл
write.table(data.frame(N2.mean.sqmeter, N2.sem.sqmeter), file="DZ_N2.csv", sep=";", dec=",")
# запишем пересчет обилия >1мм в пробах на квадратный метр в файл
write.table(as.data.frame(as.table(N2.sqmeter)), file="DZ_N2_in samples_sqmeter.csv", sep=";", dec=",")
pdf(file="N2_dynamic.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=N2.mean.sqmeter, x=names(N2.mean.sqmeter),pch=15, main="г. Дальнезеленецкая",
ylim=c(min(N2.mean.sqmeter)-max(N2.sem.sqmeter), max(N2.mean.sqmeter)+max(N2.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(names(N2.mean.sqmeter))),as.numeric(max(names(N2.mean.sqmeter))),1), N2.mean.sqmeter, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(N2.mean.sqmeter))),as.numeric(max(names(N2.mean.sqmeter))),1),
x1=seq(as.numeric(min(names(N2.mean.sqmeter))),as.numeric(max(names(N2.mean.sqmeter))),1),
y0=N2.mean.sqmeter-N2.sem.sqmeter, y1=N2.mean.sqmeter+N2.sem.sqmeter, angle=90, code=3, length=0.1)
dev.off()
embedFonts("N2_dynamic.pdf") #встройкашрифтов в файл
Agarova.ish<-read.table("Agarova_1973.csv", head=T, sep=";", dec=",")
(Agarova.73.mean<-sum(Agarova.ish$N.indd*Agarova.ish$vstrechaemost)/sum(Agarova.ish$vstrechaemost))
Agarova.73.sd<-sd(Agarova.ish$N.indd)
(Agarova.73.sem<-Agarova.73.sd/sqrt(length(Agarova.ish$N.indd)))
(N.mean.72.02.08<-c(Agarova.73.mean, N.mean.sqmeter))
names(N.mean.72.02.08)<-c("1973", names(N.mean.sqmeter))
(N.sem.72.02.08<-c(Agarova.73.sem, N.sem.sqmeter))
names(N.sem.72.02.08)<-c("1973", names(N.sem.sqmeter))
pdf(file="N_dynamic_with_Agarova.pdf", family="NimbusSan") # указываем шрифт подпией
error.bars(yv=N.mean.72.02.08, z=N.sem.72.02.08, nn=names(N.mean.72.02.08))
title(main=)
dev.off()
embedFonts("N_dynamic_with_Agarova.pdf") #встройка шрифтов в файл
setwd("~/Dropbox/PhD_thesis/PhD_thesis/Barenc_Sea/Dalnezeleneckaya/")
detach(ishodnik)
ishodnik<-read.table(file="length_age0708.csv", sep=";", dec=",", head=T)
ishodnik<-read.table(file="length_age0708.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample0708.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares0708.csv", sep=";", dec=",", head=T)
(age.int<-as.factor(age))
(age.str.table<-table(age.int, year, sample))
attach(ishodnik)
(age.int<-as.factor(age))
(age.str.table<-table(age.int, year, sample))
age.str.df<-as.data.frame(age.str.table) # как таблица данных
for (i in 1:length(levels(age.str.df$year)))
{ (xxx<-age.str.df$sample[age.str.df$year==levels(age.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(age.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
age.str.df$Freq[age.str.df$year==levels(age.str.df$year)[i]][antixxx]<-NA
}
age.str.sqmeter<-age.str.df
for (i in 1:length(levels(age.str.sqmeter$year)))
{
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]]<-
age.str.sqmeter$Freq[age.str.sqmeter$year==levels(age.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(age.str.sqmeter$year)[i]]
}
(age.str.sqmeter<-age.str.df)
age.str.df
str(age.str.df)
summary(age.str.df$sample)
summary(samples.names$sample)
str(samples.names)
str(samples.squares)
summary(samples.squares$sample)
str(samples.squares)
