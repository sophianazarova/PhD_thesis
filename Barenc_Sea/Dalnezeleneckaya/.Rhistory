(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
length.class<-seq(1,20,1)
##>2mm mean size structure
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
##динамика обилия
(N.sqmeter<-(t(tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample), sum))))
(N.mean.sqmeter<-colMeans(N.sqmeter, na.rm=T))
N.sd.sqmeter<-apply(N.sqmeter, 2, sd, na.rm=T)
N.sem.sqmeter<-N.sd.sqmeter/sqrt(n.samples)
(D.n<-N.sem.sqmeter/N.mean.sqmeter*100)
pdf(file="N_dynamic.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=N.mean.sqmeter, x=names(N.mean.sqmeter),pch=15, main="Южная губа о. Ряшкова",
#ylim=c(min(N.mean.sqmeter)-max(N.sem.sqmeter), max(N.mean.sqmeter)+max(N.sem.sqmeter)),
ylim=c(0, max(N.mean.sqmeter)+max(N.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1), N.mean.sqmeter, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
x1=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
y0=N.mean.sqmeter-N.sem.sqmeter, y1=N.mean.sqmeter+N.sem.sqmeter, angle=90, code=3, length=0.1)
dev.off()
embedFonts("N_dynamic.pdf") #встройка шрифтов в файл
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Luvenga_Goreliy/")
#setwd("~/note_backup_2013-04-13/PhD_thesis/White_Sea/Luvenga_Goreliy//")
## размерная структура средние по годам по горизонтам
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
subset(size.str.df, size.str.df$year=="1995" & size.str.df$sample=="mg4")
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
write.table(assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i])), file=paste(levels(size.str.sqmeter$tidal_level)[i]), sep=",")
}
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal_level), length ))
(n.samples.df<-as.data.frame(n.samples))
#верхний горизонт
(mean.sqmeter.high<-t(tapply(high$Freq,INDEX=list(high$year,  high$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.high.df<-as.data.frame(mean.sqmeter.high)
(sd.sqmeter.high<-tapply(high$Freq,INDEX=list(high$year,  high$Length.int),FUN=sd, na.rm=T))
(sem.sqmeter.high <-t(sd.sqmeter.high/sqrt(n.samples.df$high)))
#TODO надо те строки где по одной пробе сделать вместо ошибки NA!!
sem.sqmeter.high.df<-as.data.frame(sem.sqmeter.high)
sem.sqmeter.high[sem.sqmeter.high==t(sd.sqmeter.high)]<-0
#средний горизонт
mean.sqmeter.middle<-t(tapply(middle$Freq,INDEX=list(middle$year,  middle$Length.int),FUN=mean, na.rm=T))
mean.sqmeter.middle.df<-as.data.frame(mean.sqmeter.middle)
sd.sqmeter.middle<-tapply(middle$Freq,INDEX=list(middle$year,  middle$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.middle <-t(sd.sqmeter.middle/sqrt(n.samples.df$middle))
sem.sqmeter.middle.df<-as.data.frame(sem.sqmeter.middle)
sem.sqmeter.middle[sem.sqmeter.middle==t(sd.sqmeter.middle)]<-0
#граница среднего и нижнего горизонта, в фукусах
mean.sqmeter.midlow<-t(tapply(midlow$Freq,INDEX=list(midlow$year,  midlow$Length.int),FUN=mean, na.rm=T))
mean.sqmeter.midlow.df<-as.data.frame(mean.sqmeter.midlow)
sd.sqmeter.midlow<-tapply(midlow$Freq,INDEX=list(midlow$year,  midlow$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.midlow <-t(sd.sqmeter.midlow/sqrt(n.samples.df$midlow))
sem.sqmeter.midlow.df<-as.data.frame(sem.sqmeter.midlow)
sem.sqmeter.midlow[sem.sqmeter.midlow==t(sd.sqmeter.midlow)]<-0
#нижний горизонт, у нуля глубин
(mean.sqmeter.low<-t(tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.low.df<-as.data.frame(mean.sqmeter.low)
sd.sqmeter.low<-tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low <-t(sd.sqmeter.low/sqrt(n.samples.df$low))
sem.sqmeter.low.df<-as.data.frame(sem.sqmeter.low)
sem.sqmeter.low[sem.sqmeter.low==t(sd.sqmeter.low)]<-0
length.class<-seq(1,20,1)
##size structure >1mm
#верхний горизонт
(mean.sqmeter2.high<-mean.sqmeter.middle[2:20,])
mean.sqmeter2.high.df<-as.data.frame(mean.sqmeter2.high)
(sd.sqmeter2.high<-sd.sqmeter.middle[,2:20])
(sem.sqmeter2.high <-t(sd.sqmeter2.high/sqrt(n.samples.df$high)))
#TODO надо те строки где по одной пробе сделать вместо ошибки NA!!
sem.sqmeter2.high.df<-as.data.frame(sem.sqmeter2.high)
sem.sqmeter2.high[sem.sqmeter2.high==t(sd.sqmeter2.high)]<-0
#средний горизонт
mean.sqmeter2.middle<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.middle.df<-as.data.frame(mean.sqmeter2.middle)
sd.sqmeter2.middle<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.middle <-t(sd.sqmeter2.middle/sqrt(n.samples.df$middle))
sem.sqmeter2.middle.df<-as.data.frame(sem.sqmeter2.middle)
sem.sqmeter2.middle[sem.sqmeter2.middle==t(sd.sqmeter2.middle)]<-0
#граница среднего и нижнего горизонта, в фукусах
mean.sqmeter2.midlow<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.midlow.df<-as.data.frame(mean.sqmeter2.midlow)
sd.sqmeter2.midlow<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.midlow <-t(sd.sqmeter2.midlow/sqrt(n.samples.df$midlow))
sem.sqmeter2.midlow.df<-as.data.frame(sem.sqmeter2.midlow)
sem.sqmeter2.midlow[sem.sqmeter2.midlow==t(sd.sqmeter2.midlow)]<-0
#нижний горизонт, у нуля глубин
mean.sqmeter2.low<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.low.df<-as.data.frame(mean.sqmeter2.low)
sd.sqmeter2.low<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.low <-t(sd.sqmeter2.low/sqrt(n.samples.df$low))
sem.sqmeter2.low.df<-as.data.frame(sem.sqmeter2.low)
sem.sqmeter2.low[sem.sqmeter2.low==t(sd.sqmeter2.low)]<-0
length.class2<-seq(2,20,1)
## динамика обилия
(N.sqmeter<-tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample, size.str.df$tidal_level), sum))
(N.mean.sqmeter<-apply(N.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=mean))
N.mean.sqmeter[11,3]<-NA
(N.sd.sqmeter<-apply(N.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=sd))
(N.sem.sqmeter<-N.sd.sqmeter/sqrt(n.samples))
N.sem.sqmeter[N.sem.sqmeter==N.sd.sqmeter]<-NA
## динамика без молод ( больше 2+)
(N2.sqmeter<-tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"],
size.str.df$tidal_level[size.str.sqmeter$Length.int!="(0,1]"]), sum))
(N2.mean.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=mean))
N2.mean.sqmeter[11,3]<-NA
(N2.sd.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=sd))
(N2.sem.sqmeter<-N2.sd.sqmeter/sqrt(n.samples))
N2.sem.sqmeter[N2.sem.sqmeter==N2.sd.sqmeter]<-NA
N.mean.sqmeter
(N.mean.sqmeter-N2.mean.sqmeter)/N.mean.sqmeter
max((N.mean.sqmeter-N2.mean.sqmeter)/N.mean.sqmeter)
max((N.mean.sqmeter-N2.mean.sqmeter)/N.mean.sqmeter, na.rm=T)
N.mean.sqmeter
source('~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Estuatiy_Luvenga/estuary_size_str.r', echo=TRUE)
plot(y=N2.mean.sqmeter, x=names(N2.mean.sqmeter),pch=15, main="Эстуарий р. Лувеньги",
ylim=c(min(N2.mean.sqmeter)-max(N2.sem.sqmeter), max(N2.mean.sqmeter)+max(N2.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
plot(y=N2.mean.sqmeter, x=names(N2.mean.sqmeter),pch=15, main="Эстуарий р. Лувеньги",
ylim=c(min(N2.mean.sqmeter)-max(N2.sem.sqmeter), max(N2.mean.sqmeter)+max(N2.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
plot(y=N2.mean.sqmeter[,1], x=as.numeric(rownames(N2.mean.sqmeter)), type="n", main="о. Горелый (Лувеньгские шхеры)",
#     ylim=c(min(N2.mean.sqmeter, na.rm=T)-max(N2.sem.sqmeter, na.rm=T), max(N2.mean.sqmeter, na.rm=T)+max(N2.sem.sqmeter, na.rm=T)),
ylim=c(0, max(N2.mean.sqmeter, na.rm=T)+max(N2.sem.sqmeter, na.rm=T)),
xlab="год", ylab="N, экз./кв.м")
line(as.numeric(rownames(N2.mean.sqmeter)), N2.mean.sqmeter[,1], pch=15, col=1, type="b"))
line(as.numeric(rownames(N2.mean.sqmeter)), N2.mean.sqmeter[,1], pch=15, col=1, type="b")
line(as.numeric(rownames(N2.mean.sqmeter)), N2.mean.sqmeter[,1])
lines(as.numeric(rownames(N2.mean.sqmeter)), N2.mean.sqmeter[,1])
lines(as.numeric(rownames(N2.mean.sqmeter)), N2.mean.sqmeter[,1], pch=15, col=1, type="b")
(N2.mean.sqmeter)
as.vector(N2.mean.sqmeter)
samples.names
(N2.sqmeter)
(N2.sqmeter)[!is.na(as.vector(N2.92.98))]
N2.sqmeter
as.vector(N2.sqmeter)[!is.na(as.vector(N2.92.98))]
as.vector(N2.sqmeter)[!is.na(as.vector(N2.sqmeter))]
N2.mean.sqmeter
kruskal.test(N2.92.98.df$as.vector.N2.92.98...is.na.as.vector.N2.92.98... ~ N2.92.98.df$year)
(N2.sqmeter)[!is.na(as.vector(N2.sqmeter))]
N2.sqmeter
samples.names
order(samples.names, samples.names$tidal_level)
sort(samples.names, samples.names$tidal_level)
(N2.sqmeter)[,1]
(N2.sqmeter)[,,1]
as.vector(N2.sqmeter)[,,1][!is.na(as.vector(N2.sqmeter)[,,1])])
as.vector(N2.sqmeter)[,,1][!is.na(as.vector(N2.sqmeter)[,,1])]
(N2.sqmeter)[,,1]
as.vector(N2.sqmeter)[,,1][!is.na(as.vector(N2.sqmeter))]
N2.sqmeter.high<-(N2.sqmeter)[,,1]
(N2.sqmeter.high)[!is.na(as.vector(N2.sqmeter.high))]
(N2.sqmeter.high)
t(N2.sqmeter.high)
N2.92.12.df.high<-data.frame(subset(samples.names, samples.names$tidal_level="high"),as.vector(t(N2.sqmeter.high))[!is.na(as.vector(t(N2.sqmeter.high)))])
N2.92.12.df.high<-data.frame(subset(samples.names, samples.names$tidal_level=="high"),as.vector(t(N2.sqmeter.high))[!is.na(as.vector(t(N2.sqmeter.high)))])
subset(samples.names, samples.names$tidal_level=="high")
t(N2.sqmeter.high)
sort(subset(samples.names, samples.names$tidal_level=="high"))
subset(samples.names, samples.names$tidal_level=="high")
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
N2.92.12.df.high<-data.frame(subset(samples.names, samples.names$tidal_level=="high"),as.vector(t(N2.sqmeter.high))[!is.na(as.vector(t(N2.sqmeter.high)))])
as.vector(t(N2.sqmeter.high))[!is.na(as.vector(t(N2.sqmeter.high)))]
length(as.vector(t(N2.sqmeter.high))[!is.na(as.vector(t(N2.sqmeter.high)))])
setwd("~/Dropbox/PhD_thesis/PhD_thesis/Barenc_Sea/Dalnezeleneckaya/")
#setwd("~/note_backup_2013-04-13/PhD_thesis/White_Sea/Estuatiy_Luvenga")
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
attach(ishodnik)
## размерная структура суммарно по годам по горизонтам
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
n.samples<-tapply(samples.names$sample,samples.names$year, length )
#subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1992")
#и среднее??
# tapply выдает как резудьтат матрицу
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
##>2mm mean size structure
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
length.class<-seq(1,20,1)
length.class2<-seq(2,20,1)
##динамика обилия
(N.sqmeter<-(t(tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample), sum))))
(N.mean.sqmeter<-colMeans(N.sqmeter, na.rm=T))
(N.sd.sqmeter<-apply(N.sqmeter, 2, sd, na.rm=T))
(N.sem.sqmeter<-N.sd.sqmeter/sqrt(n.samples))
#точность учета
(D.n<-N.sem.sqmeter/N.mean.sqmeter*100)
##динамика без молод ( больше 2+)
(N2.sqmeter<-(t(tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"]), sum))))
(N2.mean.sqmeter<-colMeans(N2.sqmeter, na.rm=T))
N2.sd.sqmeter<-apply(N2.sqmeter, 2, sd, na.rm=T)
N2.sem.sqmeter<-N2.sd.sqmeter/sqrt(n.samples)
#точность учета
(D.n2<-N2.sem.sqmeter/N2.mean.sqmeter*100)
(N.mean.sqmeter-N2.mean.sqmeter)/N.mean.sqmeter
read.table("Agarova_1973.csv", head=T, sep=";", dec=",")
Ararova.ish<-read.table("Agarova_1973.csv", head=T, sep=";", dec=",")
Agarova.ish<-read.table("Agarova_1973.csv", head=T, sep=";", dec=",")
Agarova.ish$N.indd*Agarova.ish$vstrechaemost
(Agarova.73.mean<-sum(Agarova.ish$N.indd*Agarova.ish$vstrechaemost)/sum(Agarova.ish$vstrechaemost))
Agarova.73.sd<-sd(Agarova.ish$N.indd)
Agarova.73.sem<-Agarova.73.sd/sqrt(length(Agarova.ish$N.indd))
(Agarova.73.sem<-Agarova.73.sd/sqrt(length(Agarova.ish$N.indd)))
names(N.mean.sqmeter)
(N.mean.72.02.08<-c(Agarova.73.mean, N.mean.sqmeter, names<-c("1973", names(N.mean.sqmeter))))
Agarova.73.mean
N.mean.sqmeter
(N.mean.72.02.08<-c(Agarova.73.mean, N.mean.sqmeter)
)
names(N.mean.72.02.08)<-c("1973", names(N.mean.sqmeter))))
names(N.mean.72.02.08)<-c("1973", names(N.mean.sqmeter)))
names(N.mean.72.02.08)<-c("1973", names(N.mean.sqmeter))
N.mean.72.02.08
(N.sem.72.02.08<-c(Agarova.73.sem, N.sem.sqmeter))
names(N.sem.72.02.08)<-c("1973", names(N.sem.sqmeter))
plot(y=N.mean.72.02.08, x=names(N.mean.72.02.08),pch=15, main="Эстуарий р. Лувеньги",
ylim=c(min(N.mean.72.02.08)-max(N.sem.72.02.08), max(N.mean.72.02.08)+max(N.sem.72.02.08)),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(names(N.mean.72.02.08))),as.numeric(max(names(N.mean.72.02.08))),1), N.mean.72.02.08, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(N.mean.72.02.08))),as.numeric(max(names(N.mean.72.02.08))),1),
x1=seq(as.numeric(min(names(N.mean.72.02.08))),as.numeric(max(names(N.mean.72.02.08))),1),
y0=N.mean.72.02.08-N.sem.72.02.08, y1=N.mean.72.02.08+N.sem.72.02.08, angle=90, code=3, length=0.1)
pdf(file="N_dynamic.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=N.mean.sqmeter, x=names(N.mean.sqmeter),pch=15, main="г. Дальнезеленецкая",
ylim=c(min(N.mean.sqmeter)-max(N.sem.sqmeter), max(N.mean.sqmeter)+max(N.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1), N.mean.sqmeter, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
x1=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
y0=N.mean.sqmeter-N.sem.sqmeter, y1=N.mean.sqmeter+N.sem.sqmeter, angle=90, code=3, length=0.1)
dev.off()
embedFonts("N_dynamic.pdf") #встройка шрифтов в файл
pdf(file="N2_dynamic.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=N2.mean.sqmeter, x=names(N2.mean.sqmeter),pch=15, main="г. Дальнезеленецкая",
ylim=c(min(N2.mean.sqmeter)-max(N2.sem.sqmeter), max(N2.mean.sqmeter)+max(N2.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(names(N2.mean.sqmeter))),as.numeric(max(names(N2.mean.sqmeter))),1), N2.mean.sqmeter, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(N2.mean.sqmeter))),as.numeric(max(names(N2.mean.sqmeter))),1),
x1=seq(as.numeric(min(names(N2.mean.sqmeter))),as.numeric(max(names(N2.mean.sqmeter))),1),
y0=N2.mean.sqmeter-N2.sem.sqmeter, y1=N2.mean.sqmeter+N2.sem.sqmeter, angle=90, code=3, length=0.1)
dev.off()
embedFonts("N2_dynamic.pdf") #встройкашрифтов в файл
as.numeric(names(N.mean.72.02.08))
plot(y=N.mean.72.02.08, x=names(N.mean.72.02.08),pch=15, main="г. Дальнезеленецкая",
xlab="год", ylab="N, экз./кв.м")
lines(as.numeric(names(N.mean.72.02.08)), N.mean.72.02.08, pch=1, type="b")
plot(y=N.mean.72.02.08, x=names(N.mean.72.02.08),pch=15, main="г. Дальнезеленецкая",
xlim=as.numeric(names(N.mean.72.02.08))
xlab="год", ylab="N, экз./кв.м")
lines(as.numeric(names(N.mean.72.02.08)), N.mean.72.02.08, pch=1, type="b")
plot(y=N.mean.72.02.08, x=names(N.mean.72.02.08),pch=15, main="г. Дальнезеленецкая",
xlim=as.numeric(names(N.mean.72.02.08)),
xlab="год", ylab="N, экз./кв.м")
lines(as.numeric(names(N.mean.72.02.08)), N.mean.72.02.08, pch=1, type="b")
plot(y=N.mean.sqmeter, x=names(N.mean.sqmeter),pch=15, main="г. Дальнезеленецкая",
ylim=c(min(N.mean.sqmeter)-max(N.sem.sqmeter), max(N.mean.sqmeter)+max(N.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1), N.mean.sqmeter, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
x1=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
y0=N.mean.sqmeter-N.sem.sqmeter, y1=N.mean.sqmeter+N.sem.sqmeter, angle=90, code=3, length=0.1)
abline(h=Agarova.73.mean)
Agarova.73.mean
Agarova.ish<-read.table("Agarova_1973.csv", head=T, sep=";", dec=",")
Agarova.ish
plot(y=N.mean.sqmeter, x=names(N.mean.sqmeter),pch=15, main="г. Дальнезеленецкая",
ylim=c(min(N.mean.sqmeter)-max(N.sem.sqmeter), max(N.mean.sqmeter)+max(N.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1), N.mean.sqmeter, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
x1=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
y0=N.mean.sqmeter-N.sem.sqmeter, y1=N.mean.sqmeter+N.sem.sqmeter, angle=90, code=3, length=0.1)
abline(h=Agarova.73.mean, pch=3)
abline(h=Agarova.73.mean,lty=2)
plot(y=N.mean.sqmeter, x=names(N.mean.sqmeter),pch=15, main="г. Дальнезеленецкая",
ylim=c(min(N.mean.sqmeter)-max(N.sem.sqmeter), max(N.mean.sqmeter)+max(N.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1), N.mean.sqmeter, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
x1=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
y0=N.mean.sqmeter-N.sem.sqmeter, y1=N.mean.sqmeter+N.sem.sqmeter, angle=90, code=3, length=0.1)
abline(h=Agarova.73.mean,lty=2)
abline(h=Agarova.73.mean+Agarova.73.sem,lty=6))
abline(h=Agarova.73.mean+Agarova.73.sem,lty=6)
abline(h=Agarova.73.mean-Agarova.73.sem,lty=6)
plot(y=N.mean.sqmeter, x=names(N.mean.sqmeter),pch=15, main="г. Дальнезеленецкая",
ylim=c(Agarova.73.mean-Agarova.73.sem, max(N.mean.sqmeter)+max(N.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1), N.mean.sqmeter, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
x1=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
y0=N.mean.sqmeter-N.sem.sqmeter, y1=N.mean.sqmeter+N.sem.sqmeter, angle=90, code=3, length=0.1)
abline(h=Agarova.73.mean,lty=2)
abline(h=Agarova.73.mean+Agarova.73.sem,lty=6)
abline(h=Agarova.73.mean-Agarova.73.sem,lty=6)
pdf(file="N_dynamic_with_Agarova.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=N.mean.sqmeter, x=names(N.mean.sqmeter),pch=15, main="г. Дальнезеленецкая",
ylim=c(Agarova.73.mean-Agarova.73.sem, max(N.mean.sqmeter)+max(N.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1), N.mean.sqmeter, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
x1=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
y0=N.mean.sqmeter-N.sem.sqmeter, y1=N.mean.sqmeter+N.sem.sqmeter, angle=90, code=3, length=0.1)
abline(h=Agarova.73.mean,lty=2)
abline(h=Agarova.73.mean+Agarova.73.sem,lty=6)
abline(h=Agarova.73.mean-Agarova.73.sem,lty=6)
dev.off()
embedFonts("N_dynamic_with_Agarova.pdf") #встройка шрифтов в файл
(N2.df<-data.frame(samples.names, as.vector(N2.sqmeter)[!is.na(as.vector(N2.sqmeter))]))
N2.sqmeter
samples.names
as.vector(N2.sqmeter)[!is.na(as.vector(N2.sqmeter))]
data.frame(samples.names, as.vector(N2.sqmeter))
(N2.df<-data.frame(samples.names, as.vector(N2.sqmeter)[!is.na(as.vector(N2.sqmeter))]))
## size structure plot
#from R-book
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
error.bars(yv=Agarova.73.mean, z=Agarova.73.sem, nn=names(Agarova.73.mean), main="г. Дальнезеленецкая")
error.bars(yv=Agarova.73.mean, z=Agarova.73.sem, nn=names(Agarova.73.mean))
error.bars(yv=N.mean.72.02.08, z=N.sem.72.02.08, nn=names(N.mean.72.02.08))
## size structure plot
#from R-book
error.bars1<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn,ylab=ylabel)
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
error.bars1<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn,ylab=ylabel)
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
error.bars1(yv=N.mean.72.02.08, z=N.sem.72.02.08, nn=names(N.mean.72.02.08), ylabel="N, экз./кв.м")
error.bars1<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn,ylab)
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
error.bars1(yv=N.mean.72.02.08, z=N.sem.72.02.08, nn=names(N.mean.72.02.08), ylab="N")
pdf(file="N_dynamic_with_Agarova.pdf", family="NimbusSan") # указываем шрифт подпией
error.bars(yv=N.mean.72.02.08, z=N.sem.72.02.08, nn=names(N.mean.72.02.08))
title(main=)
dev.off()
embedFonts("N_dynamic_with_Agarova.pdf") #встройка шрифтов в файл
samples.names
N2.sqmeter
as.vector(N2.sqmeter)
as.vector(N2.sqmeter)[!is.na(as.vector(N2.sqmeter))]
(N2.df<-data.frame(samples.names, as.vector(N2.sqmeter)[!is.na(as.vector(N2.sqmeter))]))
is.matrix(N2.sqmeter)
as.table(N2.sqmeter)
as.data.frame(as.table(N2.sqmeter))
(N2.df<-as.data.frame(as.table(N2.sqmeter))
)
kruskal.test(N2.df$Freq ~ N2.df$Var2)
boxplot(N2.df$Freq ~ N2.df$Var2)
(tukey.02.12<-TukeyHSD(aov(lm(N2.df$Freq ~ as.factor(N2.df$Var2)))))
write.table(tukey.02.12$'as.factor(N2.df$Var2)', file="tukey_02_12.csv", dec=",", sep=";")
N2.df
(N2.02.06.df<-subset(N2.df, N2.df$Var2==2002:2008))
(N2.02.06.df<-subset(N2.df, N2.df$Var2==2002))
(N2.02.06.df<-subset(N2.df, N2.df$Var2==2002 : N2.df$Var2==2006 ))
(N2.02.06.df<-subset(N2.df, N2.df$Var2==2002 & N2.df$Var2==2006 ))
(N2.02.06.df<-subset(N2.df, N2.df$Var2==2002 & 2006 ))
(N2.02.06.df<-subset(N2.df, N2.df$Var2==2002 | N2.df$Var2==2006 ))
(N2.02.06.df<-subset(N2.df, N2.df$Var2==2002 | 2006 ))
(N2.02.06.df<-subset(N2.df, N2.df$Var2==2002 | N2.df$Var2==2003 | N2.df$Var2==2004 | N2.df$Var2==2005| N2.df$Var2==2006 ))
kruskal.test(N2.02.06.df$Freq ~ N2.02.06.df$Var2)
(N2.03.06.df<-subset( N2.df$Var2==2003 | N2.df$Var2==2004 | N2.df$Var2==2005| N2.df$Var2==2006 ))
kruskal.test(N2.03.06.df$Freq ~ N2.03.06.df$Var2)
(N2.03.06.df<-subset(N2.df, N2.df$Var2==2003 | N2.df$Var2==2004 | N2.df$Var2==2005| N2.df$Var2==2006 ))
kruskal.test(N2.03.06.df$Freq ~ N2.03.06.df$Var2)
boxplot(N2.02.06.df$Freq ~ N2.02.06.df$Var2)
boxplot(N2.03.06.df$Freq ~ N2.03.06.df$Var2)
(N2.04.06.df<-subset(N2.df, N2.df$Var2==2004 | N2.df$Var2==2005| N2.df$Var2==2006 ))
kruskal.test(N2.04.06.df$Freq ~ N2.04.06.df$Var2)
mean(N2.04.06.df, na.rm=T)
mean(N2.04.06.df$Freq, na.rm=T)
N2.04.06.sd<-sd(N2.04.06.df$Freq, na.rm=T)
N2.04.06.sem<-N2.04.06.sd/sum(!is.na(N2.04.06.df$Freq))
N2.04.06.mean<-mean(N2.04.06.df$Freq, na.rm=T)
N2.04.06.d<-N2.04.06.sem/N2.04.06.mean
N2.04.06.d
N2.04.06.sem<-N2.04.06.sd/sum(!is.na(N2.04.06.df$Freq))
N2.04.06.sem
sum(!is.na(N2.04.06.df$Freq))
N2.sqmeter
N2.mean.sqmeter
N2.d.sqmeter
N2.sem.sqmeter/N2.mean.sqmeter
subset(N2.df, N2.df$Var2==2002,select=Freq)
N2.df
wilcox.test(subset(N2.df, N2.df$Var2==2002,select=Freq), subset(N2.df, N2.df$Var2==2003,select=Freq), na.rm=T)
wilcox.test(as.vector(subset(N2.df, N2.df$Var2==2002,select=Freq)), as.vector(subset(N2.df, N2.df$Var2==2003,select=Freq)), na.rm=T)
as.vector(subset(N2.df, N2.df$Var2==2002,select=Freq))
N2.2002<-as.vector(subset(N2.df, N2.df$Var2==2002,select=Freq))
is.vector(N2.2002)
is.data.frame(N2.2002)
(subset(N2.df, N2.df$Var2==2002,select=Freq)$Freq
)
wilcox.test((subset(N2.df, N2.df$Var2==2002,select=Freq))$Freq, (subset(N2.df, N2.df$Var2==2003,select=Freq))$Freq, na.rm=T)
wilcox.test((subset(N2.df, N2.df$Var2==2004 | N2.df$Var2==2005| N2.df$Var2==2006 ),select=Freq))$Freq,
(subset(N2.df, N2.df$Var2==2003,select=Freq))$Freq, na.rm=T)
wilcox.test((subset(N2.df, N2.df$Var2==2004 | N2.df$Var2==2005| N2.df$Var2==2006 ),select=Freq))$Freq, (subset(N2.df, N2.df$Var2==2003,select=Freq))$Freq, na.rm=T)
wilcox.test((subset(N2.df, N2.df$Var2==2004 | N2.df$Var2==2005| N2.df$Var2==2006 ,select=Freq))$Freq, (subset(N2.df, N2.df$Var2==2003,select=Freq))$Freq, na.rm=T)
(N2.07.08.df<-subset(N2.df, N2.df$Var2==2007 | N2.df$Var2==2008))
kruskal.test(N2.07.08.df$Freq ~ N2.07.08.df$Var2)
wilcox.test((subset(N2.df, N2.df$Var2==2007,select=Freq))$Freq, (subset(N2.df, N2.df$Var2==2008,select=Freq))$Freq, na.rm=T)
wilcox.test((subset(N2.df, N2.df$Var2==2004 | N2.df$Var2==2005| N2.df$Var2==2006 ,select=Freq))$Freq,
(subset(N2.df, N2.df$Var2==2007| N2.df$Var2==2008,select=Freq))$Freq, na.rm=T)
(N2.07.08.df<-subset(N2.df, N2.df$Var2==2008 | N2.df$Var2==2007))
(N2.07.08.mean<-mean(N2.07.08.df$Freq, na.rm=T))
N2.07.08.sd<-sd(N2.07.08.df$Freq, na.rm=T)
N2.07.08.sem<-N2.07.08.sd/sum(!is.na(N2.07.08.df$Freq))
(N2.07.08.d<-N2.07.08.sem/N2.07.08.mean)
N2.sqmeter
N2.mean.sqmeter
Agarova.73.mean
wilcox.test(Agarova.ish, (subset(N2.df, N2.df$Var2==2003,select=Freq))$Freq, na.rm=T)
wilcox.test(Agarova.ish$N.indd, (subset(N2.df, N2.df$Var2==2003,select=Freq))$Freq, na.rm=T)
wilcox.test(Agarova.ish$N.indd, (subset(N2.df, N2.df$Var2==2002,select=Freq))$Freq, na.rm=T)
wilcox.test((subset(N2.df, N2.df$Var2==2004 | N2.df$Var2==2005| N2.df$Var2==2006 ,select=Freq))$Freq, Agarova.ish$N.indd, na.rm=T)
wilcox.test((subset(N2.df, N2.df$Var2==2004 | N2.df$Var2==2005| N2.df$Var2==2006 ,select=Freq))$Freq, Agarova.ish$N.indd, na.rm=T)
wilcox.test(Agarova.ish$N.indd, (subset(N2.df, N2.df$Var2==2007| N2.df$Var2==2008,select=Freq))$Freq, na.rm=T)
wilcox.test(Agarova.ish$N.indd, (subset(N2.df, N2.df$Var2==2002,select=Freq))$Freq, na.rm=T)
wilcox.test(Agarova.ish$N.indd, (subset(N2.df, N2.df$Var2==2002,select=Freq))$Freq, na.rm=T)
wilcox.test(Agarova.ish$N.indd, (subset(N2.df, N2.df$Var2==2003,select=Freq))$Freq, na.rm=T)
wilcox.test((subset(N2.df, N2.df$Var2==2004 | N2.df$Var2==2005| N2.df$Var2==2006 ,select=Freq))$Freq, Agarova.ish$N.indd, na.rm=T)
wilcox.test(Agarova.ish$N.indd, (subset(N2.df, N2.df$Var2==2007| N2.df$Var2==2008,select=Freq))$Freq, na.rm=T)
