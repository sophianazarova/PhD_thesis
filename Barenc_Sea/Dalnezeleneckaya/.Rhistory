hist(ishodnik$Length.mm[ishodnik$age==1], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="Размеры особоей возраста 1+", xlab="L,мм", ylab="N, экз.")
hist(ishodnik$Length.mm[ishodnik$age==2], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="Размеры особоей возраста 2+", xlab="L,мм", ylab="N, экз.")
par(mfrow=c(2,1))
hist(ishodnik$Length.mm[ishodnik$age==1], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="Размеры особоей возраста 1+", xlab="L,мм", ylab="N, экз.")
hist(ishodnik$Length.mm[ishodnik$age==2], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="Размеры особоей возраста 2+", xlab="L,мм", ylab="N, экз.")
pdf(file="hist_1year_2year.pdf", family="NimbusSan") # указываем шрифт подпией
par(mfrow=c(2,1))
hist(ishodnik$Length.mm[ishodnik$age==1], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="Размеры особоей возраста 1+", xlab="L,мм", ylab="N, экз.")
hist(ishodnik$Length.mm[ishodnik$age==2], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="Размеры особоей возраста 2+", xlab="L,мм", ylab="N, экз.")
dev.off()
embedFonts("hist_1year_2year.pdf") #встройка шрифтов в файл
par(mfrow=c(1,1))
pdf(file="hist_1year_2year.pdf", family="NimbusSan") # указываем шрифт подпией
par(mfrow=c(2,1))
hist(ishodnik$Length.mm[ishodnik$age==1], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="1+", xlab="L,мм", ylab="N, экз.")
hist(ishodnik$Length.mm[ishodnik$age==2], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="2+", xlab="L,мм", ylab="N, экз.")
dev.off()
embedFonts("hist_1year_2year.pdf") #встройка шрифтов в файл
par(mfrow=c(1,1))
dev.off()
boxplot(ishodnik$Length.mm ~ ishodnik$age)
boxplot(ishodnik$Length.mm ~ ishodnik$age, main="длина раковины Macoma balthica разного возраста в июле 2012 года")
boxplot(ishodnik$Length.mm ~ ishodnik$age, main="длина раковины Macoma balthica разного возраста в июле 2012 года", xlab="возраст", ylab="L, мм")
pdf(file="boxplot_length_in_year.pdf", family="NimbusSan") # указываем шрифт подпией
boxplot(ishodnik$Length.mm ~ ishodnik$age, main="длина раковины Macoma balthica разного возраста в июле 2012 года", xlab="возраст", ylab="L, мм")
dev.off()
embedFonts("boxplot_length_in_year.pdf") #встройка шрифтов в файл
boxplot(ishodnik$Length.mm[ishodnik$age==1] ~ ishodnik$area, main="", xlab="L,мм", ylab="N, экз.")
boxplot(ishodnik$Length.mm[ishodnik$age==1] ~ ishodnik$area[ishodnik$age==1], main="", xlab="L,мм", ylab="N, экз.")
#boxplot по участкам (1+)
pdf(file="boxplot_length_1+_area.pdf", family="NimbusSan") # указываем шрифт подпией
boxplot(ishodnik$Length.mm[ishodnik$age==1] ~ ishodnik$area[ishodnik$age==1], main="длина раковины Macoma balthica на разных участках", xlab="участок", ylab="L,мм")
dev.off()
embedFonts("boxplot_length_1+_area.pdf") #встройка шрифтов в файл
boxplot(ishodnik$k1 ~ ishodnik$area, main="длина первого кольца Macoma balthica на разных участках", xlab="участок", ylab="L,мм")
pdf(file="boxplot_length_1kolco_area.pdf", family="NimbusSan") # указываем шрифт подпией
boxplot(ishodnik$k1 ~ ishodnik$area, main="длина первого кольца Macoma balthica на разных участках", xlab="участок", ylab="L,мм")
dev.off()
embedFonts("boxplot_length_1kolco_area.pdf") #встройка шрифтов в файл
boxplot(ishodnik$k1 ~ ishodnik$age, main="длина первого кольца у разных генераций Macoma balthica", xlab="возраст", ylab="L,мм")
pdf(file="boxplot_length_1kolco_age.pdf", family="NimbusSan") # указываем шрифт подпией
boxplot(ishodnik$k1 ~ ishodnik$age, main="длина первого кольца у разных генераций Macoma balthica", xlab="возраст", ylab="L,мм")
dev.off()
embedFonts("boxplot_length_1kolco_age.pdf") #встройка шрифтов в файл
anova(lm(ishodnik$k1 ~ ishodnik$area * ishodnik$age))
oneway.test(ishodnik$k1 ~ ishodnik$area * ishodnik$age))
oneway.test(ishodnik$k1 ~ ishodnik$area * ishodnik$age)
anova(lm(ishodnik$Length.mm[ishodnik$age==1] ~ ishodnik$area[ishodnik$age==1]))
oneway.test(ishodnik$Length.mm[ishodnik$age==1] ~ ishodnik$area[ishodnik$age==1])
kruskal.test(ishodnik$Length.mm[ishodnik$age==1] ~ ishodnik$area[ishodnik$age==1])
write.table(anova_k1)
anova(lm(ishodnik$k1 ~ ishodnik$area * ishodnik$age))
dev.off()
write.table(anova(lm(ishodnik$k1 ~ ishodnik$area * ishodnik$age)), file="anova_k1.csv")
write.table(anova(lm(ishodnik$Length.mm[ishodnik$age==1] ~ ishodnik$area[ishodnik$age==1])), file="anova_1+.csv")
write.table(anova(lm(ishodnik$k1 ~ ishodnik$area * ishodnik$age)), file="anova_k1.csv", sep=";", dec=",")
write.table(anova(lm(ishodnik$Length.mm[ishodnik$age==1] ~ ishodnik$area[ishodnik$age==1])), file="anova_1+.csv", sep=";", dec=",")
summary(ishodnik)
summary(ishodnik$Length.mm[ishodnik$age==1])
norm_1<-rnorm(n=1000,mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]))
hist(norm_1)
curve(norm_1, add=T)
curve(dnorm(ishodnik$Length.mm[ishodnik$age==1]), add=T)
curve(dnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]), add=T)
)
curve(dnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1])), sd=sd(ishodnik$Length.mm[ishodnik$age==1]), add=T)
curve(dnorm(x,mean=mean(ishodnik$Length.mm[ishodnik$age==1])), sd=sd(ishodnik$Length.mm[ishodnik$age==1]), add=T)
curve(dnorm(norm_1,mean=mean(ishodnik$Length.mm[ishodnik$age==1])), sd=sd(ishodnik$Length.mm[ishodnik$age==1]), add=T)
curve(dnorm(norm_1), add=T)
curve(dnorm(norm_1))
curve(x=norm_1)
x<-rnorm(n=1000,mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]))
curve(x, add=T)
curve(dnorm(x), add=T)
dnorm(x)
mean(ishodnik$Length.mm[ishodnik$age==1])
sd(ishodnik$Length.mm[ishodnik$age==1])
hist(x)
curve(dnorm(x), add=T)
curve(dnorm(x))
curve(hist(x))
curve(hist(x, plot=F))
hist(ishodnik$Length.mm[ishodnik$age==1])
norm_1<-rnorm(n=1000,mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]))
hist(norm_1)
norm_1<-rnorm(n=10000,mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]))
hist(norm_1)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),p=0.95)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),p=0.99)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),p=0.95)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),p=0.05)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=2)+pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=2.1)+pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=2.1)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=1.9)+pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=1.9)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=2)+pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=2)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),p=0.94)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),p=0.06)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),p=0.03)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),p=0.09)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),p=0.1)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),p=0.12)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=2)+pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=2)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),p=0.95)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),p=0.05)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),p=0.90)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),p=0.1)
?rnorm
(mean(ishodnik$Length.mm[ishodnik$age==2])*(sd(ishodnik$Length.mm[ishodnik$age==1]))^2-
mean(ishodnik$Length.mm[ishodnik$age==1])*(sd(ishodnik$Length.mm[ishodnik$age==2]))^2/
((sd(ishodnik$Length.mm[ishodnik$age==1]))^2(sd(ishodnik$Length.mm[ishodnik$age==2]))^2)
)
(mean(ishodnik$Length.mm[ishodnik$age==2])*(sd(ishodnik$Length.mm[ishodnik$age==1]))^2-mean(ishodnik$Length.mm[ishodnik$age==1])*(sd(ishodnik$Length.mm[ishodnik$age==2]))^2)/((sd(ishodnik$Length.mm[ishodnik$age==1]))^2(sd(ishodnik$Length.mm[ishodnik$age==2]))^2)
x<-rnorm(n=10000, mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]))
curve(dnorm(x))
curve(pnorm(x))
curve(qnorm(x))
curve(rnorm(x))
x<-rnorm(n=10000, mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]))
hist(x)
curve(norm(x), add=T)
plot(x)
hist(x)
curve(dnorm(x), add=T)
curve(dnorm(x), add=TRUE)
curve(dnorm(x))
x
curve(dnorm(x1))
x<-rnorm(n=1000, mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]))
curve(dnorm(x))
h <- hist(x, plot=F)
ylim <- range(0, h$density, dnorm(0))
hist(x, freq=F, ylim=ylim)
curve(dnorm(x), add=T)
x1<-rnorm(n=10000, mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]))
x2<-rnorm(n=10000, mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]))
h1 <- hist(x1, plot=F)
h2 <- hist(x2, plot=F)
h1$density
dnorm(0)
plot(h1$density)
plot(h1$density, pch=1,c=2)
points(h2$density, pch=1,c=3)
plot(h1$density, pch=1,c=2)
dev.off()
dev.off()
plot(h1$density, pch=1,c=2)
plot(h1$density, pch=1,col=2)
points(h2$density, pch=1,col=3)
mean=mean(ishodnik$Length.mm[ishodnik$age==1])
mean(ishodnik$Length.mm[ishodnik$age==1])
mean(ishodnik$Length.mm[ishodnik$age==2])
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),p=0.95)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),p=0.05)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=2)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),p=0.90)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),p=0.1)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=1.9)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=1.
)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=1.9)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=1.9)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=2)
mu2=mean(ishodnik$Length.mm[ishodnik$age==2]),
sigma2=sd(ishodnik$Length.mm[ishodnik$age==2]
mu1=mean(ishodnik$Length.mm[ishodnik$age==1])
sigma1=sd(ishodnik$Length.mm[ishodnik$age==1])
(mu2*sigma1^2-mu1*sigma2^2)/(sigma1^2-sigma2^2)
mu2=mean(ishodnik$Length.mm[ishodnik$age==2])
(mu2*sigma1^2-mu1*sigma2^2)/(sigma1^2-sigma2^2)
mu1=mean(ishodnik$Length.mm[ishodnik$age==1])
sigma2=sd(ishodnik$Length.mm[ishodnik$age==2]
sigma1=sd(ishodnik$Length.mm[ishodnik$age==1])
sigma2=sd(ishodnik$Length.mm[ishodnik$age==2])
(mu2*sigma1^2-mu1*sigma2^2)/(sigma1^2-sigma2^2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=2)
qnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),p=0.1281114)
var.test(ishodnik$Length.mm[ishodnik$age==1], ishodnik$Length.mm[ishodnik$age==2])
sd(ishodnik$Length.mm[ishodnik$age==1])
sd(ishodnik$Length.mm[ishodnik$age==2])
shapiro.test(ishodnik$Length.mm[ishodnik$age==1])
shapiro.test(ishodnik$Length.mm[ishodnik$age==2])
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=1.9)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=1.9)
ishodnik$area
shapiro.test(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area == "Estuary"])
shapiro.test(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area == "ZRS"])
shapiro.test(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area == "Goreliy"])
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2]), sd=sd(ishodnik$Length.mm[ishodnik$age==2]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1]), sd=sd(ishodnik$Length.mm[ishodnik$age==1]),q=2)
hist(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area=="Estuary"], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="1+", xlab="L,мм", ylab="N, экз.")
# гистограмма 1+ и 2+ эстуарий
pdf(file="hist_Estuary_1year_2year.pdf", family="NimbusSan") # указываем шрифт подпией
par(mfrow=c(2,1))
hist(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area=="Estuary"], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="1+", xlab="L,мм", ylab="N, экз.")
hist(ishodnik$Length.mm[ishodnik$age==2 & ishodnik$area=="Estuary"], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="2+", xlab="L,мм", ylab="N, экз.")
dev.off()
embedFonts("hist_Estuary_1year_2year.pdf") #встройка шрифтов в файл
par(mfrow=c(1,1))
hist(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area=="Goreliy"], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="1+", xlab="L,мм", ylab="N, экз.")
# гистограмма 1+ и 2+ горелый
pdf(file="hist_Goreliy_1year_2year.pdf", family="NimbusSan") # указываем шрифт подпией
par(mfrow=c(2,1))
hist(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area=="Goreliy"], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="1+", xlab="L,мм", ylab="N, экз.")
hist(ishodnik$Length.mm[ishodnik$age==2 & ishodnik$area=="Goreliy"], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="2+", xlab="L,мм", ylab="N, экз.")
dev.off()
embedFonts("hist_Goreliy_1year_2year.pdf") #встройка шрифтов в файл
par(mfrow=c(1,1))
pdf(file="hist_ZRS_1year_2year.pdf", family="NimbusSan") # указываем шрифт подпией
par(mfrow=c(2,1))
hist(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area=="ZRS"], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="1+", xlab="L,мм", ylab="N, экз.")
hist(ishodnik$Length.mm[ishodnik$age==2 & ishodnik$area=="ZRS"], breaks=seq(min(ishodnik$Length.mm), max(ishodnik$Length.mm), 0.1), main="2+", xlab="L,мм", ylab="N, экз.")
dev.off()
embedFonts("hist_ZRS_1year_2year.pdf") #встройка шрифтов в файл
par(mfrow=c(1,1))
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2 & ishodnik$area=="Goreliy"]), sd=sd(ishodnik$Length.mm[ishodnik$age==2 & ishodnik$area=="Goreliy"]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area=="Goreliy"]), sd=sd(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area=="Goreliy"]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2 & ishodnik$area=="Estuary"]), sd=sd(ishodnik$Length.mm[ishodnik$age==2 & ishodnik$area=="Estuary"]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area=="Estuary"]), sd=sd(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area=="Estuary"]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2 & ishodnik$area=="ZRS"]), sd=sd(ishodnik$Length.mm[ishodnik$age==2 & ishodnik$area=="ZRS"]),q=2)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area=="ZRS"]), sd=sd(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$area=="ZRS"]),q=2)
setwd("~/Dropbox/PhD_thesis/PhD_thesis/Barenc_Sea/Dalnezeleneckaya/")
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
attach(ishodnik)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
n.samples<-tapply(samples.names$sample,samples.names$year, length )
#subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1992")
#и среднее??
# tapply выдает как резудьтат матрицу
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
##>2mm mean size structure
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
length.class<-seq(1,20,1)
length.class2<-seq(2,20,1)
## size structure plot
#from R-book
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
attach(ishodnik)
## размерная структура суммарно по годам по горизонтам
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
n.samples<-tapply(samples.names$sample,samples.names$year, length )
#subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1992")
#и среднее??
# tapply выдает как резудьтат матрицу
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
##>2mm mean size structure
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
length.class<-seq(1,20,1)
length.class2<-seq(2,20,1)
## size structure plot
#from R-book
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
for (j in 1:length(colnames(mean.sizestr.sqmeter)))
{
pdf(file=paste("DZ", colnames(mean.sizestr.sqmeter)[j], ".pdf",sep="_"))
error.bars(yv=mean.sizestr.sqmeter[,j], nn=length.class, z=sem.sizestr.sqmeter[,j])
title(main=colnames(mean.sizestr.sqmeter)[j], xlab="", ylab="")
dev.off()
}
#>2mm
for (j in 1:length(colnames(mean.sizestr.sqmeter2)))
{
pdf(file=paste("DZ2", colnames(mean.sizestr.sqmeter2)[j], ".pdf",sep="_"))
error.bars(yv=mean.sizestr.sqmeter2[,j], nn=length.class2, z=sem.sizestr.sqmeter2[,j])
title(main=colnames(mean.sizestr.sqmeter2)[j], xlab="", ylab="")
dev.off()
}
##динамика обилия
(N.sqmeter<-(t(tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample), sum))))
(N.mean.sqmeter<-colMeans(N.sqmeter, na.rm=T))
(N.sd.sqmeter<-apply(N.sqmeter, 2, sd, na.rm=T))
(N.sem.sqmeter<-N.sd.sqmeter/sqrt(n.samples))
#точность учета
(D.n<-N.sem.sqmeter/N.mean.sqmeter*100)
pdf(file="N_dynamic.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=N.mean.sqmeter, x=names(N.mean.sqmeter),pch=15, main="Эстуарий р. Лувеньги",
ylim=c(min(N.mean.sqmeter)-max(N.sem.sqmeter), max(N.mean.sqmeter)+max(N.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1), N.mean.sqmeter, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
x1=seq(as.numeric(min(names(N.mean.sqmeter))),as.numeric(max(names(N.mean.sqmeter))),1),
y0=N.mean.sqmeter-N.sem.sqmeter, y1=N.mean.sqmeter+N.sem.sqmeter, angle=90, code=3, length=0.1)
dev.off()
embedFonts("N_dynamic.pdf") #встройка шрифтов в файл
##динамика без молод ( больше 2+)
(N2.sqmeter<-(t(tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"]), sum))))
(N2.mean.sqmeter<-colMeans(N2.sqmeter, na.rm=T))
N2.sd.sqmeter<-apply(N2.sqmeter, 2, sd, na.rm=T)
N2.sem.sqmeter<-N2.sd.sqmeter/sqrt(n.samples)
#точность учета
(D.n2<-N2.sem.sqmeter/N2.mean.sqmeter*100)
write.table(N2.mean.sqmeter, file="DZ_N2.csv", sep=";", dec=",")
pdf(file="N2_dynamic.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=N2.mean.sqmeter, x=names(N2.mean.sqmeter),pch=15, main="Эстуарий р. Лувеньги",
ylim=c(min(N2.mean.sqmeter)-max(N2.sem.sqmeter), max(N2.mean.sqmeter)+max(N2.sem.sqmeter)),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(names(N2.mean.sqmeter))),as.numeric(max(names(N2.mean.sqmeter))),1), N2.mean.sqmeter, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(N2.mean.sqmeter))),as.numeric(max(names(N2.mean.sqmeter))),1),
x1=seq(as.numeric(min(names(N2.mean.sqmeter))),as.numeric(max(names(N2.mean.sqmeter))),1),
y0=N2.mean.sqmeter-N2.sem.sqmeter, y1=N2.mean.sqmeter+N2.sem.sqmeter, angle=90, code=3, length=0.1)
dev.off()
embedFonts("N2_dynamic.pdf") #встройка шрифтов в файл
setwd("~/Dropbox/PhD_thesis/PhD_thesis/Barenc_Sea/Dalnezeleneckaya/")
#setwd("~/note_backup_2013-04-13/PhD_thesis/White_Sea/Estuatiy_Luvenga")
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
attach(ishodnik)
biomass.count<-0.00016*(Length.mm^2.96)
(biomass.samples<-tapply(biomass.count, list(year, sample), sum, na.rm=T))
(biomass.sqmeter<-biomass.samples*samples.squares$square)
(B.mean.sqmeter<-rowMeans(biomass.sqmeter, na.rm=T))
(B.sd.sqmeter<-apply(biomass.sqmeter, 1, sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(B.sem.sqmeter<-B.sd.sqmeter/sqrt(n.samples))
(D.b<-B.sem.sqmeter/B.mean.sqmeter*100)
pdf(file="B_count_dynamic.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=B.mean.sqmeter, x=names(B.mean.sqmeter),pch=15, main="Эстуарий р. Лувеньги",
ylim=c(min(B.mean.sqmeter)-max(B.sem.sqmeter), max(B.mean.sqmeter)+max(B.sem.sqmeter)),
xlab="год", ylab="B, г/кв.м")
lines(seq(as.numeric(min(names(B.mean.sqmeter))),as.numeric(max(names(B.mean.sqmeter))),1), B.mean.sqmeter, pch=1, type="b")
arrows(x0=seq(as.numeric(min(names(B.mean.sqmeter))),as.numeric(max(names(B.mean.sqmeter))),1),
x1=seq(as.numeric(min(names(B.mean.sqmeter))),as.numeric(max(names(B.mean.sqmeter))),1),
y0=B.mean.sqmeter-B.sem.sqmeter, y1=B.mean.sqmeter+B.sem.sqmeter, angle=90, code=3, length=0.1)
dev.off()
embedFonts("B_count_dynamic.pdf") #встройка шрифтов в файл
ishodnik<-read.table(file="growth.csv", head=T, sep=";", dec=",")
str(ishodnik)
mean(ishodnik$Length.mm[ishodnik$age==1]
mean(ishodnik$Length.mm[ishodnik$age==12])
mean(ishodnik$Length.mm[ishodnik$age==12])
mean(ishodnik$Length.mm[ishodnik$age==12], na.rm=T)
mean(ishodnik$Length.mm[ishodnik$age==1], na.rm=T)
boxplot(ishodnik$Length.mm ~ishodnik$age)
mean(ishodnik$Length.mm[ishodnik$age==1], na.rm=T)
mean(ishodnik$Length.mm[ishodnik$age==2], na.rm=T)
sd(ishodnik$Length.mm[ishodnik$age==1], na.rm=T)
sd(ishodnik$Length.mm[ishodnik$age==2], na.rm=T)
shapiro.test(ishodnik$Length.mm[ishodnik$age==1], na.rm=T)
shapiro.test(ishodnik$Length.mm[ishodnik$age==1])
shapiro.test(ishodnik$Length.mm[ishodnik$age==2])
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1], na.rm=T), sd=sd(ishodnik$Length.mm[ishodnik$age==1], na.rm=T), q=4)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2], na.rm=T), sd=sd(ishodnik$Length.mm[ishodnik$age==2], na.rm=T), q=4)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1], na.rm=T), sd=sd(ishodnik$Length.mm[ishodnik$age==1], na.rm=T), q=4.5)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2], na.rm=T), sd=sd(ishodnik$Length.mm[ishodnik$age==2], na.rm=T), q=4.5)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2], na.rm=T), sd=sd(ishodnik$Length.mm[ishodnik$age==2], na.rm=T), q=3.5)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1], na.rm=T), sd=sd(ishodnik$Length.mm[ishodnik$age==1], na.rm=T), q=3.5)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1], na.rm=T), sd=sd(ishodnik$Length.mm[ishodnik$age==1], na.rm=T), q=4)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2], na.rm=T), sd=sd(ishodnik$Length.mm[ishodnik$age==2], na.rm=T), q=4)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==2], na.rm=T), sd=sd(ishodnik$Length.mm[ishodnik$age==2], na.rm=T), q=4.1)
pnorm(mean=mean(ishodnik$Length.mm[ishodnik$age==1], na.rm=T), sd=sd(ishodnik$Length.mm[ishodnik$age==1], na.rm=T), q=4.1)
mean(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$year==2007], na.rm=T)
mean(ishodnik$Length.mm[ishodnik$age==2 & ishodnik$year==2007], na.rm=T)
mean(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$year==2008], na.rm=T)
mean(ishodnik$Length.mm[ishodnik$age==2 & ishodnik$year==2008], na.rm=T)
wilcox.test(ishodnik$Length.mm[ishodnik$age==1 & ishodnik$year==2007], ishodnik$Length.mm[ishodnik$age==1 & ishodnik$year==2008])
wilcox.test(ishodnik$Length.mm[ishodnik$age==2 & ishodnik$year==2007], ishodnik$Length.mm[ishodnik$age==2 & ishodnik$year==2008])
ishodnik<-read.table(file="growth.csv", head=T, sep=";", dec=",")
str(ishodnik)
ishodnik<-read.table(file="growth.csv", head=T, sep=";", dec=",")
str(ishodnik)
ishodnik<-read.table(file="growth.csv", head=T, sep=";", dec=",")
str(ishodnik)
summary(ishodnik)
mean(ishodnik[,7:18])
mean(ishodnik[7:18,])
mean(ishodnik[7:18,], is.na=T)
ishodnik[7:18,]
ishodnik[,7:18]
colMeans(ishodnik[,7:18], is.na=T)
colMeans(ishodnik[,7:18])#, is.na=T)
colMeans(ishodnik[,7:18], is.na=T)
mean(ishodnik[,7:18], is.na=T)
colMeans(ishodnik[,7:18], na.rm=T)
kolca.mean<-colMeans(ishodnik[,7:18], na.rm=T)
kolca.sd<-apply(ishodnik[,7:18], 2, sd, na.rm=T))
kolca.sd<-apply(ishodnik[,7:18], 2, sd, na.rm=T)
kolca.sd
colSums(!is.na(ishodnik[,7:18]))
kolca.sem<-kolca.sd/sqrt(colSums(!is.na(ishodnik[,7:18])))
kolca.sem
plot(kolca.mean)
plot(y=kolca.mean, x=seq(1,12,1) pch=15, main="Рост Macoma balthica в г. Дальнезеленецкой",
xlim=seq(1,12,1),
xlab="возраст", ylab="L, мм")
arrows(x0=seq(1,12,1),
x1=seq(1,12,1),
y0=kolca.mean+kolca.sem, y1=kolca.mean-kolca.sem, angle=90, code=3, length=0.1)
plot(y=kolca.mean, x=seq(1,12,1), pch=15, main="Рост Macoma balthica в г. Дальнезеленецкой",
xlim=seq(1,12,1),
xlab="возраст", ylab="L, мм")
arrows(x0=seq(1,12,1),
x1=seq(1,12,1),
y0=kolca.mean+kolca.sem, y1=kolca.mean-kolca.sem, angle=90, code=3, length=0.1)
plot(y=kolca.mean, x=seq(1,12,1), pch=15, main="Рост Macoma balthica в г. Дальнезеленецкой",
xlim=seq(1,12,1),
xlab="возраст", ylab="L, мм")
arrows(x0=seq(1,12,1),
x1=seq(1,12,1),
plot(y=kolca.mean, x=seq(1,12,1), pch=15, main="Рост Macoma balthica в г. Дальнезеленецкой",
#     xlim=seq(1,12,1),
xlab="возраст", ylab="L, мм")
arrows(x0=seq(1,12,1),
x1=seq(1,12,1),
y0=kolca.mean+kolca.sem, y1=kolca.mean-kolca.sem, angle=90, code=3, length=0.1)
plot(y=kolca.mean, x=seq(1,12,1), pch=15, main="Рост Macoma balthica в г. Дальнезеленецкой",
#     xlim=seq(1,12,1),
xlab="возраст", ylab="L, мм")
arrows(x0=seq(1,12,1), x1=seq(1,12,1), y0=kolca.mean+kolca.sem, y1=kolca.mean-kolca.sem, angle=90, code=3, length=0.1)
levels(ishodnik$age)
levels(as.factor(ishodnik$age))
Age<-seq(1,12,1)
Bertallanfi <- nls(kolca.mean~Lmax*(1-exp(-k*Age)), start=list(Lmax=20,k=0.1)) # задаем модель в виде nls(y~f(x)), и задаем стартовые значения коэффициентов из формулы, от которых он методом последовательного приближения (как я понимаю) будет подбирать максимально похожие)
summary(Bertallanfi)
Agemod <- seq(0,12,0.1)
Lmod <- predict(Bertallanfi, list(Age=Agemod))
lines(x=Agemod, y=Lmod, type=b)
lines(x=Agemod, y=Lmod)
pdf(file="L_kolec.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=kolca.mean, x=Age, pch=15, main="Рост Macoma balthica в г. Дальнезеленецкой",
#     xlim=seq(1,12,1),
xlab="возраст", ylab="L, мм")
arrows(x0=Age, x1=Age, y0=kolca.mean+kolca.sem, y1=kolca.mean-kolca.sem, angle=90, code=3, length=0.1)
lines(x=Agemod, y=Lmod)
dev.off()
embedFonts("N_dynamic.pdf") #встройка шрифтов в файл
