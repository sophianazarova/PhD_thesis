setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Luvenga_II_razrez/")
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
str(ishodnik)
ishodnik$tidal_level<-ordered(x=ishodnik$tidal_level, levels=c("high_beatch", "fucus_zone", "zostera_zone", "low_beatch"))
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
for (i in 1:length(levels(size.str.df$year))){
for(j in 1:length(levels(size.str.df$tidal_level))){
(xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] &
size.str.df$tidal_level==levels(size.str.df$tidal_level)[j]]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i] &
samples.names$tidal.level==levels(size.str.df$tidal_level)[j]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i] &
size.str.df$tidal_level==levels(size.str.df$tidal_level)[j]][antixxx]<-NA
}}
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i]))
}
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal.level), length ))
(n.samples.df<-as.data.frame(n.samples))
(mean.sqmeter.high_beatch<-t(tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.high_beatch.df<-as.data.frame(mean.sqmeter.high_beatch)
(sd.sqmeter.high_beatch<-tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T))
(sem.sqmeter.high_beatch <-t(sd.sqmeter.high_beatch/sqrt(n.samples.df$high_beatch)))
sem.sqmeter.high_beatch.df<-as.data.frame(sem.sqmeter.high_beatch)
#пояс фукоидов
mean.sqmeter.fucus_zone<-t(tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.fucus_zone.df<-as.data.frame(mean.sqmeter.fucus_zone)
sd.sqmeter.fucus_zone<-tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.fucus_zone <-t(sd.sqmeter.fucus_zone/sqrt(n.samples.df$fucus_zone))
sem.sqmeter.fucus_zone.df<-as.data.frame(sem.sqmeter.fucus_zone)
#пояс зостеры
mean.sqmeter.zostera_zone<-t(tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.zostera_zone.df<-as.data.frame(mean.sqmeter.zostera_zone)
sd.sqmeter.zostera_zone<-tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.zostera_zone <-t(sd.sqmeter.zostera_zone/sqrt(n.samples.df$zostera_zone))
sem.sqmeter.zostera_zone.df<-as.data.frame(sem.sqmeter.zostera_zone)
#нижний пляж
(mean.sqmeter.low_beatch<-t(tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.low_beatch.df<-as.data.frame(mean.sqmeter.low_beatch)
sd.sqmeter.low_beatch<-tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low_beatch <-t(sd.sqmeter.low_beatch/sqrt(n.samples.df$low_beatch))
sem.sqmeter.low_beatch.df<-as.data.frame(sem.sqmeter.low_beatch)
length.class<-seq(1,20,1)
(mean.sqmeter2.high_beatch<-mean.sqmeter.high_beatch[2:20,])
mean.sqmeter2.high_beatch.df<-as.data.frame(mean.sqmeter2.high_beatch)
(sd.sqmeter2.high_beatch<-sd.sqmeter.high_beatch[,2:20])
(sem.sqmeter2.high_beatch <-t(sd.sqmeter2.high_beatch/sqrt(n.samples.df$high_beatch)))
sem.sqmeter2.high_beatch.df<-as.data.frame(sem.sqmeter2.high_beatch)
#пояс фукоидов
mean.sqmeter2.fucus_zone<-mean.sqmeter.fucus_zone[2:20,]
mean.sqmeter2.fucus_zone.df<-as.data.frame(mean.sqmeter2.fucus_zone)
sd.sqmeter2.fucus_zone<-sd.sqmeter.fucus_zone[,2:20]
sem.sqmeter2.fucus_zone <-t(sd.sqmeter2.fucus_zone/sqrt(n.samples.df$fucus_zone))
sem.sqmeter2.fucus_zone.df<-as.data.frame(sem.sqmeter2.fucus_zone)
#пояс зостеры
mean.sqmeter2.zostera_zone<-mean.sqmeter.zostera_zone[2:20,]
mean.sqmeter2.zostera_zone.df<-as.data.frame(mean.sqmeter2.zostera_zone)
sd.sqmeter2.zostera_zone<-sd.sqmeter.zostera_zone[,2:20]
sem.sqmeter2.zostera_zone <-t(sd.sqmeter2.zostera_zone/sqrt(n.samples.df$zostera_zone))
sem.sqmeter2.zostera_zone.df<-as.data.frame(sem.sqmeter2.zostera_zone)
#нижний пляж
mean.sqmeter2.low_beatch<-mean.sqmeter.low_beatch[2:20,]
mean.sqmeter2.low_beatch.df<-as.data.frame(mean.sqmeter2.low_beatch)
sd.sqmeter2.low_beatch<-sd.sqmeter.low_beatch[,2:20]
sem.sqmeter2.low_beatch <-t(sd.sqmeter2.low_beatch/sqrt(n.samples.df$low_beatch))
sem.sqmeter2.low_beatch.df<-as.data.frame(sem.sqmeter2.low_beatch)
length.class2<-seq(2,20,1)
(N.sqmeter<-tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample, size.str.df$tidal_level), sum))
(N.mean.sqmeter<-apply(N.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=mean))
N.mean.sqmeter[11,3]<-NA
(N.sd.sqmeter<-apply(N.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=sd))
(N.sem.sqmeter<-N.sd.sqmeter/sqrt(n.samples))
plot(y=N.mean.sqmeter[,1], x=as.numeric(rownames(N.mean.sqmeter)), type="n", main="Материковая литораль в районе пос. Лувеньга",
#     ylim=c(min(N.mean.sqmeter, na.rm=T)-max(N.sem.sqmeter, na.rm=T), max(N.mean.sqmeter, na.rm=T)+max(N.sem.sqmeter, na.rm=T)),
ylim=c(0, 5000),
xlab="год", ylab="N, экз./кв.м")
for (i in 1:ncol(N.mean.sqmeter))
{lines(as.numeric(rownames(N.mean.sqmeter)), N.mean.sqmeter[,i], pch=14+i, col=0+i, type="b")
arrows(x0=as.numeric(rownames(N.mean.sqmeter)), x1=as.numeric(rownames(N.mean.sqmeter)),
y0=N.mean.sqmeter[,i]-N.sem.sqmeter[,i], y1=N.mean.sqmeter[,i]+N.sem.sqmeter[,i], angle=90, code=3, length=.1, col=0+i)
}
(N2.sqmeter<-tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"],
size.str.df$tidal_level[size.str.sqmeter$Length.int!="(0,1]"]), sum))
(N2.mean.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=mean))
N2.mean.sqmeter[11,3]<-NA
(N2.sd.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=sd))
(N2.sem.sqmeter<-N2.sd.sqmeter/sqrt(n.samples))
(N.mean.sqmeter-N2.mean.sqmeter)/N.mean.sqmeter*100
(N2.sqmeter.high<-(N2.sqmeter)[,,1])
N.mean.sqmeter
summary(N.mean.sqmeter)
(D.n<-N.sem.sqmeter/N.mean.sqmeter*100)
(D.n2<-N.sem.sqmeter/N.mean.sqmeter*100)
N.mean.sqmeter
D.n
summary(N.mean.sqmeter)
plot(y=N2.mean.sqmeter[,1], x=as.numeric(rownames(N.mean.sqmeter)), type="n", main="Материковая литораль в районе пос. Лувеньга",
#     ylim=c(min(N.mean.sqmeter, na.rm=T)-max(N.sem.sqmeter, na.rm=T), max(N.mean.sqmeter, na.rm=T)+max(N.sem.sqmeter, na.rm=T)),
ylim=c(0, 5000),
xlab="год", ylab="N, экз./кв.м")
for (i in 1:ncol(N2.mean.sqmeter))
{lines(as.numeric(rownames(N2.mean.sqmeter)), N2.mean.sqmeter[,i], pch=14+i, col=0+i, type="b")
arrows(x0=as.numeric(rownames(N2.mean.sqmeter)), x1=as.numeric(rownames(N2.mean.sqmeter)),
y0=N2.mean.sqmeter[,i]-N2.sem.sqmeter[,i], y1=N2.mean.sqmeter[,i]+N2.sem.sqmeter[,i], angle=90, code=3, length=.1, col=0+i)
}
N2.mean.sqmeter
D.n2
(N2.sqmeter.high<-(N2.sqmeter)[,,1])
data.frame(subset(samples.names, samples.names$tidal_level=="high"),
as.vector(t(N2.sqmeter.high))[!is.na(as.vector(t(N2.sqmeter.high)))])
samples.names$tidal_level
samples.names$tidal.level
(N2.high_beatch<-subset(samples.names, subset=samples.names$tidal.level=="high_beatch"))
as.vector(N2.sqmeter[<=1997,,"high"])
as.vector(N2.sqmeter[seq(1992:1997),,"high"])
seq(1992:1997)
seq(1992:1997,1)
seq(1992,1997,1)
as.vector(N2.sqmeter[seq(1992,1997,1),,"high"])
as.vector(N2.sqmeter[c(seq(1992,1997,1)),,"high"])
as.vector(N2.sqmeter[c(as.character(seq(1992,1997,1)),,"high"])
as.vector(N2.sqmeter[c(as.character(seq(1992,1997,1))),,"high"])
c(as.character(seq(1992,1997,1)))
N2.sqmeter
as.vector(N2.sqmeter[,c(as.character(seq(1992,1997,1))),"high"])
as.vector(N2.sqmeter[,,"high"])
(N2.sqmeter[,,"high"])
N2.sqmeter
as.vector(N2.sqmeter[c(as.character(seq(1992,1997,1))),,"high_beatch"])
(N2.92.98.high_beatch<-data.frame(subset(N2.high, subset= N2.high$year<=1997),
as.vector(N2.sqmeter[c(as.character(seq(1992,1997,1))),,"high_beatch"])
[!is.na(as.vector(N2.sqmeter[c(as.character(seq(1992,1997,1))),,"high_beatch"]))]))
(N2.92.98.high_beatch<-data.frame(subset(N2.high_beatch, subset= N2.high_beatch$year<=1997),
as.vector(N2.sqmeter[c(as.character(seq(1992,1997,1))),,"high_beatch"])
[!is.na(as.vector(N2.sqmeter[c(as.character(seq(1992,1997,1))),,"high_beatch"]))]))
kruskal.test(N2.92.98.high_beatch$as.vector.N2.sqmeter.c.as.character.seq.1992..1997..1........high_beatch.....is.na.as.vector.N2.sqmeter.c.as.character.seq.1992..
~ N2.92.98.high_beatch$year)
mean(N2.92.98.high_beatch$as.vector.N2.sqmeter.c.as.character.seq.1992..1997..1........high_beatch.....is.na.as.vector.N2.sqmeter.c.as.character.seq.1992..)
(sd(N2.92.98.high_beatch$as.vector.N2.sqmeter.c.as.character.seq.1992..1997..1........high_beatch.....is.na.as.vector.N2.sqmeter.c.as.character.seq.1992..)/
sqrt(length((N2.92.98.high_beatch$as.vector.N2.sqmeter.c.as.character.seq.1992..1997..1........high_beatch.....is.na.as.vector.N2.sqmeter.c.as.character.seq.1992..)))/
mean(N2.92.98.high_beatch$as.vector.N2.sqmeter.c.as.character.seq.1992..1997..1........high_beatch.....is.na.as.vector.N2.sqmeter.c.as.character.seq.1992..)*100
)
sd(N2.92.98.high_beatch$as.vector.N2.sqmeter.c.as.character.seq.1992..1997..1........high_beatch.....is.na.as.vector.N2.sqmeter.c.as.character.seq.1992..)/
sqrt(length((N2.92.98.high_beatch$as.vector.N2.sqmeter.c.as.character.seq.1992..1997..1........high_beatch.....is.na.as.vector.N2.sqmeter.c.as.character.seq.1992..)))/
mean(N2.92.98.high_beatch$as.vector.N2.sqmeter.c.as.character.seq.1992..1997..1........high_beatch.....is.na.as.vector.N2.sqmeter.c.as.character.seq.1992..)*100
(N2.fucus_zone<-subset(samples.names, subset=samples.names$tidal.level=="fucus_zone"))
(N2.92.98.fucus_zone<-data.frame(subset(N2.fucus_zone, subset= N2.fucus_zone$year<=1997),
as.vector(N2.sqmeter[c(as.character(seq(1992,1997,1))),,"fucus_zone"])
[!is.na(as.vector(N2.sqmeter[c(as.character(seq(1992,1997,1))),,"fucus_zone"]))]))
kruskal.test(N2.92.98.fucus_zone$as.vector.N2.sqmeter.c.as.character.seq.1992..1997..1........fucus_zone.....is.na.as.vector.N2.sqmeter.c.as.character.seq.1992..
~ N2.92.98.fucus_zone$year)
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Luvenga_II_razrez/")
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
str(ishodnik)
ishodnik$tidal_level<-ordered(x=ishodnik$tidal_level, levels=c("high_beatch", "fucus_zone", "zostera_zone", "low_beatch"))
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
for (i in 1:length(levels(size.str.df$year))){
for(j in 1:length(levels(size.str.df$tidal_level))){
(xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] &
size.str.df$tidal_level==levels(size.str.df$tidal_level)[j]]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i] &
samples.names$tidal.level==levels(size.str.df$tidal_level)[j]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i] &
size.str.df$tidal_level==levels(size.str.df$tidal_level)[j]][antixxx]<-NA
}}
summary(size.str.df, na.rm=T)
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь РС на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i]))
}
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal.level), length ))
(n.samples.df<-as.data.frame(n.samples))
(mean.sqmeter.high_beatch<-t(tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.high_beatch.df<-as.data.frame(mean.sqmeter.high_beatch)
(sd.sqmeter.high_beatch<-tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T))
(sem.sqmeter.high_beatch <-t(sd.sqmeter.high_beatch/sqrt(n.samples.df$high_beatch)))
sem.sqmeter.high_beatch.df<-as.data.frame(sem.sqmeter.high_beatch)
#пояс фукоидов
mean.sqmeter.fucus_zone<-t(tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.fucus_zone.df<-as.data.frame(mean.sqmeter.fucus_zone)
sd.sqmeter.fucus_zone<-tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.fucus_zone <-t(sd.sqmeter.fucus_zone/sqrt(n.samples.df$fucus_zone))
sem.sqmeter.fucus_zone.df<-as.data.frame(sem.sqmeter.fucus_zone)
#пояс зостеры
mean.sqmeter.zostera_zone<-t(tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.zostera_zone.df<-as.data.frame(mean.sqmeter.zostera_zone)
sd.sqmeter.zostera_zone<-tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.zostera_zone <-t(sd.sqmeter.zostera_zone/sqrt(n.samples.df$zostera_zone))
sem.sqmeter.zostera_zone.df<-as.data.frame(sem.sqmeter.zostera_zone)
#нижний пляж
(mean.sqmeter.low_beatch<-t(tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.low_beatch.df<-as.data.frame(mean.sqmeter.low_beatch)
sd.sqmeter.low_beatch<-tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low_beatch <-t(sd.sqmeter.low_beatch/sqrt(n.samples.df$low_beatch))
sem.sqmeter.low_beatch.df<-as.data.frame(sem.sqmeter.low_beatch)
length.class<-seq(1,20,1)
##=============== РС >1mm ===============================================
#Верхний пляж
(mean.sqmeter2.high_beatch<-mean.sqmeter.high_beatch[2:20,])
mean.sqmeter2.high_beatch.df<-as.data.frame(mean.sqmeter2.high_beatch)
(sd.sqmeter2.high_beatch<-sd.sqmeter.high_beatch[,2:20])
(sem.sqmeter2.high_beatch <-t(sd.sqmeter2.high_beatch/sqrt(n.samples.df$high_beatch)))
sem.sqmeter2.high_beatch.df<-as.data.frame(sem.sqmeter2.high_beatch)
#пояс фукоидов
mean.sqmeter2.fucus_zone<-mean.sqmeter.fucus_zone[2:20,]
mean.sqmeter2.fucus_zone.df<-as.data.frame(mean.sqmeter2.fucus_zone)
sd.sqmeter2.fucus_zone<-sd.sqmeter.fucus_zone[,2:20]
sem.sqmeter2.fucus_zone <-t(sd.sqmeter2.fucus_zone/sqrt(n.samples.df$fucus_zone))
sem.sqmeter2.fucus_zone.df<-as.data.frame(sem.sqmeter2.fucus_zone)
#пояс зостеры
mean.sqmeter2.zostera_zone<-mean.sqmeter.zostera_zone[2:20,]
mean.sqmeter2.zostera_zone.df<-as.data.frame(mean.sqmeter2.zostera_zone)
sd.sqmeter2.zostera_zone<-sd.sqmeter.zostera_zone[,2:20]
sem.sqmeter2.zostera_zone <-t(sd.sqmeter2.zostera_zone/sqrt(n.samples.df$zostera_zone))
sem.sqmeter2.zostera_zone.df<-as.data.frame(sem.sqmeter2.zostera_zone)
#нижний пляж
mean.sqmeter2.low_beatch<-mean.sqmeter.low_beatch[2:20,]
mean.sqmeter2.low_beatch.df<-as.data.frame(mean.sqmeter2.low_beatch)
sd.sqmeter2.low_beatch<-sd.sqmeter.low_beatch[,2:20]
sem.sqmeter2.low_beatch <-t(sd.sqmeter2.low_beatch/sqrt(n.samples.df$low_beatch))
sem.sqmeter2.low_beatch.df<-as.data.frame(sem.sqmeter2.low_beatch)
length.class2<-seq(2,20,1)
(N.sqmeter<-tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample, size.str.df$tidal_level), sum))
(N.mean.sqmeter<-apply(N.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=mean))
N.mean.sqmeter[11,3]<-NA
(N.sd.sqmeter<-apply(N.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=sd))
(N.sem.sqmeter<-N.sd.sqmeter/sqrt(n.samples))
(D.n<-N.sem.sqmeter/N.mean.sqmeter*100)
str(size.str.sqmeter)
(N.all.sqmeter<-tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample), sum,na.rm=T))
N.all.sqmeter[N.all.sqmeter==0]<-NA
(N.all.mean.sqmeter<-apply(N.all.sqmeter, na.rm=T, MARGIN=1, FUN=mean ))
(N.all.sd.sqmeter<-apply(N.all.sqmeter, na.rm=T, MARGIN=1, FUN=sd))
(N.all.sem.sqmeter<-N.all.sd.sqmeter/sqrt(rowSums(as.matrix(n.samples),na.rm=T)))
(D.n.all<-N.all.sem.sqmeter/N.all.mean.sqmeter*100)
(N2.sqmeter<-tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"],
size.str.df$tidal_level[size.str.sqmeter$Length.int!="(0,1]"]), sum))
(N2.mean.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=mean))
N2.mean.sqmeter[11,3]<-NA
(N2.sd.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=sd))
(N2.sem.sqmeter<-N2.sd.sqmeter/sqrt(n.samples))
(D.n2<-N.sem.sqmeter/N.mean.sqmeter*100)
str(size.str.sqmeter)
(N2.all.sqmeter<-tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"]), sum, na.rm=T))
N2.all.sqmeter[N2.all.sqmeter==0]<-NA
(N2.all.mean.sqmeter<-apply(N2.all.sqmeter, na.rm=T, MARGIN=1, FUN=mean ))
(N2.all.sd.sqmeter<-apply(N2.all.sqmeter, na.rm=T, MARGIN=1, FUN=sd))
(N2.all.sem.sqmeter<-N2.all.sd.sqmeter/sqrt(rowSums(as.matrix(n.samples),na.rm=T)))
(D.n2.all<-N2.all.sem.sqmeter/N2.all.mean.sqmeter*100)
plot(y=N2.all.mean.sqmeter, x=as.numeric(names(N2.all.mean.sqmeter)), type="b", main="Лувеньга, материковая литораль",
ylim=c(0, max(N2.all.mean.sqmeter, na.rm=T)+max(N2.all.sem.sqmeter, na.rm=T)),
xlab="год", ylab="N, экз./кв.м", pch=15)
arrows(x0 = as.numeric(names(N2.all.mean.sqmeter)), x1 = as.numeric(names(N2.all.mean.sqmeter)),
y0=N2.all.mean.sqmeter-N2.all.sem.sqmeter, y1=N2.all.mean.sqmeter+N2.all.sem.sqmeter, angle=90, code=3, length=.1)
pdf(file="N2_dynamic_all.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=N2.all.mean.sqmeter, x=as.numeric(names(N2.all.mean.sqmeter)), type="b", main="Лувеньга, материковая литораль",
ylim=c(0, max(N2.all.mean.sqmeter, na.rm=T)+max(N2.all.sem.sqmeter, na.rm=T)),
xlab="год", ylab="N, экз./кв.м", pch=15)
arrows(x0 = as.numeric(names(N2.all.mean.sqmeter)), x1 = as.numeric(names(N2.all.mean.sqmeter)),
y0=N2.all.mean.sqmeter-N2.all.sem.sqmeter, y1=N2.all.mean.sqmeter+N2.all.sem.sqmeter, angle=90, code=3, length=.1)
dev.off()
embedFonts("N2_dynamic_all.pdf") #встройка шрифтов в файл
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), xlab = "L, mm", breaks = seq(1, max(ishodnik$Length.mm, na.rm=T)+1, 1))
library(lattice)
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), xlab = "L, mm", breaks = seq(1, max(ishodnik$Length.mm, na.rm=T)+1, 1))
pdf("razrez2_total_size_str.pdf", family = "NimbusSan")
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), xlab = "L, mm", breaks = seq(1, max(ishodnik$Length.mm, na.rm=T)+1, 1))
dev.off()
embedFonts("razrez2_total_size_str.pdf")
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
letopis.table<-table( sample, Length.int, year)
letopis.table.2dim <- cbind(year = as.numeric(rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1])), letopis.table[,,1])
for (i in 2:dim(letopis.table)[3]) {
letopis.table.2dim <- rbind(letopis.table.2dim, cbind(year = as.numeric(rep(dimnames(letopis.table)$year[i], dim(letopis.table)[1])), letopis.table[,,i]))}
letopis.table.2dim <- cbind(letopis.table.2dim, rowSums(letopis.table.2dim[,2:21]))
for (i in 1:dim(letopis.table)[3])
{ (xxx <- rownames(letopis.table.2dim)[letopis.table.2dim[,1] == as.numeric(dimnames(letopis.table)$year)[i] ]%in%
samples.names$sample[samples.names$year == as.numeric(dimnames(letopis.table)$year)[i] ])
antixxx<-as.logical(1-xxx)
letopis.table.2dim[,22][letopis.table.2dim[,1] == as.numeric(dimnames(letopis.table)$year)[i]][antixxx]<-NA
}
letopis.table.2dim <- na.omit(letopis.table.2dim)
write.csv2(letopis.table.2dim, "Estuary_size_str_all.csv")
write.csv2(letopis.table.2dim, "razrez2_size_str_all.csv")
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
ishodnik$tidal_level<-ordered(x=ishodnik$tidal_level, levels=c("high_beatch", "fucus_zone", "zostera_zone", "low_beatch"))
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
samples.names
letopis.table.2dim
letopis.table<-table( sample, Length.int, year)
letopis.table.2dim <- cbind(year = as.numeric(rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1])), letopis.table[,,1])
for (i in 2:dim(letopis.table)[3]) {
letopis.table.2dim <- rbind(letopis.table.2dim, cbind(year = as.numeric(rep(dimnames(letopis.table)$year[i], dim(letopis.table)[1])), letopis.table[,,i]))}
letopis.table.2dim <- cbind(letopis.table.2dim, rowSums(letopis.table.2dim[,2:21]))
for (i in 1:dim(letopis.table)[3])
{ (xxx <- rownames(letopis.table.2dim)[letopis.table.2dim[,1] == as.numeric(dimnames(letopis.table)$year)[i] ]%in%
samples.names$sample[samples.names$year == as.numeric(dimnames(letopis.table)$year)[i] ])
antixxx<-as.logical(1-xxx)
letopis.table.2dim[,22][letopis.table.2dim[,1] == as.numeric(dimnames(letopis.table)$year)[i]][antixxx]<-NA
}
#letopis.table.2dim[,22][letopis.table.2dim[,22] == 0] <- NA
letopis.table.2dim <- na.omit(letopis.table.2dim)
str(letopis.table.2dim)
as.data.frame(letopis.table.2dim)
str(letopis.table.2dim)
rownames(letopis.table.2dim)
sampnames <- rownames(letopis.table.2dim)
letopis.table.2dim.df <- letopis.table.2dim
sampnames <- rownames(letopis.table.2dim)
rownames(letopis.table.2dim.df) <- seq(1:nrow(letopis.table.2dim.df))
rownames(letopis.table.2dim.df)
letopis.table.2dim.df <- as.data.frame(letopis.table.2dim.df)
letopis.table.2dim.df$V22
is.data.frame(samples.names)
samples.names$sample
letopis.table.2dim.df$sample <- sampnames
merge(x = letopis.table.2dim.df, y = samples.names, by = c("sample", "year"))
samples.names
letopis.table.2dim.df <- merge(x = letopis.table.2dim.df, y = samples.names, by = c("sample", "year"))
write.csv2(letopis.table.2dim.df, "razrez2_size_str_all.csv")
