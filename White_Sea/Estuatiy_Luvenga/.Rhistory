setwd("~/Documents/")
raskladka<-read.table("vuoksa2014.csv", sep=";", dec=",", header=T)
str(raskladka)
tapply(raskladka$kolichestvo, raskladka$produkt, sum)
raskladka<-read.table("vuoksa2014.csv", sep=";", dec=",", header=T)
tapply(raskladka$kolichestvo, raskladka$produkt, sum)
as.data.frame(tapply(raskladka$kolichestvo, raskladka$produkt, sum))
summa_produktov<-as.data.frame(tapply(raskladka$kolichestvo, raskladka$produkt, sum))
str(summa_produktov)
rownames(summa_produktov)
colnames(summa_produktov)<-c("summa")
summa_produktov
summa_produktov[,1]
summa_produktov[1,]
for (1 in 1:length(summa_produktov)){
for (i in 1:length(summa_produktov)){
summa_produktov$upakovka[i,]<-raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[i]]
}
raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[1]]
summa_produktov$upakovka[1,]
is.data.frame(summa_produktov)
summa_produktov$summa[1,]
summa_produktov$summa[,1]
summa_produktov$summa[1]
for (i in 1:length(summa_produktov)){
summa_produktov$upakovka[1]<-raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[1]]
}
summa_produktov
for (i in 1:length(summa_produktov)){
summa_produktov$upakovka[i]<-raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[i]]
}
summa_produktov
summa_produktov<-as.data.frame(tapply(raskladka$kolichestvo, raskladka$produkt, sum))
colnames(summa_produktov)<-c("summa")
for (i in 1:length(summa_produktov)){
summa_produktov$upakovka[i]<-raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[i]]
}
summa_produktov
raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[1]]
as.character(raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[1]])
for (i in 1:length(summa_produktov)){
summa_produktov$upakovka[i]<-as.character(raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[1]])
}
summa_produktov
summa_produktov<-as.data.frame(tapply(raskladka$kolichestvo, raskladka$produkt, sum))
colnames(summa_produktov)<-c("summa")
for (i in 1:length(summa_produktov)){
summa_produktov$upakovka[i]<-as.character(raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[1]])
}
summa_produktov
summa_produktov<-as.data.frame(tapply(raskladka$kolichestvo, raskladka$produkt, sum))
colnames(summa_produktov)<-c("summa")
for (i in 1:length(summa_produktov)){
summa_produktov$upakovka[i]<-as.character(raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[i]])
}
summa_produktov
summa_produktov<-as.data.frame(tapply(raskladka$kolichestvo, raskladka$produkt, sum))
colnames(summa_produktov)<-c("summa")
rownames(summa_produktov)==rownames(summa_produktov)[1]
summa_produktov<-as.data.frame(tapply(raskladka$kolichestvo, raskladka$produkt, sum))
colnames(summa_produktov)<-c("summa")
for (i in 1:length(summa_produktov)){
summa_produktov$upakovka[rownames(summa_produktov)==rownames(summa_produktov)[i]]<-as.character(raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[i]])
}
summa_produktov
rownames(summa_produktov)[i]
rownames(summa_produktov)==rownames(summa_produktov)[2]
summa_produktov$upakovka[rownames(summa_produktov)==rownames(summa_produktov)[1]
]
summa_produktov$upakovka[rownames(summa_produktov)==rownames(summa_produktov)[2]]
for (i in 1:length(summa_produktov)){
summa_produktov$upakovka[i]<-as.character(raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[i]])
}
summa_produktov
for (i in 1:length(summa_produktov)){
summa_produktov$upakovka[i]<-as.character(raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[i]])
}
summa_produktov
for (i in 1:length(summa_produktov)){
summa_produktov$upakovka[i]<-as.character(raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[i]])
}
summa_produktov
rbind(produkt=rownames(summa_produktov), summa_produktov)
cbind(produkt=rownames(summa_produktov), summa_produktov)
summa_produktov<-cbind(produkt=rownames(summa_produktov), summa_produktov)
length(summa_produktov)
length(summa_produktov$produkt)
for (i in 1:length(summa_produktov$produkt)){
summa_produktov$upakovka[ summa_produktov$produkt==rownames(summa_produktov)[i]]<-as.character(raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[i]])
}
summa_produktov
summa_produktov<-as.data.frame(tapply(raskladka$kolichestvo, raskladka$produkt, sum))
colnames(summa_produktov)<-c("summa")
for (i in 1:length(summa_produktov$produkt)){
summa_produktov$upakovka[i]<-as.character(raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[i]])
}
summa_produktov
summa_produktov<-as.data.frame(tapply(raskladka$kolichestvo, raskladka$produkt, sum))
colnames(summa_produktov)<-c("summa")
summa_produktov<-cbind(produkt=rownames(summa_produktov), summa_produktov)
for (i in 1:length(summa_produktov$produkt)){
summa_produktov$upakovka[ summa_produktov$produkt==rownames(summa_produktov)[i]]<-as.character(raskladka$upakovka[ raskladka$produkt==rownames(summa_produktov)[i]])
}
summa_produktov
write.table(summa_produktov, "vuoksa_2014_summa.csv", dec=",", sep=";")
setwd("~/Dropbox/PhD_thesis/PhD_thesis/All_N/")
detach(ishodnik)
ishodnik<-read.table(file="all_Nmean.csv", sep=";", dec=",", head=T)
ishodnik$area<-ordered(ishodnik$area, levels=c("Suhaya", "Klyushiha", "Podpahta","Lisya",
"YuG", "ZRS", "Lomnishniy",
"Goreliy", "Estuary", "razrez2",
"Ura", "Pechenga",
"Abram", "Nagornoe", "Retinskoe", "Pala",
"Gavrilovo", "Yarnyshnaya", "DZ", "Shelpino", "Porchnikha", "Ivanovskaya"))
ishodnik$region<-ordered(ishodnik$region, levels=c("Chupa_bay", "North_archipelago", "Luvenga",
"West_Murman", "Kola_bay", "East_Murman"))
ishodnik$sea<-ordered(ishodnik$sea, levels=c("White", "Barents"))
ishodnik$tidal_level<-ordered(ishodnik$tidal_level, levels=c("high", "high_beatch", "middle", "fucus_zone", "zostera_zone",
"low", "low_beatch", "hydrographic_datum", "subtidal"))
ishodnik$mareography<-ordered(ishodnik$mareography, levels=c("high","middle", "low", "hydrographic_datum", "subtidal"))
str(ishodnik)
tapply(ishodnik$N.indd, ishodnik$area, summary)
summ_area<-tapply(ishodnik$N.indd, ishodnik$area, summary)
area_summary_df<-data.frame(area=levels(ishodnik$area), Nmin=numeric, Nmax=numeric, Nmean=numeric)
area_summary_df<-data.frame(area=levels(ishodnik$area), Nmin=numeric(length=length(levels(ishodnik$area))), Nmax=numeric(length=length(levels(ishodnik$area))), Nmean=numeric(length=length(levels(ishodnik$area))))
area_summary_df
str(summ_area)
area_summary_df
summ_area[1]
str(summ_area[1])
summ_area[1]["Min"]
summ_area[1][1]
str(summ_area[1][1])
str(summ_area[[1]])
summ_area[[1]][1]
summ_area[[1]]["Min"]
summ_area[[1]]["Min."]
str(summ_area[[1]])
(summ_area[[1]])
for (i in 1:length(summ_area)) {
area_summary_df$Nmin[i]<-summ_area[[i]]["Min."]
area_summary_df$Nmax[i]<-summ_area[[i]]["Max."]
area_summary_df$Nmean[i]<-summ_area[[i]]["Mean"]
}
area_summary_df
write.table(area_summary_df, "area_summary.csv", sep=";", dec=",")
install.packages("maps")
install.packages("mapdata")
library(maps)
library(mapdata)
library(maps)
library(mapdata)
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
setwd("~/Dropbox/PhD_thesis/PhD_thesis/macrodistribution/")
ishodnik<-read.table("macrodistribution.csv", header=T, sep=";", dec=",")
ishodnik<-read.table("macrodistribution.csv", header=T, sep=";", dec=",")
(lat_lim<-c(min(ishodnik$Nmin), max(ishodnik$Nmin)))
(lat_lim<-c(min(ishodnik$Ndec), max(ishodnik$Ndec)))
(lat_lim<-c(min(ishodnik$Ndec)-1, max(ishodnik$Ndec)+1))
long_lim<-c(min(ishodnik$Edec)-1, max(ishodnik$Edec)+1))
long_lim<-c(min(ishodnik$Edec)-1, max(ishodnik$Edec)+1)
map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, pch=20, col="red")
library(maptools)  #for shapefiles
install.packages(maptools)  #for shapefiles
install.packages("maptools")
install.packages("scales")
library(maptools)  #for shapefiles
library(scales)  #for transparency
library(maptools)  #for shapefiles
library(scales)  #for transparency
seas <- readShapeSpatial("./seas_marineregions_org/World_Seas.shp")   #layer of data for species range
map(seas, xlim=c(30,44), ylim=c(63.8,70))
plot(seas, xlim=c(30,44), ylim=c(63.8,70))
lat_lim
long_lim
points(x=ishodnik$Edec, y=ishodnik$Ndec, pch=20, col="red")
plot(seas, xlim=c(30,44), ylim=c(63.8,70), lwd=2)
points(x=ishodnik$Edec, y=ishodnik$Ndec, pch=20, col="red")
map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, pch=20, col="red")
points(x=ishodnik$Edec, y=ishodnik$Ndec, pch=20, col="red", cex=ishodnik$Nmean)
radius <- sqrt( ishodnik$Nmean/ pi)
points(x=ishodnik$Edec, y=ishodnik$Ndec, pch=20, col="red", cex=radius)
map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, pch=20, col="red", cex=radius)
map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, pch=20, cex=radius)
map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, cex=radius)
map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, cex=radius/1000)
points(x=ishodnik$Edec, y=ishodnik$Ndec, cex=radius/100)
points(x=ishodnik$Edec, y=ishodnik$Ndec, cex=radius/100)
map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, cex=radius/50)
points(x=ishodnik$Edec, y=ishodnik$Ndec, col=red, pch=20 cex=radius/50)
points(x=ishodnik$Edec, y=ishodnik$Ndec, col=red, pch=20, cex=radius/50)
points(x=ishodnik$Edec, y=ishodnik$Ndec, col="red", pch=20, cex=radius/50)
map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, col="red", pch=20, cex=radius/10)
seas <- readShapeSpatial("./seas_marineregions_org/World_Seas.shp")   #layer of data for species range
plot(seas, xlim=c(30,44), ylim=c(63.8,70), lwd=2) #тут как-то я меняла соотношение сторон явно
radius <- sqrt( ishodnik$Nmean/ pi)
points(x=ishodnik$Edec, y=ishodnik$Ndec, col="red", pch=20, cex=radius/10)
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="white", col="red", pch=20, cex=radius/10)
plot(seas, xlim=c(30,44), ylim=c(63.8,70), lwd=2) #тут как-то я меняла соотношение сторон явно
symbols(x=ishodnik$Edec, y=ishodnik$Ndec, circles=radius, inches=0.35, fg="white", bg="red")
plot(seas, xlim=c(30,44), ylim=c(63.8,70), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
locator()
locator()
radius
legend(x=42, y=60, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter" ), col="red", pch=20, cex=c(10,100,1000)/10)
pdf("white_barents_Nmean.csv", family="NimbusSan", width=190, height=280, paper="a4")
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x=42, y=60, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter" ), col="red", pch=20, cex=c(10,100,1000)/10)
dev.off()
dev.off()
plot(seas, xlim=c(30,44), ylim=c(63.8,70), lwd=2) #тут как-то я меняла соотношение сторон явно
plot(seas, xlim=c(30,44), ylim=c(65,70), lwd=2) #тут как-то я меняла соотношение сторон явно
dev.off()
plot(seas, xlim=c(30,44), ylim=c(65,70), lwd=2) #тут как-то я меняла соотношение сторон явно
lat_lim
long_lim
plot(seas, xlim=c(30,40), ylim=c(65,75), lwd=2) #тут как-то я меняла соотношение сторон явно
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
seas <- readShapeSpatial("./seas_marineregions_org/World_Seas.shp")   #layer of data for species range
radius <- sqrt( ishodnik$Nmean/ pi)
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x=42, y=60, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter" ), col="red", pch=20, cex=c(10,100,1000)/10)
legend(x=42, y=60, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter"), col="red", pch=20, cex=c(10,100,1000)/10, text.width=3)
legend(x=42, y=60, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter"), col="red", pch=20, cex=c(10,100,1000)/10, text.width=c(3))
legend(x=42, y=60, col="red", pch=20, cex=c(10,100,1000)/10)
legend(x=42, y=60, col="red", pch=20, cex=c(10,100,1000)/10, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter"))
legend(x="bottomright", col="red", pch=20, cex=c(10,100,1000)/10, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter"))
dev.off()
pdf("white_barents_Nmean.csv", family="NimbusSan", width=190, height=280, paper="a4")
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomright", col="red", pch=20, cex=c(10,100,1000)/10, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter"))
dev.off()
embedFonts("white_barents_Nmean.csv")
pdf("white_barents_Nmean.pdf", family="NimbusSan", width=190, height=280, paper="a4")
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomright", col="red", pch=20, cex=c(10,100,1000)/10, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter"))
dev.off()
embedFonts("white_barents_Nmean.pdf")
legend(x="bottomright", col="red", pch=20, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter"),bty="n", pt.cex=c(1,10,100))
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomright", col="red", pch=20, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter"),bty="n", pt.cex=c(1,10,100))
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomright", col="red", pch=20, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter"),bty="n")
legend(x="bottomright", col="red", pch=20, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter"),bty="n",  pt.cex=(sqrt(10,100,1000)/pi))/10
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomright", col="red", pch=20, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter"),bty="n",  pt.cex=(sqrt(c(10,100,1000))/pi))/10
locator()
legend(x="bottomleft", col="red", pch=20, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter"),bty="n",  pt.cex=(sqrt(c(10,100,1000))/pi))/10
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomleft", col="red", pch=20, legend=c("10 indd./sq.meter", "100 indd./sq.meter", "1000 indd./sq.meter"),bty="n", border="white", pt.cex=(sqrt(c(10,100,1000))/pi))/10
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10, border="black")
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", border="black", pt.cex=(sqrt(c(1000,100,10))/pi))/10
ishodnik$Nmean
radius <- sqrt( ishodnik$Nmean/ pi)
radius
(sqrt(c(1000,100,10))/pi))
(sqrt(c(1000,100,10))/pi)
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10))/pi)/10)
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/10)
)
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/10))
plot(seas, xlim=c(30,44), ylim=c(63.8,70), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/10))
pdf("white_barents_Nmean.pdf", family="NimbusSan", width=190, height=280, paper="a4")
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/10))
dev.off()
embedFonts("white_barents_Nmean.pdf")
plot(seas, xlim=c(30,40), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
pdf("white_barents_Nmean.pdf", family="NimbusSan", width=190, height=280, paper="a4")
plot(seas, xlim=c(30,44), ylim=c(65,71), lwd=2) #тут как-то я меняла соотношение сторон явно
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/10))
dev.off()
embedFonts("white_barents_Nmean.pdf")
pdf("white_barents_Nmean_1.pdf", family="NimbusSan", width=190, height=280, paper="a4")
map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
#map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/10))
dev.off()
embedFonts("white_barents_Nmean_1.pdf")
pdf("white_barents_Nmean_1.pdf", family="NimbusSan", width=190, height=280, paper="a4")
#map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/10)
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/10))
dev.off()
embedFonts("white_barents_Nmean_1.pdf")
pdf("white_barents_Nmean_1.pdf", family="NimbusSan", width=190, height=280, paper="a4")
#map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius)
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)))
dev.off()
embedFonts("white_barents_Nmean_1.pdf")
pdf("white_barents_Nmean_1.pdf", family="NimbusSan", width=190, height=280, paper="a4")
#map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/5)
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/5))
dev.off()
embedFonts("white_barents_Nmean_1.pdf")
ishodnik
pch()
example(pch)
pchShow
pchShow()
pdf("white_barents_Nmean_1.pdf", family="NimbusSan", width=190, height=280, paper="a4")
#map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/5)
legend(x="bottomleft", col="black", bg="red" pch=21, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/5))
dev.off()
embedFonts("white_barents_Nmean_1.pdf")
pdf("white_barents_Nmean_1.pdf", family="NimbusSan", width=190, height=280, paper="a4")
#map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, fg="black", col="red", pch=20, cex=radius/5)
legend(x="bottomleft", col="black", bg="red", pch=21, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/5))
dev.off()
embedFonts("white_barents_Nmean_1.pdf")
pdf("white_barents_Nmean_1.pdf", family="NimbusSan", width=190, height=280, paper="a4")
#map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, col="black", bg="red", pch=21, cex=radius/5)
legend(x="bottomleft", col="black", bg="red", pch=21, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/5))
dev.off()
embedFonts("white_barents_Nmean_1.pdf")
pdf("white_barents_Nmean_1.pdf", family="NimbusSan", width=190, height=280, paper="a4")
#map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, col="black", bg="red", pch=21, cex=radius/5)
legend(x="bottomleft", col="black", fill="red", pch=21, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/5))
dev.off()
embedFonts("white_barents_Nmean_1.pdf")
pdf("white_barents_Nmean_1.pdf", family="NimbusSan", width=190, height=280, paper="a4")
#map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, col="black", bg="red", pch=21, cex=radius/5)
legend(x="bottomleft", col="black", bg="red", pch=21, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/5))
dev.off()
embedFonts("white_barents_Nmean_1.pdf")
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, col="black", bg="red", pch=21, cex=radius/5)
legend(x="bottomleft", col="black", fill=T, bg="red", pch=21, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/5))
legend(x="bottomleft", col="black", bg="red", pch=21, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/5))
points(x=ishodnik$Edec, y=ishodnik$Ndec, col="black", bg="red", pch=21, cex=radius/5)
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/5))
pdf("white_barents_Nmean_1.pdf", family="NimbusSan", width=190, height=280, paper="a4")
#map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, col="black", bg="red", pch=21, cex=radius/5)
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/5))
dev.off()
embedFonts("white_barents_Nmean_1.pdf")
ishodnik
pdf("white_barents_Nmean_1.pdf", family="NimbusSan")#, width=190, height=280, paper="a4")
#map("worldHires", xlim=long_lim, ylim=lat_lim, col="gray90", fill=TRUE)
map("worldHires", xlim=c(30,44), ylim=c(63.8,70), col="gray90", fill=TRUE)
points(x=ishodnik$Edec, y=ishodnik$Ndec, col="black", bg="red", pch=21, cex=radius/5)
legend(x="bottomleft", col="red", pch=20, legend=c("1000 indd./sq.meter", "100 indd./sq.meter", "10 indd./sq.meter"),bty="n", pt.cex=(sqrt(c(1000,100,10)/pi)/5))
dev.off()
embedFonts("white_barents_Nmean_1.pdf")
ishodnik
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Estuatiy_Luvenga")
detach(ishodnik)
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
biomass.measure<-read.table(file="biomass.csv", sep=";", dec=",", head=T)
attach(ishodnik)
meansize<-tapply(ishodnik$Length.mm, ishodnik$year, mean)
meansize
meansize<-tapply(ishodnik$Length.mm, ishodnik$year, mean, na.rm=T)
plot(meansize)
plot(x=as.numeric(names(meansize)), y=meansize)
