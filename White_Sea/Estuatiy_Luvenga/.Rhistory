(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
subset(size.str.df, size.str.df$year=="1995")
subset(size.str.df, size.str.df$year=="1995" & size.str.df$Freq!=NA)
subset(size.str.df, size.str.df$year=="1995" & size.str.df$sample=="mg4")
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
subset(size.str.df, size.str.df$year=="1995" & size.str.df$sample=="mg4")
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
write.table(assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i])), file=paste(levels(size.str.sqmeter$tidal_level)[i]), sep=",")
}
#subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1992")
#и среднее??
# tapply выдает как резудьтат матрицу
# надо как-то дружить array's в момент рассчета ошибок... и как потом рисовать картики? или проще разделить на отдельные горизонтв и поработать с ними??
#attach(paste(levels(size.str.sqmeter$tidal_level)[1]))
#
#assign(paste("mean.sqmeter", levels(size.str.sqmeter$tidal_level)[1], sep="."),
#       tapply(paste(levels(size.str.sqmeter$tidal_level)[1])$Freq,
#              INDEX=list(levels(size.str.sqmeter$tidal_level)[1]$year, levels(size.str.sqmeter$tidal_level)[1]$Length.int)),
#              FUN=mean, na.rm=T))
#КАК АВТОМАТИЗИРОВАТЬ ТЕМУ ПРО НЕСКОЛЬКО УЧАСТКОВ Я НЕ ПРИДУМАЛА :( ПИШУ РУЧКАМИ 4 РАЗА...
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal_level), length ))
(n.samples.df<-as.data.frame(n.samples))
(mean.sqmeter.low<-t(tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=sd, na.rm=T)))
setwd("~/note_backup_2013-04-13/PhD_thesis/White_Sea/Luvenga_Goreliy//")
# размерная структура средние по годам по горизонтам
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
subset(size.str.df, size.str.df$year=="1995" & size.str.df$sample=="mg4")
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
write.table(assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i])), file=paste(levels(size.str.sqmeter$tidal_level)[i]), sep=",")
}
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal_level), length ))
(n.samples.df<-as.data.frame(n.samples))
(mean.sqmeter.low<-t(tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.low.df<-as.data.frame(mean.sqmeter.low)
sd.sqmeter.low<-tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low <-t(sd.sqmeter.low/sqrt(n.samples.df$low))
sem.sqmeter.low.df<-as.data.frame(sem.sqmeter.low)
sem.sqmeter.low[sem.sqmeter.low==mean.sqmeter.low]<-0
length.class<-seq(1,20,1)
#нижний горизонт, у нуля глубин
mean.sqmeter2.low<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.low.df<-as.data.frame(mean.sqmeter2.low)
sd.sqmeter2.low<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.low <-t(sd.sqmeter2.low/sqrt(n.samples.df$low))
sem.sqmeter2.low.df<-as.data.frame(sem.sqmeter2.low)
sem.sqmeter2.low[sem.sqmeter2.low==mean.sqmeter2.low]<-0
length.class2<-seq(2,20,1)
#from R-book
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
#нижний горизонт, у нуля глубин
for (j in 1:length(colnames(mean.sqmeter.low)))
{
pdf(file=paste("low", colnames(mean.sqmeter.low)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter.low[,j], nn=length.class,  z=sem.sqmeter.low[,j])
title(main=colnames(mean.sqmeter.low)[j], xlab="", ylab="")
dev.off()
}
for (j in 1:length(colnames(mean.sqmeter2.low)))
{
pdf(file=paste("low2", colnames(mean.sqmeter2.low)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter2.low[,j], nn=length.class2,  z=sem.sqmeter2.low[,j])
title(main=colnames(mean.sqmeter2.low)[j], xlab="", ylab="")
dev.off()
}
(N.sqmeter<-tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample, size.str.df$tidal_level), sum))
(N.mean.sqmeter<-apply(N.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=mean))
N.mean.sqmeter[11,3]<-NA
(N.sd.sqmeter<-apply(N.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=sd))
(N.sem.sqmeter<-N.sd.sqmeter/sqrt(n.samples))
pdf(file="N_dynamic.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=N.mean.sqmeter[,1], x=as.numeric(rownames(N.mean.sqmeter)), type="n", main="о. Горелый (Лувеньгские шхеры)",
#     ylim=c(min(N.mean.sqmeter, na.rm=T)-max(N.sem.sqmeter, na.rm=T), max(N.mean.sqmeter, na.rm=T)+max(N.sem.sqmeter, na.rm=T)),
ylim=c(0, max(N.mean.sqmeter, na.rm=T)+max(N.sem.sqmeter, na.rm=T)),
xlab="год", ylab="N, экз./кв.м")
for (i in 1:ncol(N.mean.sqmeter))
{lines(as.numeric(rownames(N.mean.sqmeter)), N.mean.sqmeter[,i], pch=14+i, col=0+i, type="b")
arrows(x0=as.numeric(rownames(N.mean.sqmeter)), x1=as.numeric(rownames(N.mean.sqmeter)),
y0=N.mean.sqmeter[,i]-N.sem.sqmeter[,i], y1=N.mean.sqmeter[,i]+N.sem.sqmeter[,i], angle=90, code=3, length=.1, col=0+i)
}
legend(legend=colnames(N.mean.sqmeter),x=2005, y=31900, pch=seq(15,15+ncol(N.mean.sqmeter),1), col=seq(1,1+ncol(N.mean.sqmeter),1))
dev.off()
embedFonts("N_dynamic.pdf") #встройка шрифтов в файл
#динамика без молод ( больше 2+)
(N2.sqmeter<-tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"],
size.str.df$tidal_level[size.str.sqmeter$Length.int!="(0,1]"]), sum))
(N2.mean.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=mean))
2N2.mean.sqmeter[11,3]<-NA
(N2.sd.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=sd))
(N2.sem.sqmeter<-N2.sd.sqmeter/sqrt(n.samples))
pdf(file="N2_dynamic.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=N2.mean.sqmeter[,1], x=as.numeric(rownames(N2.mean.sqmeter)), type="n", main="о. Горелый (Лувеньгские шхеры)",
#     ylim=c(min(N2.mean.sqmeter, na.rm=T)-max(N2.sem.sqmeter, na.rm=T), max(N2.mean.sqmeter, na.rm=T)+max(N2.sem.sqmeter, na.rm=T)),
ylim=c(0, max(N2.mean.sqmeter, na.rm=T)+max(N2.sem.sqmeter, na.rm=T)),
xlab="год", ylab="N, экз./кв.м")
for (i in 1:ncol(N2.mean.sqmeter))
{lines(as.numeric(rownames(N2.mean.sqmeter)), N2.mean.sqmeter[,i], pch=14+i, col=0+i, type="b")
arrows(x0=as.numeric(rownames(N2.mean.sqmeter)), x1=as.numeric(rownames(N2.mean.sqmeter)),
y0=N2.mean.sqmeter[,i]-N2.sem.sqmeter[,i], y1=N2.mean.sqmeter[,i]+N2.sem.sqmeter[,i], angle=90, code=3, length=.1, col=0+i)
}
legend(legend=colnames(N2.mean.sqmeter),x=2005, y=31900, pch=seq(15,15+ncol(N2.mean.sqmeter),1), col=seq(1,1+ncol(N2.mean.sqmeter),1))
dev.off()
embedFonts("N2_dynamic.pdf") #встройка шрифтов в файл
#динамика максимального размера
str(ishodnik)
(Length.max<-tapply(Length.mm, list(year, tidal_level), max, na.rm=T))
#plot(x=names(Length.max), y=Length.max, type=none)
max(Length.mm[year=="1995"] & tidal_level=="low"])
subset(ishodnik, year=="1995")
pdf(file="L_max.pdf", family="NimbusSan") # указываем шрифт подпией
plot(x=rownames(Length.max), y=Length.max[,1], type="n", main="о. Горелый", xlab="год", ylab="L max, мм",
ylim=c(min(Length.max), max(Length.max)))
for (i in 1:ncol(Length.max))
{lines(as.numeric(rownames(Length.max)), Length.max[,i], pch=14+i, col=0+i, type="b")
}
legend(legend=colnames(Length.max),x=2002.9, y=9.5, pch=seq(15,15+ncol(Length.max),1), col=seq(1,1+ncol(Length.max),1))
dev.off()
embedFonts("L_max.pdf") #встройка шрифтов в файл
plot(x=rownames(Length.max), y=Length.max[,1], type="n", main="о. Горелый", xlab="год", ylab="L max, мм",
ylim=c(min(Length.max), max(Length.max)))
for (i in 1:ncol(Length.max))
{lines(as.numeric(rownames(Length.max)), Length.max[,i], pch=14+i, col=0+i, type="b")
}
locator()
pdf(file="L_max.pdf", family="NimbusSan") # указываем шрифт подпией
plot(x=rownames(Length.max), y=Length.max[,1], type="n", main="о. Горелый", xlab="год", ylab="L max, мм",
ylim=c(min(Length.max), max(Length.max)))
for (i in 1:ncol(Length.max))
{lines(as.numeric(rownames(Length.max)), Length.max[,i], pch=14+i, col=0+i, type="b")
}
legend(legend=colnames(Length.max),x=1993.6, y=11.6, pch=seq(15,15+ncol(Length.max),1), col=seq(1,1+ncol(Length.max),1))
dev.off()
embedFonts("L_max.pdf") #встройка шрифтов в файл
setwd("~/note_backup_2013-04-13/PhD_thesis/White_Sea/Estuatiy_Luvenga")
# размерная структура суммарно по годам по горизонтам
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
n.samples<-tapply(samples.names$sample,samples.names$year, length )
str(ishodnik)
(yong.old.int<-cut(Length.mm, breaks=c(1,2.5,8))
)
(yong.old.int<-cut(Length.mm, breaks=c(1,2.5,8,max(Length.mm, na.rm=T))))
(yong.old.table<-table(yong.old.int,year,sample))
yong.old.df<-as.data.frame(yong.old.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(yong.old.df$year)))
{ (xxx<-yong.old.df$sample[yong.old.df$year==levels(yong.old.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(yong.old.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[yong.old.df$year==levels(yong.old.df$year)[i]][antixxx]<-NA
}
#теперь на квадратный метр
yong.old.sqmeter<-yong.old.df
for (i in 1:length(levels(yong.old.sqmeter$year)))
{
yong.old.sqmeter$Freq[yong.old.sqmeter$year==levels(yong.old.sqmeter$year)[i]]<-yong.old.sqmeter$Freq[yong.old.sqmeter$year==levels(yong.old.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(yong.old.sqmeter$year)[i]]
}
(mean.yong.old.sqmeter<-t(tapply(yong.old.sqmeter$Freq,INDEX=list(yong.old.sqmeter$year, yong.old.sqmeter$Length.int),FUN=mean, na.rm=T)))
(sd.yong.old.sqmeter<-tapply(yong.old.sqmeter$Freq,INDEX=list(yong.old.sqmeter$year, yong.old.sqmeter$Length.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.yong.old.sqmeter <-t(sd.yong.old.sqmeter/sqrt(as.vector(n.samples))))
(yong.old.int<-cut(Length.mm, breaks=c(1,2.5,7.9,max(Length.mm, na.rm=T))))
(yong.old.table<-table(yong.old.int,year,sample))
yong.old.df<-as.data.frame(yong.old.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(yong.old.df$year)))
{ (xxx<-yong.old.df$sample[yong.old.df$year==levels(yong.old.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(yong.old.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[yong.old.df$year==levels(yong.old.df$year)[i]][antixxx]<-NA
}
yong.old.sqmeter<-yong.old.df
(young.old.int<-cut(Length.mm, breaks=c(1,2.5,7.9,max(Length.mm, na.rm=T))))
(young.old.table<-table(young.old.int,year,sample))
young.old.df<-as.data.frame(young.old.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(young.old.df$year)))
{ (xxx<-young.old.df$sample[young.old.df$year==levels(young.old.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(young.old.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[young.old.df$year==levels(young.old.df$year)[i]][antixxx]<-NA
}
#теперь на квадратный метр
young.old.sqmeter<-young.old.df
for (i in 1:length(levels(young.old.sqmeter$year)))
{
young.old.sqmeter$Freq[young.old.sqmeter$year==levels(young.old.sqmeter$year)[i]]<-
young.old.sqmeter$Freq[young.old.sqmeter$year==levels(young.old.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(young.old.sqmeter$year)[i]]
}
(mean.young.old.sqmeter<-t(tapply(young.old.sqmeter$Freq,INDEX=list(young.old.sqmeter$year, young.old.sqmeter$Length.int),FUN=mean, na.rm=T)))
young.old.sqmeter$Freq
str(yong.old.sqmeter)
length(young.old.sqmeter$Freq)
(mean.young.old.sqmeter<-t(tapply(young.old.sqmeter$Freq,INDEX=list(young.old.sqmeter$year, young.old.sqmeter$young.old.int),FUN=mean, na.rm=T)))
(sd.young.old.sqmeter<-tapply(young.old.sqmeter$Freq,INDEX=list(young.old.sqmeter$year, young.old.sqmeter$young.old.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.young.old.sqmeter <-t(sd.young.old.sqmeter/sqrt(as.vector(n.samples))))
is.matrix(sem.young.old.sqmeter)
mean.young.old.sqmeter[,1]
plot(y=mean.young.old.sqmeter[1,], x=colnames(mean.young.old.sqmeter),pch=15, type="n", main="Эстуарий р. Лувеньги",
ylim=c(min(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])-max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,]),
max(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])+max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,])),
xlab="год", ylab="N, экз./кв.м")
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[1,], pch=1, type="b", col=2)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[1,]-sem.young.old.sqmeter[1,],
y1=mean.young.old.sqmeter[1,]+sem.young.old.sqmeter[1,], angle=90, code=3, length=0.1. col=2)
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[1,], pch=15, type="b", col=2)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[1,]-sem.young.old.sqmeter[1,],
y1=mean.young.old.sqmeter[1,]+sem.young.old.sqmeter[1,], angle=90, code=3, length=0.1. col=2)
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[3,], pch=16, type="b", col=3)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[3,]-sem.young.old.sqmeter[3,],
y1=mean.young.old.sqmeter[3,]+sem.young.old.sqmeter[3,], angle=90, code=3, length=0.1. col=3)
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[3,], pch=16, type="b", col=4)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[3,]-sem.young.old.sqmeter[3,],
y1=mean.young.old.sqmeter[3,]+sem.young.old.sqmeter[3,], angle=90, code=3, length=0.1. col=4)
pdf(file="young_old.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=mean.young.old.sqmeter[1,], x=colnames(mean.young.old.sqmeter),pch=15, type="n", main="Эстуарий р. Лувеньги",
ylim=c(min(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])-max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,]),
max(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])+max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,])),
xlab="год", ylab="N, экз./кв.м")
#молодь
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[1,], pch=15, type="b", col=2)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[1,]-sem.young.old.sqmeter[1,],
y1=mean.young.old.sqmeter[1,]+sem.young.old.sqmeter[1,], angle=90, code=3, length=0.1. col=2)
#половозрелые
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[3,], pch=16, type="b", col=4)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[3,]-sem.young.old.sqmeter[3,],
y1=mean.young.old.sqmeter[3,]+sem.young.old.sqmeter[3,], angle=90, code=3, length=0.1, col=4)
dev.off()
embedFonts("young_old.pdf") #встройка шрифтов в файл
mean.young.old.sqmeter[3,]-sem.young.old.sqmeter[3,]
plot(y=mean.young.old.sqmeter[1,], x=colnames(mean.young.old.sqmeter),pch=15, type="n", main="Эстуарий р. Лувеньги",
ylim=c(min(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])-max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,]),
max(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])+max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,])),
xlab="год", ylab="N, экз./кв.м")
#молодь
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[1,], pch=15, type="b", col=2)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[1,]-sem.young.old.sqmeter[1,],
y1=mean.young.old.sqmeter[1,]+sem.young.old.sqmeter[1,], angle=90, code=3, length=0.1. col=2)
#половозрелые
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[3,], pch=16, type="b", col=4)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[3,]-sem.young.old.sqmeter[3,],
y1=mean.young.old.sqmeter[3,]+sem.young.old.sqmeter[3,], angle=90, code=3, length=0.1, col=4)
plot(y=mean.young.old.sqmeter[1,], x=colnames(mean.young.old.sqmeter),pch=15, type="n", main="Эстуарий р. Лувеньги",
#     ylim=c(min(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])-max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,]),
#            max(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])+max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,])),
ylim=c(0,
max(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])+max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,])),
xlab="год", ylab="N, экз./кв.м")
#молодь
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[1,], pch=15, type="b", col=2)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[1,]-sem.young.old.sqmeter[1,],
y1=mean.young.old.sqmeter[1,]+sem.young.old.sqmeter[1,], angle=90, code=3, length=0.1. col=2)
#половозрелые
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[3,], pch=16, type="b", col=4)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[3,]-sem.young.old.sqmeter[3,],
y1=mean.young.old.sqmeter[3,]+sem.young.old.sqmeter[3,], angle=90, code=3, length=0.1, col=4)
plot(y=mean.young.old.sqmeter[1,], x=colnames(mean.young.old.sqmeter),pch=15, type="n", main="Эстуарий р. Лувеньги",
#     ylim=c(min(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])-max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,]),
#            max(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])+max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,])),
ylim=c(0,
max(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])+max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,])),
xlab="год", ylab="N, экз./кв.м")
#молодь
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[1,], pch=15, type="b", col=2)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[1,]-sem.young.old.sqmeter[1,],
y1=mean.young.old.sqmeter[1,]+sem.young.old.sqmeter[1,], angle=90, code=3, length=0.1, col=2)
#половозрелые
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[3,], pch=16, type="b", col=4)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[3,]-sem.young.old.sqmeter[3,],
y1=mean.young.old.sqmeter[3,]+sem.young.old.sqmeter[3,], angle=90, code=3, length=0.1, col=4)
pdf(file="young_old.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=mean.young.old.sqmeter[1,], x=colnames(mean.young.old.sqmeter),pch=15, type="n", main="Эстуарий р. Лувеньги",
#     ylim=c(min(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])-max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,]),
#            max(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])+max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,])),
ylim=c(0,
max(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,])+max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,])),
xlab="год", ylab="N, экз./кв.м")
#молодь
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[1,], pch=15, type="b", col=2)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[1,]-sem.young.old.sqmeter[1,],
y1=mean.young.old.sqmeter[1,]+sem.young.old.sqmeter[1,], angle=90, code=3, length=0.1, col=2)
#половозрелые
lines(seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
mean.young.old.sqmeter[3,], pch=16, type="b", col=4)
arrows(x0=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
x1=seq(as.numeric(min(colnames(mean.young.old.sqmeter))),as.numeric(max(colnames(mean.young.old.sqmeter))),1),
y0=mean.young.old.sqmeter[3,]-sem.young.old.sqmeter[3,],
y1=mean.young.old.sqmeter[3,]+sem.young.old.sqmeter[3,], angle=90, code=3, length=0.1, col=4)
dev.off()
embedFonts("young_old.pdf") #встройка шрифтов в файл
cor.test(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,], method="spearman")
cor.test(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,], method="pearson")
spearman.young.old<-cor.test(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,], method="spearman")
write.table(x=spearman.young.old, file="corr_molod_polovozrelye.csv", sep=";", dec=",")
write.table(x=spearman.young.old, file="corr_molod_polovozrelye.csv", dec=",")
write.table(x=spearman.young.old, file="corr_molod_polovozrelye.csv")
write.table(x=spearman.young.old, file="corr_molod_polovozrelye.txt")
spearman.young.old<-cor.test(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,], method="spearman")
write.table(x=spearman.young.old, file="aaa.csv")
spearman.young.old<-cor.test(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,], method="spearman")
(spearman.young.old<-cor.test(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,], method="spearman"))
(young.old.percent<-young.old.sqmeter/colSums(yong.old.sqmeter)*100)
(young.old.percent<-young.old.sqmeter/colSums(young.old.sqmeter)*100)
young.old.sqmeter
(sum.young.old<-t(tapply(young.old.sqmeter$Freq[young.old.sqmeter$young.old.int!="(0,1]"],
INDEX=list(young.old.sqmeter$year[young.old.sqmeter$young.old.int!="(0,1]"],
young.old.sqmeter$Length.int[young.old.sqmeter$young.old.int!="(0,1]"]),
FUN=sum, na.rm=T)))
young.old.sqmeter$Freq
young.old.sqmeter$young.old.int!="(0,1]"
young.old.sqmeter$Freq[young.old.sqmeter$young.old.int!="(0,1]"]
(sum.young.old<-t(tapply(young.old.sqmeter$Freq[young.old.sqmeter$young.old.int!="(0,1]"],
INDEX=list(young.old.sqmeter$year[young.old.sqmeter$young.old.int!="(0,1]"],
young.old.sqmeter$young.old.int[young.old.sqmeter$young.old.int!="(0,1]"]),
FUN=sum, na.rm=T)))
(young.old.percent.percents<-sum.young.old/colSums(sum.young.old, na.rm=T)*100)
sum.young.old
colSums(sum.young.old, na.rm=T)
(young.old.percent.percents<-(sum.young.old/colSums(sum.young.old, na.rm=T))*100)
(sum.young.old[2,20]/colSums(sum.young.old[,20], na.rm=T))*100)
(sum.young.old[2,20]/colSums(sum.young.old[,20], na.rm=T))*100
(sum.young.old[2,20]/sum(sum.young.old[,20], na.rm=T))*100
sum.young.old[2,20]
sum(sum.young.old[,20], na.rm=T)
is.vector(colSums(sum.young.old, na.rm=T))
(young.old.percent.percents<-t(t(sum.young.old)/colSums(sum.young.old, na.rm=T))*100))
(young.old.percent.percents<-t(t(sum.young.old)/colSums(sum.young.old, na.rm=T))*100)
(young.old.percents<-t(t(sum.young.old)/colSums(sum.young.old, na.rm=T))*100)
plot(y=young.old.percents[1,], x=colnames(young.old.percents),pch=15, type="n", main="Эстуарий р. Лувеньги",
#     ylim=c(min(young.old.percents[1,], young.old.percents[3,])-max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,]),
#            max(young.old.percents[1,], young.old.percents[3,])+max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,])),
ylim=c(0,
max(young.old.percents[1,], young.old.percents[3,])),
xlab="год", ylab="доля от общей численности, %")
#молодь
lines(seq(as.numeric(min(colnames(young.old.percents))),as.numeric(max(colnames(young.old.percents))),1),
young.old.percents[1,], pch=15, type="b", col=2)
#половозрелые
lines(seq(as.numeric(min(colnames(young.old.percents))),as.numeric(max(colnames(young.old.percents))),1),
young.old.percents[3,], pch=16, type="b", col=4)
pdf(file="young_old_percents.pdf", family="NimbusSan") # указываем шрифт подпией
plot(y=young.old.percents[1,], x=colnames(young.old.percents),pch=15, type="n", main="Эстуарий р. Лувеньги",
#     ylim=c(min(young.old.percents[1,], young.old.percents[3,])-max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,]),
#            max(young.old.percents[1,], young.old.percents[3,])+max(sem.young.old.sqmeter[1,], sem.young.old.sqmeter[3,])),
ylim=c(0,
max(young.old.percents[1,], young.old.percents[3,])),
xlab="год", ylab="доля от общей численности, %")
#молодь
lines(seq(as.numeric(min(colnames(young.old.percents))),as.numeric(max(colnames(young.old.percents))),1),
young.old.percents[1,], pch=15, type="b", col=2)
#половозрелые
lines(seq(as.numeric(min(colnames(young.old.percents))),as.numeric(max(colnames(young.old.percents))),1),
young.old.percents[3,], pch=16, type="b", col=4)
dev.off()
embedFonts("young_old_percents.pdf") #встройка шрифтов в файл
(spearman.young.old.mean<-cor.test(mean.young.old.sqmeter[1,], mean.young.old.sqmeter[3,], method="spearman"))
(spearman.young.old.sum.percent<-cor.test(young.old.percents[1,], young.old.percents[3,], method="spearman"))
ды()
ls()
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(N2.sqmeter<-(t(tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"]), sum))))
(N2.mean.sqmeter<-colMeans(N2.sqmeter, na.rm=T))
N2.sd.sqmeter<-apply(N2.sqmeter, 2, sd, na.rm=T)
N2.sem.sqmeter<-N2.sd.sqmeter/sqrt(n.samples)
#точность учета
(D.n2<-N2.sem.sqmeter/N2.mean.sqmeter*100)
