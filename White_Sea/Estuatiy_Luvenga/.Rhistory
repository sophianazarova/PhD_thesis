histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |  reorder(as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), X = -as.factor(ishodnik$year[ishodnik$Length.mm >=1 ])))
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |  reorder(as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), X = as.factor(-ishodnik$year[ishodnik$Length.mm >=1 ])))
reorder(as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), X = as.factor(-ishodnik$year[ishodnik$Length.mm >=1 ]))
ishodnik$year[ishodnik$Length.mm >=1 ]
reorder(as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), X = as.factor(0-ishodnik$year[ishodnik$Length.mm >=1 ]))
seq(2012,1992,1)
sort(seq(1992,2002,1), decreasing = T)
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] | ordered(as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), levels = sort(seq(1992,2002,1), decreasing = T)))
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]))
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), xlab = "L, mm")
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), xlab = "L, mm", breaks = seq(1, max(ishodnik$Length.mm, na.rm=T)+1, 1))
pdf("Goreliy_total_size_str.pdf", family = "NimbusSan")
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), xlab = "L, mm", breaks = seq(1, max(ishodnik$Length.mm, na.rm=T)+1, 1))
dev.off()
embedFonts("Goreliy_total_size_str.pdf")
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Estuatiy_Luvenga")
g_ish <- ishodnik
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
biomass.measure<-read.table(file="biomass.csv", sep=";", dec=",", head=T)
attach(ishodnik)
detach(ishodnik)
detach(ishodnik)
detach(ishodnik)
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
biomass.measure<-read.table(file="biomass.csv", sep=";", dec=",", head=T)
attach(ishodnik)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
(n.samples<-tapply(samples.names$sample,samples.names$year, length ))
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
apply(mean.sizestr.sqmeter2, 2, max)
max(apply(mean.sizestr.sqmeter2, 2, max))
length.class<-seq(1,20,1)
length.class2<-seq(2,20,1)
sizestr2_df<-data.frame(size=as.factor(rep(seq(2,20,1),21)), size_class=as.data.frame(as.table(mean.sizestr.sqmeter2))[,1],year=(as.data.frame(as.table(mean.sizestr.sqmeter2))[,2]), meanN=as.data.frame(as.table(mean.sizestr.sqmeter2))[,3], SEM=as.data.frame(as.table(sem.sizestr.sqmeter2))[,3])
str(sizestr2_df)
library(lattice)
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), xlab = "L, mm", breaks = seq(1, max(ishodnik$Length.mm, na.rm=T)+1, 1))
pdf("Estuary_total_size_str.pdf", family = "NimbusSan")
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), xlab = "L, mm", breaks = seq(1, max(ishodnik$Length.mm, na.rm=T)+1, 1))
dev.off()
embedFonts("Estuary_total_size_str.pdf")
ish_EG <- ishodnik
ish_EG$site <- rep("Luvenga estuary", length(ish_EG$Length.mm))
g_ish$site <- rep("Goreliy", length(g_ish$Length.mm))
cbind(ish_EG, g_ish)
rbind(ish_EG, g_ish)
g_ish
ish_EG
str(ish_EG)
g_ish
str(g_ish)
g_ish[,c(1,3,47)]
g_ish <- data.frame(g_ish$year, g_ish$sample, g_ish$Length.mm, g_ish$site)
rbind(ish_EG, g_ish)
g_ish
str(g_ish)
g_ish <- data.frame(year = g_ish$year, sample = g_ish$sample, Length.mm = g_ish$Length.mm, site = g_ish$site)
rbind(ish_EG, g_ish)
ish_EG <- rbind(ish_EG, g_ish)
histogram(~ ish_EG$Length.mm[ish_EG$Length.mm >=1] | as.factor(ish_EG$year[ish_EG$Length.mm >=1] |ish_EG$site[ish_EG$Length.mm >=1] ), xlab = "L, mm", breaks = seq(1, max(ish_EG$Length.mm, na.rm=T)+1, 1))
histogram(~ ish_EG$Length.mm[ish_EG$Length.mm >=1] | as.factor(ish_EG$year[ish_EG$Length.mm >=1] |as.factor(ish_EG$site[ish_EG$Length.mm >=1]) ), xlab = "L, mm", breaks = seq(1, max(ish_EG$Length.mm, na.rm=T)+1, 1))
histogram(~ ish_EG$Length.mm[ish_EG$Length.mm >=1] | as.factor(ish_EG$year[ish_EG$Length.mm >=1] + as.factor(ish_EG$site[ish_EG$Length.mm >=1]) ), xlab = "L, mm", breaks = seq(1, max(ish_EG$Length.mm, na.rm=T)+1, 1))
as.factor(ish_EG$site[ish_EG$Length.mm >=1])
library(lattice)
pdf("Estuary_total_size_str.pdf", family = "NimbusSan")
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), xlab = "L, mm", breaks = seq(1, max(ishodnik$Length.mm, na.rm=T)+1, 1))
dev.off()
embedFonts("Estuary_total_size_str.pdf")
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Estuatiy_Luvenga")
detach(ishodnik)
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
biomass.measure<-read.table(file="biomass.csv", sep=";", dec=",", head=T)
attach(ishodnik)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
n.samples<-tapply(samples.names$sample,samples.names$year, length )
#subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1992")
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
(n.samples<-tapply(samples.names$sample,samples.names$year, length ))
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
apply(mean.sizestr.sqmeter2, 2, max)
max(apply(mean.sizestr.sqmeter2, 2, max))
length.class<-seq(1,20,1)
length.class2<-seq(2,20,1)
sizestr2_df<-data.frame(size=as.factor(rep(seq(2,20,1),21)), size_class=as.data.frame(as.table(mean.sizestr.sqmeter2))[,1],year=(as.data.frame(as.table(mean.sizestr.sqmeter2))[,2]), meanN=as.data.frame(as.table(mean.sizestr.sqmeter2))[,3], SEM=as.data.frame(as.table(sem.sizestr.sqmeter2))[,3])
str(sizestr2_df)
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), xlab = "L, mm", breaks = seq(1, max(ishodnik$Length.mm, na.rm=T)+1, 1))
library(lattice)
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), xlab = "L, mm", breaks = seq(1, max(ishodnik$Length.mm, na.rm=T)+1, 1))
as.factor(ishodnik$year[ishodnik$Length.mm >=1 ])
seq(2012,1992,-1)
reorder(as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), seq(2012,1992,-1))
order(as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), decreasing = T)
ordered(as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), levels = seq(2012,1992,-1))
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |ordered(as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), levels = seq(2012,1992,-1)), xlab = "L, mm", breaks = seq(1, max(ishodnik$Length.mm, na.rm=T)+1, 1))
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ], le), xlab = "L, mm", breaks = seq(1, max(ishodnik$Length.mm, na.rm=T)+1, 1))
histogram(~ ishodnik$Length.mm[ishodnik$Length.mm >=1] |as.factor(ishodnik$year[ishodnik$Length.mm >=1 ]), xlab = "L, mm", breaks = seq(1, max(ishodnik$Length.mm, na.rm=T)+1, 1))
library(ggplot2)
to_plot<-subset(sizestr2_df, sizestr2_df$year%in%levels(sizestr2_df$year)[levels(sizestr2_df$year)>1997 & levels(sizestr2_df$year)<2010])
dodge <- position_dodge(width=0.9)
p <- ggplot(data=to_plot, aes(y=meanN, x=size)) +
geom_bar(position=dodge, stat="identity") +
facet_wrap(~year, ncol=4) +
theme_bw() +
xlab("длина раковины, мм") +
ylab("N, экз./кв.м") +
scale_x_discrete(breaks=seq(2,20,4))
p + geom_errorbar(aes(ymin=meanN-SEM, ymax=meanN+SEM), position=dodge, width=0.25)
dodge <- position_dodge(width=0.9)
p <- ggplot(data=to_plot, aes(y=meanN, x=size)) +
geom_bar(position=dodge, stat="identity") +
facet_wrap(~year, ncol=4, scales = "free") +
theme_bw() +
xlab("длина раковины, мм") +
ylab("N, экз./кв.м") +
scale_x_discrete(breaks=seq(2,20,4))
p + geom_errorbar(aes(ymin=meanN-SEM, ymax=meanN+SEM), position=dodge, width=0.25)
pdf("Estuary_sizestr_oneplot_nonscale.pdf", family="NimbusSan")
p + geom_errorbar(aes(ymin=meanN-SEM, ymax=meanN+SEM), position=dodge, width=0.25)
dev.off()
embedFonts("Estuary_sizestr_oneplot_nonscale.pdf")
install.packages("diptest")
library(diptest)
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
biomass.measure<-read.table(file="biomass.csv", sep=";", dec=",", head=T)
attach(ishodnik)
str(ishodnik)
Length.mm[year == 1992]
hist(Length.mm[year == 1992])
dip.test(Length.mm[year == 1992])
hist(Length.mm[year == 1998])
dip.test(Length.mm[year == 1998])
dip.test(Length.mm[year == 1999])
hist(Length.mm[year == 1999])
dip.test(Length.mm[year == 2005])
hist(Length.mm[year == 2005])
hist(Length.mm[year == 2008])
dip.test(Length.mm[year == 2008])
hist(Length.mm[year == 2001])
dip.test(Length.mm[year == 2001])
hist(Length.mm[year == 2007])
dip.test(Length.mm[year == 2007])
install.packages("bootstrap")
library(bootstrap)
stamp
hist(stamp)
str(stamp)
hist(stamp$Thickness)
install.packages("bimodalitytest")
install.packages("bimodalitytest")
install.packages("mclust")
library(mclust)
gmm.2008 = Mclust(Length.mm[year == 2008])
gmm.2008 <- Mclust(data = Length.mm[year == 2008])
gmm.2008 <- Mclust(data = ishodnik$Length.mm[ishodnik$year == 2008])
Length.mm[year == 2008]
attach(ishodnik)
Length.mm[year == 2008]
Length.mm[year == 2008 & Length.mm!=NA]
na.omit(Length.mm[year == 2008])
gmm.2008 <- Mclust(data = na.omit(Length.mm[year == 2008]))
summary(gmm.2008)
hist(Length.mm[year == 2008])
gmm.2008 <- Mclust(data = na.omit(Length.mm[year == 2008]), G=2)
summary(gmm.2008)
gmm.2008 <- Mclust(data = na.omit(Length.mm[year == 2008]), G=1)
summary(gmm.2008)
gmm.2008.1 <- Mclust(data = na.omit(Length.mm[year == 2008]), G=1)
gmm.2008.2 <- Mclust(data = na.omit(Length.mm[year == 2008]), G=2)
logLik(gmm.2008.1)
logLik(gmm.2008.2) - logLik(gmm.2008.1)
1-pchisq(198.5686, df=3)
gmm.1998.1 <- Mclust(data = na.omit(Length.mm[year == 1998]), G=1)
gmm.1998.2 <- Mclust(data = na.omit(Length.mm[year == 1998]), G=2)
logLik(gmm.1998.1)
summary(gmm.2008)
logLik(gmm.1998.2) - logLik(gmm.1998.1)
1-pchisq(198.5686, df=3)
pchisq(198.5686, df=3)
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
biomass.measure<-read.table(file="biomass.csv", sep=";", dec=",", head=T)
attach(ishodnik)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
size.str.df
(letopis.table<-table(Length.int,sample, year))
(letopis.table<-table(sample, Length.int, year))
write.csv2(letopis.table, "Estuary_size_str_samples.csv")
write.csv2(letopis.table[,,1], "Estuary_size_str_samples.csv")
str(letopis.table)
length(letopis.table)
length(letopis.table[,,1])
length(dim(letopis.table))
length(dim(letopis.table)[3])
dim(letopis.table)
length(dim(letopis.table))[3]
dim(letopis.table)[3]
dimnames(letopis.table)
dimnames(letopis.table)$year[1]
(letopis.table<-table(sample, Length.int, year))
for (i in 1:dim(letopis.table)[3]) {
write.csv2(letopis.table[,,i], paste("Estuary_size_str_samples_", dimnames(letopis.table)$year[i] ,".csv"))
}
letopis.table
as.table(letopis.table)
ftable(letopis.table)
ftable(year, sample, Length.int)
write.csv2(ftable(year, sample, Length.int), "Estuary_size_str_samples_all.csv")
str((ftable(year, sample, Length.int))
)
(letopis.table<-table(Length.int, sample, year))
for (i in 1:dim(letopis.table)[3]) {
write.csv2(letopis.table[,,i], paste("Estuary_size_str_samples_", dimnames(letopis.table)$year[i] ,".csv"))
}
aperm(letopis.table,c(1,2,3))
dat <- array( rnorm(60), dim=c(4, 3, 5) )
dat
aperm(dat,c(3,2,1))
X <- aperm(dat,c(3,2,1))
dim(X)<- c(5, 12)
X
(letopis.table<-table( sample, Length.int, year))
rbind(letopis.table[,,1], letopis.table[,,2])
dim(letopis.table)[2]
rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1])
as.numeric(rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1]))
cbind(year = as.numeric(rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1])), letopis.table[,,1])
letopis.table.2dim <- cbind(year = as.numeric(rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1])), letopis.table[,,1])
for (i in 2:dim(letopis.table)[3]) {
letopis.table.2dim <- rbind(letopis.table.2dim, cbind(year = as.numeric(rep(dimnames(letopis.table)$year[i], dim(letopis.table)[1])), letopis.table[,,i]))}
str(letopis.table.2dim)
head(letopis.table.2dim)
letopis.table.2dim
read.csv2(letopis.table.2dim, "Estuary_size_str_all.csv")
write.csv2(letopis.table.2dim, "Estuary_size_str_all.csv")
sum(letopis.table.2dim[,2:21]
)
rowsum(letopis.table.2dim[,2:21])
letopis.table.2dim$Total <- rowSum(letopis.table.2dim[,2:21])
rowSums(letopis.table.2dim[,2:21])
letopis.table.2dim$Total <- rowSums(letopis.table.2dim[,2:21])
letopis.table.2dim$Total
letopis.table.2dim
letopis.table.2dim <- cbind(year = as.numeric(rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1])), letopis.table[,,1])
for (i in 2:dim(letopis.table)[3]) {
letopis.table.2dim <- rbind(letopis.table.2dim, cbind(year = as.numeric(rep(dimnames(letopis.table)$year[i], dim(letopis.table)[1])), letopis.table[,,i]))}
as.data.frame(letopis.table.2dim)
is.matrix(letopis.table.2dim)
letopis.table.2dim[,21]
letopis.table.2dim[,22]
letopis.table.2dim[,22] <- rowSums(letopis.table.2dim[,2:21])
cbind(letopis.table.2dim, rowSums(letopis.table.2dim[,2:21]))
letopis.table.2dim[,22][0]
letopis.table.2dim[,21][0]
letopis.table.2dim[22,]
letopis.table.2dim[,20]
dim(letopis.table.2dim)
letopis.table.2dim <- cbind(letopis.table.2dim, rowSums(letopis.table.2dim[,2:21]))
dim(letopis.table.2dim)
letopis.table.2dim <- cbind(year = as.numeric(rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1])), letopis.table[,,1])
for (i in 2:dim(letopis.table)[3]) {
letopis.table.2dim <- rbind(letopis.table.2dim, cbind(year = as.numeric(rep(dimnames(letopis.table)$year[i], dim(letopis.table)[1])), letopis.table[,,i]))}
letopis.table.2dim <- cbind(letopis.table.2dim, rowSums(letopis.table.2dim[,2:21]))
dim(letopis.table.2dim)
letopis.table.2dim[,22][0]
letopis.table.2dim[,22][letopis.table.2dim[,22] == 0]
letopis.table.2dim[,22][letopis.table.2dim[,22] == 0] <- NA
letopis.table.2dim[,22]
na.omit(letopis.table.2dim)
letopis.table.2dim <- na.omit(letopis.table.2dim)
write.csv2(letopis.table.2dim, "Estuary_size_str_all.csv")
detach(ishodnik)
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
biomass.measure<-read.table(file="biomass.csv", sep=";", dec=",", head=T)
attach(ishodnik)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(letopis.table<-table( sample, Length.int, year))
letopis.table.2dim <- cbind(year = as.numeric(rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1])), letopis.table[,,1])
for (i in 2:dim(letopis.table)[3]) {
letopis.table.2dim <- rbind(letopis.table.2dim, cbind(year = as.numeric(rep(dimnames(letopis.table)$year[i], dim(letopis.table)[1])), letopis.table[,,i]))}
letopis.table.2dim <- cbind(letopis.table.2dim, rowSums(letopis.table.2dim[,2:21]))
letopis.table.2dim[,22][letopis.table.2dim[,22] == 0] <- NA
letopis.table.2dim <- na.omit(letopis.table.2dim)
rownames(letopis.table.2dim)
letopis.table.2dim <- cbind(rownames(letopis.table.2dim), letopis.table.2dim)
letopis.table.2dim <- cbind(year = as.numeric(rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1])), letopis.table[,,1])
for (i in 2:dim(letopis.table)[3]) {
letopis.table.2dim <- rbind(letopis.table.2dim, cbind(year = as.numeric(rep(dimnames(letopis.table)$year[i], dim(letopis.table)[1])), letopis.table[,,i]))}
letopis.table.2dim <- cbind(letopis.table.2dim, rowSums(letopis.table.2dim[,2:21]))
letopis.table.2dim <- cbind(rownames(letopis.table.2dim), letopis.table.2dim)
letopis.table.2dim[,1]
letopis.table.2dim
letopis.table.2dim <- cbind(year = as.numeric(rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1])), letopis.table[,,1])
for (i in 2:dim(letopis.table)[3]) {
letopis.table.2dim <- rbind(letopis.table.2dim, cbind(year = as.numeric(rep(dimnames(letopis.table)$year[i], dim(letopis.table)[1])), letopis.table[,,i]))}
letopis.table.2dim <- cbind(letopis.table.2dim, rowSums(letopis.table.2dim[,2:21]))
as.data.frame(letopis.table.2dim)
as.data.frame(cbind(rownames(letopis.table.2dim), letopis.table.2dim))
letopis.table.2dim <- cbind(year = as.numeric(rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1])), letopis.table[,,1])
for (i in 2:dim(letopis.table)[3]) {
letopis.table.2dim <- rbind(letopis.table.2dim, cbind(year = as.numeric(rep(dimnames(letopis.table)$year[i], dim(letopis.table)[1])), letopis.table[,,i]))}
letopis.table.2dim <- cbind(letopis.table.2dim, rowSums(letopis.table.2dim[,2:21]))
rownames(letopis.table.2dim)
letopis.table.2dim
for (i in 1:dim(letopis.table)[3])
{ (xxx <- rownames(letopis.table.2dim)[letopis.table.2dim[1] == dimnames(letopis.table)$year[i] ]%in%
samples.names$sample[samples.names$year == dimnames(letopis.table)$year[i] ])
antixxx<-as.logical(1-xxx)
letopis.table.2dim[,22][letopis.table.2dim[1]==dimnames(letopis.table)$year[i]][antixxx]<-NA
}
letopis.table.2dim
letopis.table.2dim <- na.omit(letopis.table.2dim)
letopis.table.2dim
write.csv2(letopis.table.2dim, "Estuary_size_str_all.csv")
letopis.table.2dim <- cbind(year = as.numeric(rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1])), letopis.table[,,1])
for (i in 2:dim(letopis.table)[3]) {
letopis.table.2dim <- rbind(letopis.table.2dim, cbind(year = as.numeric(rep(dimnames(letopis.table)$year[i], dim(letopis.table)[1])), letopis.table[,,i]))}
letopis.table.2dim <- cbind(letopis.table.2dim, rowSums(letopis.table.2dim[,2:21]))
letopis.table.2dim[1]
letopis.table.2dim[,1]
for (i in 1:dim(letopis.table)[3])
{ (xxx <- rownames(letopis.table.2dim)[letopis.table.2dim[,1] == dimnames(letopis.table)$year[i] ]%in%
samples.names$sample[samples.names$year == dimnames(letopis.table)$year[i] ])
antixxx<-as.logical(1-xxx)
letopis.table.2dim[,22][letopis.table.2dim[1]==dimnames(letopis.table)$year[i]][antixxx]<-NA
}
#letopis.table.2dim[,22][letopis.table.2dim[,22] == 0] <- NA
letopis.table.2dim <- na.omit(letopis.table.2dim)
write.csv2(letopis.table.2dim, "Estuary_size_str_all.csv")
dimnames(letopis.table)$year
letopis.table.2dim[,1]
letopis.table.2dim <- cbind(year = as.numeric(rep(dimnames(letopis.table)$year[1], dim(letopis.table)[1])), letopis.table[,,1])
for (i in 2:dim(letopis.table)[3]) {
letopis.table.2dim <- rbind(letopis.table.2dim, cbind(year = as.numeric(rep(dimnames(letopis.table)$year[i], dim(letopis.table)[1])), letopis.table[,,i]))}
letopis.table.2dim <- cbind(letopis.table.2dim, rowSums(letopis.table.2dim[,2:21]))
#убираем те пробы которых на самом деле нету
for (i in 1:dim(letopis.table)[3])
{ (xxx <- rownames(letopis.table.2dim)[letopis.table.2dim[,1] == as.numeric(dimnames(letopis.table)$year)[i] ]%in%
samples.names$sample[samples.names$year == as.numeric(dimnames(letopis.table)$year)[i] ])
antixxx<-as.logical(1-xxx)
letopis.table.2dim[,22][letopis.table.2dim[,1] == as.numeric(dimnames(letopis.table)$year)[i]][antixxx]<-NA
}
#letopis.table.2dim[,22][letopis.table.2dim[,22] == 0] <- NA
letopis.table.2dim <- na.omit(letopis.table.2dim)
write.csv2(letopis.table.2dim, "Estuary_size_str_all.csv")
(
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Estuatiy_Luvenga")
)
detach(ishodnik)
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
biomass.measure<-read.table(file="biomass.csv", sep=";", dec=",", head=T)
attach(ishodnik)
hist(Length.mm[year == 2008])
plot(density(Length.mm[year == 2008]))
plot(density(na.omit(Length.mm[year == 2008])))
rmode <- function(x) {
x <- sort(x)
u <- unique(x)
y <- lapply(u, function(y) length(x[x==y]))
u[which( unlist(y) == max(unlist(y)) )]
}
rmode(Length.mm[year == 2008])
Mode <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
Mode(Length.mm[year == 2008])
Mode <- function(x, na.rm = FALSE) {
if(na.rm){
x = x[!is.na(x)]
}
ux <- unique(x)
return(ux[which.max(tabulate(match(x, ux)))])
}
Mode(Length.mm[year == 2008])
modeav <- function (x, method = "mode", na.rm = FALSE)
{
x <- unlist(x)
if (na.rm)
x <- x[!is.na(x)]
u <- unique(x)
n <- length(u)
#get frequencies of each of the unique values in the vector
frequencies <- rep(0, n)
for (i in seq_len(n)) {
if (is.na(u[i])) {
frequencies[i] <- sum(is.na(x))
}
else {
frequencies[i] <- sum(x == u[i], na.rm = TRUE)
}
}
#mode if a unimodal vector, else NA
if (method == "mode" | is.na(method) | method == "")
{return(ifelse(length(frequencies[frequencies==max(frequencies)])>1,NA,u[which.max(frequencies)]))}
#number of modes
if(method == "nmode" | method == "nmodes")
{return(length(frequencies[frequencies==max(frequencies)]))}
#list of all modes
if (method == "modes" | method == "modevalues")
{return(u[which(frequencies==max(frequencies), arr.ind = FALSE, useNames = FALSE)])}
#error trap the method
warning("Warning: method not recognised.  Valid methods are 'mode' [default], 'nmodes' and 'modes'")
return()
}
modeav(Length.mm[year == 2008])
mode <- function(x) {
unique_val <- unique(x)
counts <- vector()
for (i in 1:length(unique_val)) {
counts[i] <- length(which(x==unique_val[i]))
}
position <- c(which(counts==max(counts)))
if (mean(counts)==max(counts))
mode_x <- 'Mode does not exist'
else
mode_x <- unique_val[position]
return(mode_x)
}
mode(Length.mm[year == 2008])
plot(density(na.omit(Length.mm[year == 1998])))
rmode(Length.mm[year == 1998])
Mode(Length.mm[year == 1998])
find_modes<- function(x) {
modes <- NULL
for ( i in 2:(length(x)-1) ){
if ( (x[i] > x[i-1]) & (x[i] > x[i+1]) ) {
modes <- c(modes,i)
}
}
if ( length(modes) == 0 ) {
modes = 'This is a monotonic distribution'
}
return(modes)
}
find_modes((Length.mm[year == 2008]))
find_modes(density(Length.mm[year == 2008])$y)
find_modes((density(na.omit(Length.mm[year == 2008]))$y)
find_modes((density(na.omit(Length.mm[year == 2008]))$y))
find_modes((density(na.omit(Length.mm[year == 2008]))$y))
find_modes((density(na.omit(Length.mm[year == 2008]))$x))
density(na.omit(Length.mm[year == 2008]))$x
density(na.omit(Length.mm[year == 2008]))
find_modes((density(na.omit(Length.mm[year == 2008]))$x))
find_modes((density(na.omit(Length.mm[year == 2008]))$x[mymodes_indices]))
mymodes_indices <- find_modes((density(na.omit(Length.mm[year == 2008]))$y))
density(na.omit(Length.mm[year == 2008]))$x[mymodes_indices]
plot(density(na.omit(Length.mm[year == 2008])))
hist(Length.mm[year == 2008])
