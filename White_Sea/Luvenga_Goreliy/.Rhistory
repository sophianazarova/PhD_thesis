{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
n.samples<-tapply(samples.names$sample,samples.names$year, length )
#subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1992")
#и среднее??
# tapply выдает как резудьтат матрицу
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
(n.samples<-tapply(samples.names$sample,samples.names$year, length ))
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
##>2mm mean size structure
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
apply(mean.sizestr.sqmeter2, 2, max)
max(apply(mean.sizestr.sqmeter2, 2, max))
length.class<-seq(1,20,1)
length.class2<-seq(2,20,1)
##динамика обилия
(N.sqmeter<-(t(tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample), sum))))
(N.mean.sqmeter<-colMeans(N.sqmeter, na.rm=T))
(N.sd.sqmeter<-apply(N.sqmeter, 2, sd, na.rm=T))
(N.sem.sqmeter<-N.sd.sqmeter/sqrt(n.samples))
#точность учета
(D.n<-N.sem.sqmeter/N.mean.sqmeter*100)
# запишем численность всех крупнее 1 мм в файл
write.table(data.frame(N.mean.sqmeter, N.sem.sqmeter), file="estuary_N.csv", sep=";", dec=",")
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Lomnishniy/")
detach(ishodnik)
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
n.samples<-tapply(samples.names$sample,samples.names$year, length )
#subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1992")
#и среднее??
# tapply выдает как резудьтат матрицу
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
length.class<-seq(1,20,1)
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
length.class2<-seq(2,20,1)
(N.sqmeter<-(t(tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample), sum))))
(N.mean.sqmeter<-colMeans(N.sqmeter, na.rm=T))
N.sd.sqmeter<-apply(N.sqmeter, 2, sd, na.rm=T)
N.sem.sqmeter<-N.sd.sqmeter/sqrt(n.samples)
(D.n<-N.sem.sqmeter/N.mean.sqmeter*100)
write.table(data.frame(N.mean.sqmeter, N.sem.sqmeter), file="lomnishniy_N.csv", sep=";", dec=",")
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Ryashkov_YuG//")
detach(ishodnik)
detach(ishodnik)
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
length.class<-seq(1,20,1)
##>2mm mean size structure
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
length.class2<-seq(2,20,1)
(N.sqmeter<-(t(tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample), sum))))
(N.mean.sqmeter<-colMeans(N.sqmeter, na.rm=T))
N.sd.sqmeter<-apply(N.sqmeter, 2, sd, na.rm=T)
N.sem.sqmeter<-N.sd.sqmeter/sqrt(n.samples)
(D.n<-N.sem.sqmeter/N.mean.sqmeter*100)
write.table(data.frame(N.mean.sqmeter, N.sem.sqmeter), file="YuG_N.csv", sep=";", dec=",")
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Ryashkov_ZRS/")
detach(ishodnik)
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
#subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1992")
#и среднее??
# tapply выдает как резудьтат матрицу
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
length.class<-seq(1,20,1)
##>2mm mean size structure
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
length.class2<-seq(2,20,1)
(N.sqmeter<-(t(tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample), sum))))
(N.mean.sqmeter<-colMeans(N.sqmeter, na.rm=T))
N.sd.sqmeter<-apply(N.sqmeter, 2, sd, na.rm=T)
N.sem.sqmeter<-N.sd.sqmeter/sqrt(n.samples)
(D.n<-N.sem.sqmeter/N.mean.sqmeter*100)
write.table(data.frame(N.mean.sqmeter, N.sem.sqmeter), file="ZRS_N.csv", sep=";", dec=",")
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Luvenga_Goreliy/")
detach(ishodnik)
## размерная структура средние по годам по горизонтам
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
for (i in 1:length(levels(size.str.df$year))){
for(j in 1:length(levels(size.str.df$tidal_level))){
(xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] &
size.str.df$tidal_level==levels(size.str.df$tidal_level)[j]]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i] &
samples.names$tidal_level==levels(size.str.df$tidal_level)[j]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i] &
size.str.df$tidal_level==levels(size.str.df$tidal_level)[j]][antixxx]<-NA
}}
subset(size.str.df, size.str.df$year=="1995" & size.str.df$sample=="mg4")
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
write.table(assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i])), file=paste(levels(size.str.sqmeter$tidal_level)[i]), sep=",")
}
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal_level), length ))
(n.samples.df<-as.data.frame(n.samples))
#верхний горизонт
(mean.sqmeter.high<-t(tapply(high$Freq,INDEX=list(high$year,  high$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.high.df<-as.data.frame(mean.sqmeter.high)
(sd.sqmeter.high<-tapply(high$Freq,INDEX=list(high$year,  high$Length.int),FUN=sd, na.rm=T))
(sem.sqmeter.high <-t(sd.sqmeter.high/sqrt(n.samples.df$high)))
#TODO надо те строки где по одной пробе сделать вместо NA - ноль!!
sem.sqmeter.high.df<-as.data.frame(sem.sqmeter.high)
sem.sqmeter.high[is.na(sem.sqmeter.high)]<-0
sem.sqmeter.high
#средний горизонт
mean.sqmeter.middle<-t(tapply(middle$Freq,INDEX=list(middle$year,  middle$Length.int),FUN=mean, na.rm=T))
mean.sqmeter.middle.df<-as.data.frame(mean.sqmeter.middle)
sd.sqmeter.middle<-tapply(middle$Freq,INDEX=list(middle$year,  middle$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.middle <-t(sd.sqmeter.middle/sqrt(n.samples.df$middle))
sem.sqmeter.middle.df<-as.data.frame(sem.sqmeter.middle)
sem.sqmeter.middle[is.na(sem.sqmeter.middle)]<-0
#граница среднего и нижнего горизонта, в фукусах
mean.sqmeter.midlow<-t(tapply(midlow$Freq,INDEX=list(midlow$year,  midlow$Length.int),FUN=mean, na.rm=T))
mean.sqmeter.midlow.df<-as.data.frame(mean.sqmeter.midlow)
sd.sqmeter.midlow<-tapply(midlow$Freq,INDEX=list(midlow$year,  midlow$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.midlow <-t(sd.sqmeter.midlow/sqrt(n.samples.df$midlow))
sem.sqmeter.midlow.df<-as.data.frame(sem.sqmeter.midlow)
sem.sqmeter.midlow[is.na(sem.sqmeter.midlow)]<-0
#нижний горизонт, у нуля глубин
(mean.sqmeter.low<-t(tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.low.df<-as.data.frame(mean.sqmeter.low)
sd.sqmeter.low<-tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low <-t(sd.sqmeter.low/sqrt(n.samples.df$low))
sem.sqmeter.low.df<-as.data.frame(sem.sqmeter.low)
sem.sqmeter.low[is.na(sem.sqmeter.low)]<-0
length.class<-seq(1,20,1)
##size structure >1mm
#верхний горизонт
(mean.sqmeter2.high<-mean.sqmeter.middle[2:20,])
mean.sqmeter2.high.df<-as.data.frame(mean.sqmeter2.high)
(sd.sqmeter2.high<-sd.sqmeter.middle[,2:20])
(sem.sqmeter2.high <-t(sd.sqmeter2.high/sqrt(n.samples.df$high)))
#TODO надо те строки где по одной пробе сделать вместо ошибки NA!!
sem.sqmeter2.high.df<-as.data.frame(sem.sqmeter2.high)
sem.sqmeter2.high[is.na(sem.sqmeter2.high)]<-0
#средний горизонт
mean.sqmeter2.middle<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.middle.df<-as.data.frame(mean.sqmeter2.middle)
sd.sqmeter2.middle<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.middle <-t(sd.sqmeter2.middle/sqrt(n.samples.df$middle))
sem.sqmeter2.middle.df<-as.data.frame(sem.sqmeter2.middle)
sem.sqmeter2.middle[is.na(sem.sqmeter2.middle)]<-0
#граница среднего и нижнего горизонта, в фукусах
mean.sqmeter2.midlow<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.midlow.df<-as.data.frame(mean.sqmeter2.midlow)
sd.sqmeter2.midlow<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.midlow <-t(sd.sqmeter2.midlow/sqrt(n.samples.df$midlow))
sem.sqmeter2.midlow.df<-as.data.frame(sem.sqmeter2.midlow)
sem.sqmeter2.midlow[is.na(sem.sqmeter2.midlow)]<-0
#нижний горизонт, у нуля глубин
mean.sqmeter2.low<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.low.df<-as.data.frame(mean.sqmeter2.low)
sd.sqmeter2.low<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.low <-t(sd.sqmeter2.low/sqrt(n.samples.df$low))
sem.sqmeter2.low.df<-as.data.frame(sem.sqmeter2.low)
sem.sqmeter2.low[is.na(sem.sqmeter2.low)]<-0
length.class2<-seq(2,20,1)
(N.sqmeter<-tapply(size.str.sqmeter$Freq, list(size.str.sqmeter$year, size.str.sqmeter$sample, size.str.df$tidal_level), sum))
(N.mean.sqmeter<-apply(N.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=mean))
(N.sd.sqmeter<-apply(N.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=sd))
(N.sem.sqmeter<-N.sd.sqmeter/sqrt(n.samples))
N.sem.sqmeter[N.sem.sqmeter==N.sd.sqmeter]<-NA
(N2.sqmeter<-tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"],
size.str.df$tidal_level[size.str.sqmeter$Length.int!="(0,1]"]), sum))
(N2.mean.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=mean))
(N2.sd.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=sd))
(N2.sem.sqmeter<-N2.sd.sqmeter/sqrt(n.samples))
N2.sem.sqmeter[N2.sem.sqmeter==N2.sd.sqmeter]<-NA
##COUNT!
(D.n2<-N.sem.sqmeter/N.mean.sqmeter*100)
detach(ishodnik)
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
(oneyear.int<-cut(Length.mm, breaks=c(0.1,1.2,1.8,8.0,max(Length.mm, na.rm=T))))
(oneyear.table<-table(oneyear.int,year, tidal_level, sample))
oneyear.df<-as.data.frame(oneyear.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(oneyear.df$year))){
for(j in 1:length(levels(oneyear.df$tidal_level))){
(xxx<-oneyear.df$sample[oneyear.df$year==levels(oneyear.df$year)[i] &
oneyear.df$tidal_level==levels(oneyear.df$tidal_level)[j]]%in%
samples.names$sample[samples.names$year==levels(oneyear.df$year)[i] &
samples.names$tidal_level==levels(oneyear.df$tidal_level)[j]])
antixxx<-as.logical(1-xxx)
oneyear.df$Freq[oneyear.df$year==levels(oneyear.df$year)[i] &
oneyear.df$tidal_level==levels(oneyear.df$tidal_level)[j]][antixxx]<-NA
}}
#теперь на квадратный метр
oneyear.sqmeter<-oneyear.df
for (i in 1:length(levels(oneyear.sqmeter$year)))
{
oneyear.sqmeter$Freq[oneyear.sqmeter$year==levels(oneyear.sqmeter$year)[i]]<-
oneyear.sqmeter$Freq[oneyear.sqmeter$year==levels(oneyear.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(oneyear.sqmeter$year)[i]]
}
for (i in 1: length(levels(oneyear.sqmeter$tidal_level)))
{
write.table(assign(paste(levels(oneyear.sqmeter$tidal_level)[i]),
subset(oneyear.sqmeter, oneyear.sqmeter$tidal_level==levels(oneyear.sqmeter$tidal_level)[i])), file=paste(levels(oneyear.sqmeter$tidal_level)[i]), sep=",")
}
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal_level), length ))
(n.samples.df<-as.data.frame(n.samples))
#верхний горизонт
(mean.sqmeter.high<-t(tapply(high$Freq,INDEX=list(high$year,  high$oneyear.int),FUN=mean, na.rm=T)))
mean.sqmeter.high.df<-as.data.frame(mean.sqmeter.high)
(sd.sqmeter.high<-tapply(high$Freq,INDEX=list(high$year,  high$oneyear.int),FUN=sd, na.rm=T))
(sem.sqmeter.high <-t(sd.sqmeter.high/sqrt(n.samples.df$high)))
#TODO надо те строки где по одной пробе сделать вместо ошибки NA!!
sem.sqmeter.high.df<-as.data.frame(sem.sqmeter.high)
sem.sqmeter.high[is.na(sem.sqmeter.high)]<-0
#пишем численности в файл
write.table(mean.sqmeter.high, file="Nmean_all_high.csv",sep=";", dec=",")
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Luvenga_Goreliy/")
detach(ishodnik)
## размерная структура средние по годам по горизонтам
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
#for (i in 1:length(levels(size.str.df$year))){
#    (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i]]%in%
#       samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
#    antixxx<-as.logical(1-xxx)
#    size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i] ][antixxx]<-NA
#  }
for (i in 1:length(levels(size.str.df$year))){
for(j in 1:length(levels(size.str.df$tidal_level))){
(xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] &
size.str.df$tidal_level==levels(size.str.df$tidal_level)[j]]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i] &
samples.names$tidal_level==levels(size.str.df$tidal_level)[j]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i] &
size.str.df$tidal_level==levels(size.str.df$tidal_level)[j]][antixxx]<-NA
}}
subset(size.str.df, size.str.df$year=="1995" & size.str.df$sample=="mg4")
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
write.table(assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i])), file=paste(levels(size.str.sqmeter$tidal_level)[i]), sep=",")
}
#summary((subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1994"))$Freq)
#и среднее??
# tapply выдает как резудьтат матрицу
# надо как-то дружить array's в момент рассчета ошибок... и как потом рисовать картики? или проще разделить на отдельные горизонтв и поработать с ними??
#attach(paste(levels(size.str.sqmeter$tidal_level)[1]))
#
#assign(paste("mean.sqmeter", levels(size.str.sqmeter$tidal_level)[1], sep="."),
#       tapply(paste(levels(size.str.sqmeter$tidal_level)[1])$Freq,
#              INDEX=list(levels(size.str.sqmeter$tidal_level)[1]$year, levels(size.str.sqmeter$tidal_level)[1]$Length.int)),
#              FUN=mean, na.rm=T))
#КАК АВТОМАТИЗИРОВАТЬ ТЕМУ ПРО НЕСКОЛЬКО УЧАСТКОВ Я НЕ ПРИДУМАЛА :( ПИШУ РУЧКАМИ 4 РАЗА...
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal_level), length ))
(n.samples.df<-as.data.frame(n.samples))
#верхний горизонт
(mean.sqmeter.high<-t(tapply(high$Freq,INDEX=list(high$year,  high$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.high.df<-as.data.frame(mean.sqmeter.high)
(sd.sqmeter.high<-tapply(high$Freq,INDEX=list(high$year,  high$Length.int),FUN=sd, na.rm=T))
(sem.sqmeter.high <-t(sd.sqmeter.high/sqrt(n.samples.df$high)))
#TODO надо те строки где по одной пробе сделать вместо NA - ноль!!
sem.sqmeter.high.df<-as.data.frame(sem.sqmeter.high)
sem.sqmeter.high[is.na(sem.sqmeter.high)]<-0
sem.sqmeter.high
#средний горизонт
mean.sqmeter.middle<-t(tapply(middle$Freq,INDEX=list(middle$year,  middle$Length.int),FUN=mean, na.rm=T))
mean.sqmeter.middle.df<-as.data.frame(mean.sqmeter.middle)
sd.sqmeter.middle<-tapply(middle$Freq,INDEX=list(middle$year,  middle$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.middle <-t(sd.sqmeter.middle/sqrt(n.samples.df$middle))
sem.sqmeter.middle.df<-as.data.frame(sem.sqmeter.middle)
sem.sqmeter.middle[is.na(sem.sqmeter.middle)]<-0
#граница среднего и нижнего горизонта, в фукусах
mean.sqmeter.midlow<-t(tapply(midlow$Freq,INDEX=list(midlow$year,  midlow$Length.int),FUN=mean, na.rm=T))
mean.sqmeter.midlow.df<-as.data.frame(mean.sqmeter.midlow)
sd.sqmeter.midlow<-tapply(midlow$Freq,INDEX=list(midlow$year,  midlow$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.midlow <-t(sd.sqmeter.midlow/sqrt(n.samples.df$midlow))
sem.sqmeter.midlow.df<-as.data.frame(sem.sqmeter.midlow)
sem.sqmeter.midlow[is.na(sem.sqmeter.midlow)]<-0
#нижний горизонт, у нуля глубин
(mean.sqmeter.low<-t(tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.low.df<-as.data.frame(mean.sqmeter.low)
sd.sqmeter.low<-tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low <-t(sd.sqmeter.low/sqrt(n.samples.df$low))
sem.sqmeter.low.df<-as.data.frame(sem.sqmeter.low)
sem.sqmeter.low[is.na(sem.sqmeter.low)]<-0
length.class<-seq(1,20,1)
##size structure >1mm
#верхний горизонт
(mean.sqmeter2.high<-mean.sqmeter.middle[2:20,])
mean.sqmeter2.high.df<-as.data.frame(mean.sqmeter2.high)
(sd.sqmeter2.high<-sd.sqmeter.middle[,2:20])
(sem.sqmeter2.high <-t(sd.sqmeter2.high/sqrt(n.samples.df$high)))
#TODO надо те строки где по одной пробе сделать вместо ошибки NA!!
sem.sqmeter2.high.df<-as.data.frame(sem.sqmeter2.high)
sem.sqmeter2.high[is.na(sem.sqmeter2.high)]<-0
#средний горизонт
mean.sqmeter2.middle<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.middle.df<-as.data.frame(mean.sqmeter2.middle)
sd.sqmeter2.middle<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.middle <-t(sd.sqmeter2.middle/sqrt(n.samples.df$middle))
sem.sqmeter2.middle.df<-as.data.frame(sem.sqmeter2.middle)
sem.sqmeter2.middle[is.na(sem.sqmeter2.middle)]<-0
#граница среднего и нижнего горизонта, в фукусах
mean.sqmeter2.midlow<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.midlow.df<-as.data.frame(mean.sqmeter2.midlow)
sd.sqmeter2.midlow<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.midlow <-t(sd.sqmeter2.midlow/sqrt(n.samples.df$midlow))
sem.sqmeter2.midlow.df<-as.data.frame(sem.sqmeter2.midlow)
sem.sqmeter2.midlow[is.na(sem.sqmeter2.midlow)]<-0
#нижний горизонт, у нуля глубин
mean.sqmeter2.low<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.low.df<-as.data.frame(mean.sqmeter2.low)
sd.sqmeter2.low<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.low <-t(sd.sqmeter2.low/sqrt(n.samples.df$low))
sem.sqmeter2.low.df<-as.data.frame(sem.sqmeter2.low)
sem.sqmeter2.low[is.na(sem.sqmeter2.low)]<-0
length.class2<-seq(2,20,1)
(N2.sqmeter<-tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"],
size.str.df$tidal_level[size.str.sqmeter$Length.int!="(0,1]"]), sum))
(N2.mean.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=mean))
(N2.sd.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=sd))
(N2.sem.sqmeter<-N2.sd.sqmeter/sqrt(n.samples))
N2.sem.sqmeter[N2.sem.sqmeter==N2.sd.sqmeter]<-NA
(D.n2<-N.sem.sqmeter/N.mean.sqmeter*100)
write.table(data.frame(N2.mean.sqmeter, N2.sem.sqmeter), file="goreliy_N2.csv", sep=";", dec=",")
write.table(as.data.frame(as.table(N2.sqmeter)), file="goreliy_N2_in samples_sqmeter.csv", sep=";", dec=",")
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Luvenga_Goreliy/")
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
for (i in 1:length(levels(size.str.df$year))){
for(j in 1:length(levels(size.str.df$tidal_level))){
(xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] &
size.str.df$tidal_level==levels(size.str.df$tidal_level)[j]]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i] &
samples.names$tidal_level==levels(size.str.df$tidal_level)[j]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i] &
size.str.df$tidal_level==levels(size.str.df$tidal_level)[j]][antixxx]<-NA
}}
(Length.max<-tapply(Length.mm, list(year, tidal_level), max, na.rm=T))
tapply(Length.mm, tidal_level, max, na.rm=T))
tapply(Length.mm, tidal_level, max, na.rm=T)
mean.sqmeter.high
str(mean.sqmeter.high)
all_tidal<-array(c(mean.sqmeter.high, mean.sqmeter.middle, mean.sqmeter.midlow, mean.sqmeter.low), dim = c(20,21,4),dimnames = c("size_class", "year", "tidal_level"))
str(all_tidal)
all_tidal
dimnames(mean.sqmeter.high)
all_tidal<-array(c(mean.sqmeter.high, mean.sqmeter.middle, mean.sqmeter.midlow, mean.sqmeter.low), dim = c(20,21,4),dimnames = c("size_class", "year", "tidal_level"), dimnames = list(dimnames(mean.sqmeter.high),c("high", "middle", "midlow", "low")))
dimnames(mean.sqmeter.high)
all_tidal<-array(c(mean.sqmeter.high, mean.sqmeter.middle, mean.sqmeter.midlow, mean.sqmeter.low), dim = c(20,21,4),dimnames = c("size_class", "year", "tidal_level"), dimnames = list(dimnames(mean.sqmeter.high)[[1]], dimnames(mean.sqmeter.high)[[2]] ,c("high", "middle", "midlow", "low")))
list(dimnames(mean.sqmeter.high)[[1]], dimnames(mean.sqmeter.high)[[2]] ,c("high", "middle", "midlow", "low"))
all_tidal<-array(c(mean.sqmeter.high, mean.sqmeter.middle, mean.sqmeter.midlow, mean.sqmeter.low), dim = c(20,21,4), dimnames = list(size_class=dimnames(mean.sqmeter.high)[[1]], year=dimnames(mean.sqmeter.high)[[2]], tidal_level=c("high", "middle", "midlow", "low")))
all_tidal
mean.sqmeter.all<-array(c(mean.sqmeter.high, mean.sqmeter.middle, mean.sqmeter.midlow, mean.sqmeter.low), dim = c(20,21,4), dimnames = list(size_class=dimnames(mean.sqmeter.high)[[1]], year=dimnames(mean.sqmeter.high)[[2]], tidal_level=c("high", "middle", "midlow", "low")))
sem.sqmeter.all<-array(c(sem.sqmeter.high, sem.sqmeter.middle, sem.sqmeter.midlow, sem.sqmeter.low), dim = c(20,21,4), dimnames = list(size_class=dimnames(sem.sqmeter.high)[[1]], year=dimnames(sem.sqmeter.high)[[2]], tidal_level=c("high", "middle", "midlow", "low")))
barplot(mean.sqmeter.all[,1,])
barplot(mean.sqmeter.all[,1,],beside = F)
barplot(mean.sqmeter.all[,1,],beside = T)
mean.sqmeter.high.df
mean.sqmeter.high.df<-as.data.frame(as.table(mean.sqmeter.high))
mean.sqmeter.high.df
library(lattice)
barchart(mean.sqmeter.high.df$Freq ~ mean.sqmeter.high.df$Var1|mean.sqmeter.high.df$Var2)
barchart(mean.sqmeter.high.df$Freq ~ mean.sqmeter.high.df$Var1|mean.sqmeter.high.df$Var2, equal.width=F)
