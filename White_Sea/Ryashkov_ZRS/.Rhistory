sem.sqmeter2.middle[sem.sqmeter2.middle==mean.sqmeter2.middle]<-0
#граница среднего и нижнего горизонта, в фукусах
mean.sqmeter2.midlow<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.midlow.df<-as.data.frame(mean.sqmeter2.midlow)
sd.sqmeter2.midlow<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.midlow <-t(sd.sqmeter2.midlow/sqrt(n.samples.df$midlow))
sem.sqmeter2.midlow.df<-as.data.frame(sem.sqmeter2.midlow)
sem.sqmeter2.midlow[sem.sqmeter2.midlow==mean.sqmeter2.midlow]<-0
#нижний горизонт, у нуля глубин
mean.sqmeter2.low<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.low.df<-as.data.frame(mean.sqmeter2.low)
sd.sqmeter2.low<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.low <-t(sd.sqmeter2.low/sqrt(n.samples.df$low))
sem.sqmeter2.low.df<-as.data.frame(sem.sqmeter2.low)
sem.sqmeter2.low[sem.sqmeter2.low==mean.sqmeter2.low]<-0
length.class<-seq(2,20,1)
#from R-book
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
length.class2<-seq(2,20,1)
#>1mm
#верхний горизонт
for (j in 1:length(colnames(mean.sqmeter2.high)))
{
pdf(file=paste("high2", colnames(mean.sqmeter2.high)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter2.high[,j], nn=length.class2,  z=sem.sqmeter2.high[,j])
title(main=colnames(mean.sqmeter2.high)[j], xlab="", ylab="")
dev.off()
}
#средний горизонт
for (j in 1:length(colnames(mean.sqmeter2.middle)))
{
pdf(file=paste("middle2", colnames(mean.sqmeter2.middle)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter2.middle[,j], nn=length.class2,  z=sem.sqmeter2.middle[,j])
title(main=colnames(mean.sqmeter2.middle)[j], xlab="", ylab="")
dev.off()
}
#граница среднего и нижнего горизонтов, в фукоидах
for (j in 1:length(colnames(mean.sqmeter2.midlow)))
{
pdf(file=paste("midlow2", colnames(mean.sqmeter2.midlow)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter2.midlow[,j], nn=length.class2,  z=sem.sqmeter2.midlow[,j])
title(main=colnames(mean.sqmeter2.midlow)[j], xlab="", ylab="")
dev.off()
}
#нижний горизонт, у нуля глубин
for (j in 1:length(colnames(mean.sqmeter2.low)))
{
pdf(file=paste("low2", colnames(mean.sqmeter2.low)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter2.low[,j], nn=length.class2,  z=sem.sqmeter2.low[,j])
title(main=colnames(mean.sqmeter2.low)[j], xlab="", ylab="")
dev.off()
}
setwd("~/note_backup_2013-04-13/PhD_thesis/White_Sea/Luvenga_II_razrez/")
# размерная структура средние по годам по горизонтам
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal.level), length ))
(n.samples.df<-as.data.frame(n.samples))
mean.sqmeter.high_beatch
#Верхний пляж
(mean.sqmeter.high_beatch<-t(tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.high_beatch.df<-as.data.frame(mean.sqmeter.high_beatch)
(sd.sqmeter.high_beatch<-tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T))
(sem.sqmeter.high_beatch <-t(sd.sqmeter.high_beatch/sqrt(n.samples.df$high_beatch)))
sem.sqmeter.high_beatch.df<-as.data.frame(sem.sqmeter.high_beatch)
#пояс фукоидов
mean.sqmeter.fucus_zone<-t(tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.fucus_zone.df<-as.data.frame(mean.sqmeter.fucus_zone)
sd.sqmeter.fucus_zone<-tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.fucus_zone <-t(sd.sqmeter.fucus_zone/sqrt(n.samples.df$fucus_zone))
sem.sqmeter.fucus_zone.df<-as.data.frame(sem.sqmeter.fucus_zone)
#пояс зостеры
mean.sqmeter.zostera_zone<-t(tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.zostera_zone.df<-as.data.frame(mean.sqmeter.zostera_zone)
sd.sqmeter.zostera_zone<-tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.zostera_zone <-t(sd.sqmeter.zostera_zone/sqrt(n.samples.df$zostera_zone))
sem.sqmeter.zostera_zone.df<-as.data.frame(sem.sqmeter.zostera_zone)
#нижний пляж
(mean.sqmeter.low_beatch<-t(tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.low_beatch.df<-as.data.frame(mean.sqmeter.low_beatch)
sd.sqmeter.low_beatch<-tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low_beatch <-t(sd.sqmeter.low_beatch/sqrt(n.samples.df$low_beatch))
sem.sqmeter.low_beatch.df<-as.data.frame(sem.sqmeter.low_beatch)
length.class<-seq(1,20,1)
(mean.sqmeter.high_beatch<-t(tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T)))
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i]))
}
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal.level), length ))
(n.samples.df<-as.data.frame(n.samples))
#Верхний пляж
(mean.sqmeter.high_beatch<-t(tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.high_beatch.df<-as.data.frame(mean.sqmeter.high_beatch)
(sd.sqmeter.high_beatch<-tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T))
(sem.sqmeter.high_beatch <-t(sd.sqmeter.high_beatch/sqrt(n.samples.df$high_beatch)))
sem.sqmeter.high_beatch.df<-as.data.frame(sem.sqmeter.high_beatch)
#пояс фукоидов
mean.sqmeter.fucus_zone<-t(tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.fucus_zone.df<-as.data.frame(mean.sqmeter.fucus_zone)
sd.sqmeter.fucus_zone<-tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.fucus_zone <-t(sd.sqmeter.fucus_zone/sqrt(n.samples.df$fucus_zone))
sem.sqmeter.fucus_zone.df<-as.data.frame(sem.sqmeter.fucus_zone)
#пояс зостеры
mean.sqmeter.zostera_zone<-t(tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.zostera_zone.df<-as.data.frame(mean.sqmeter.zostera_zone)
sd.sqmeter.zostera_zone<-tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.zostera_zone <-t(sd.sqmeter.zostera_zone/sqrt(n.samples.df$zostera_zone))
sem.sqmeter.zostera_zone.df<-as.data.frame(sem.sqmeter.zostera_zone)
#нижний пляж
(mean.sqmeter.low_beatch<-t(tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.low_beatch.df<-as.data.frame(mean.sqmeter.low_beatch)
sd.sqmeter.low_beatch<-tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low_beatch <-t(sd.sqmeter.low_beatch/sqrt(n.samples.df$low_beatch))
sem.sqmeter.low_beatch.df<-as.data.frame(sem.sqmeter.low_beatch)
length.class<-seq(1,20,1)
(mean.sqmeter2.high_beatch<-mean.sqmeter.high_beatch[,2:2])
(mean.sqmeter2.high_beatch<-mean.sqmeter.high_beatch[2:2,])
(mean.sqmeter2.high_beatch<-mean.sqmeter.high_beatch[2:11,])
(sd.sqmeter2.high_beatch<-sd.sqmeter.high_beatch[,2:11])
(mean.sqmeter2.high_beatch<-mean.sqmeter.high_beatch[2:11,])
mean.sqmeter2.high_beatch.df<-as.data.frame(mean.sqmeter2.high_beatch)
(sd.sqmeter2.high_beatch<-sd.sqmeter.high_beatch[,2:11])
(sem.sqmeter2.high_beatch <-t(sd.sqmeter2.high_beatch/sqrt(n.samples.df$high_beatch)))
sem.sqmeter2.high_beatch.df<-as.data.frame(sem.sqmeter2.high_beatch)
#>1mm
#Верхний пляж
(mean.sqmeter2.high_beatch<-mean.sqmeter.high_beatch[2:11,])
mean.sqmeter2.high_beatch.df<-as.data.frame(mean.sqmeter2.high_beatch)
(sd.sqmeter2.high_beatch<-sd.sqmeter.high_beatch[,2:11])
(sem.sqmeter2.high_beatch <-t(sd.sqmeter2.high_beatch/sqrt(n.samples.df$high_beatch)))
sem.sqmeter2.high_beatch.df<-as.data.frame(sem.sqmeter2.high_beatch)
#пояс фукоидов
mean.sqmeter2.fucus_zone<-mean.sqmeter.fucus_zone[2:11,]
mean.sqmeter2.fucus_zone.df<-as.data.frame(mean.sqmeter2.fucus_zone)
sd.sqmeter2.fucus_zone<-sd.sqmeter.fucus_zone[,2:11]
sem.sqmeter2.fucus_zone <-t(sd.sqmeter2.fucus_zone/sqrt(n.samples.df$fucus_zone))
sem.sqmeter2.fucus_zone.df<-as.data.frame(sem.sqmeter2.fucus_zone)
#пояс зостеры
mean.sqmeter2.zostera_zone<-mean.sqmeter.zostera_zone[2:11,]
mean.sqmeter2.zostera_zone.df<-as.data.frame(mean.sqmeter2.zostera_zone)
sd.sqmeter2.zostera_zone<-sd.sqmeter.zostera_zone[,2:11]
sem.sqmeter2.zostera_zone <-t(sd.sqmeter2.zostera_zone/sqrt(n.samples.df$zostera_zone))
sem.sqmeter2.zostera_zone.df<-as.data.frame(sem.sqmeter2.zostera_zone)
#нижний пляж
mean.sqmeter2.low_beatch<-mean.sqmeter.low_beatch[2:11,]
mean.sqmeter2.low_beatch.df<-as.data.frame(mean.sqmeter2.low_beatch)
sd.sqmeter2.low_beatch<-sd.sqmeter.low_beatch[,2:11]
sem.sqmeter2.low_beatch <-t(sd.sqmeter2.low_beatch/sqrt(n.samples.df$low_beatch))
sem.sqmeter2.low_beatch.df<-as.data.frame(sem.sqmeter2.low_beatch)
length.class2<-seq(2,20,1)
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
for (j in 1:length(colnames(mean.sqmeter2.high_beatch)))
{
pdf(file=paste("high_beatch2", colnames(mean.sqmeter2.high_beatch)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter2.high_beatch[,j], nn=length.class2,  z=sem.sqmeter2.high_beatch[,j])
title(main=colnames(mean.sqmeter2.high_beatch)[j], xlab="", ylab="")
dev.off()
}
length.class2<-seq(2,20,1)
for (j in 1:length(colnames(mean.sqmeter2.high_beatch)))
{
pdf(file=paste("high_beatch2", colnames(mean.sqmeter2.high_beatch)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter2.high_beatch[,j], nn=length.class2,  z=sem.sqmeter2.high_beatch[,j])
title(main=colnames(mean.sqmeter2.high_beatch)[j], xlab="", ylab="")
dev.off()
}
length.class2
mean.sqmeter2.high_beatch[,j]
mean.sqmeter2.high_beatch
#>1mm
#Верхний пляж
(mean.sqmeter2.high_beatch<-mean.sqmeter.high_beatch[2:20,])
mean.sqmeter2.high_beatch.df<-as.data.frame(mean.sqmeter2.high_beatch)
(sd.sqmeter2.high_beatch<-sd.sqmeter.high_beatch[,2:20])
(sem.sqmeter2.high_beatch <-t(sd.sqmeter2.high_beatch/sqrt(n.samples.df$high_beatch)))
sem.sqmeter2.high_beatch.df<-as.data.frame(sem.sqmeter2.high_beatch)
#пояс фукоидов
mean.sqmeter2.fucus_zone<-mean.sqmeter.fucus_zone[2:20,]
mean.sqmeter2.fucus_zone.df<-as.data.frame(mean.sqmeter2.fucus_zone)
sd.sqmeter2.fucus_zone<-sd.sqmeter.fucus_zone[,2:20]
sem.sqmeter2.fucus_zone <-t(sd.sqmeter2.fucus_zone/sqrt(n.samples.df$fucus_zone))
sem.sqmeter2.fucus_zone.df<-as.data.frame(sem.sqmeter2.fucus_zone)
#пояс зостеры
mean.sqmeter2.zostera_zone<-mean.sqmeter.zostera_zone[2:20,]
mean.sqmeter2.zostera_zone.df<-as.data.frame(mean.sqmeter2.zostera_zone)
sd.sqmeter2.zostera_zone<-sd.sqmeter.zostera_zone[,2:20]
sem.sqmeter2.zostera_zone <-t(sd.sqmeter2.zostera_zone/sqrt(n.samples.df$zostera_zone))
sem.sqmeter2.zostera_zone.df<-as.data.frame(sem.sqmeter2.zostera_zone)
#нижний пляж
mean.sqmeter2.low_beatch<-mean.sqmeter.low_beatch[2:20,]
mean.sqmeter2.low_beatch.df<-as.data.frame(mean.sqmeter2.low_beatch)
sd.sqmeter2.low_beatch<-sd.sqmeter.low_beatch[,2:20]
sem.sqmeter2.low_beatch <-t(sd.sqmeter2.low_beatch/sqrt(n.samples.df$low_beatch))
sem.sqmeter2.low_beatch.df<-as.data.frame(sem.sqmeter2.low_beatch)
length.class2<-seq(2,20,1)
#>1mm
#верхний пляж
for (j in 1:length(colnames(mean.sqmeter2.high_beatch)))
{
pdf(file=paste("high_beatch2", colnames(mean.sqmeter2.high_beatch)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter2.high_beatch[,j], nn=length.class2,  z=sem.sqmeter2.high_beatch[,j])
title(main=colnames(mean.sqmeter2.high_beatch)[j], xlab="", ylab="")
dev.off()
}
#пояс фукоидов
for (j in 1:length(colnames(mean.sqmeter2.fucus_zone)))
{
pdf(file=paste("fucus_zone2", colnames(mean.sqmeter2.fucus_zone)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter2.fucus_zone[,j], nn=length.class2,  z=sem.sqmeter2.fucus_zone[,j])
title(main=colnames(mean.sqmeter2.fucus_zone)[j], xlab="", ylab="")
dev.off()
}
#пояс зостеры
for (j in 1:length(colnames(mean.sqmeter2.zostera_zone)))
{
pdf(file=paste("zostera_zone2", colnames(mean.sqmeter2.zostera_zone)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter2.zostera_zone[,j], nn=length.class2,  z=sem.sqmeter2.zostera_zone[,j])
title(main=colnames(mean.sqmeter2.zostera_zone)[j], xlab="", ylab="")
dev.off()
}
#нижний пляж
for (j in 1:length(colnames(mean.sqmeter2.low_beatch)))
{
pdf(file=paste("low_beatch2", colnames(mean.sqmeter.low_beatch)[j], ".pdf",sep="_"))
error.bars(yv=mean.sqmeter2.low_beatch[,j], nn=length.class2,  z=sem.sqmeter2.low_beatch[,j])
title(main=colnames(mean.sqmeter2.low_beatch)[j], xlab="", ylab="")
dev.off()
}
setwd("~/note_backup_2013-04-13/PhD_thesis/White_Sea/Ryashkov_YuG//")
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
#subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1992")
#и среднее??
# tapply выдает как резудьтат матрицу
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
length.class<-seq(1,20,1)
#>2mm mean size structure
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
length.class2<-seq(2,20,1)
#from R-book
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
#>2mm
for (j in 1:length(colnames(mean.sizestr.sqmeter2)))
{
pdf(file=paste("YuG2", colnames(mean.sizestr.sqmeter2)[j], ".pdf",sep="_"))
error.bars(yv=mean.sizestr.sqmeter2[,j], nn=length.class2, z=sem.sizestr.sqmeter2[,j])
title(main=colnames(mean.sizestr.sqmeter2)[j], xlab="", ylab="")
dev.off()
}
setwd("~/Dropbox/PhD_thesis/White_Sea/Ryashkov_ZRS/")
# размерная структура суммарно по годам по горизонтам
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
#subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1992")
#и среднее??
# tapply выдает как резудьтат матрицу
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
length.class<-seq(1,20,1)
#>2mm mean size structure
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
length.class2<-seq(2,20,1)
#from R-book
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
#>2mm
for (j in 1:length(colnames(mean.sizestr.sqmeter2)))
{
pdf(file=paste("ZRS2", colnames(mean.sizestr.sqmeter2)[j], ".pdf",sep="_"))
error.bars(yv=mean.sizestr.sqmeter2[,j], nn=length.class2, z=sem.sizestr.sqmeter2[,j])
title(main=colnames(mean.sizestr.sqmeter2)[j], xlab="", ylab="")
dev.off()
}
#>2mm
for (j in 1:length(colnames(mean.sizestr.sqmeter2)))
{
pdf(file=paste("zrs2", colnames(mean.sizestr.sqmeter2)[j], ".pdf",sep="_"))
error.bars(yv=mean.sizestr.sqmeter2[,j], nn=length.class2, z=sem.sizestr.sqmeter2[,j])
title(main=colnames(mean.sizestr.sqmeter2)[j], xlab="", ylab="")
dev.off()
}
setwd("~/Dropbox/PhD_thesis/White_Sea/Ryashkov_ZRS/")
# размерная структура суммарно по годам по горизонтам
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
#subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1992")
#и среднее??
# tapply выдает как резудьтат матрицу
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
length.class<-seq(1,20,1)
#>2mm mean size structure
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
length.class2<-seq(2,20,1)
#from R-book
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
setwd("~/note_backup_2013-04-13/PhD_thesis/White_Sea/Ryashkov_ZRS/")
# размерная структура суммарно по годам по горизонтам
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
#subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1992")
#и среднее??
# tapply выдает как резудьтат матрицу
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
length.class<-seq(1,20,1)
#>2mm mean size structure
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
length.class2<-seq(2,20,1)
#from R-book
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
#>2mm
for (j in 1:length(colnames(mean.sizestr.sqmeter2)))
{
pdf(file=paste("zrs2", colnames(mean.sizestr.sqmeter2)[j], ".pdf",sep="_"))
error.bars(yv=mean.sizestr.sqmeter2[,j], nn=length.class2, z=sem.sizestr.sqmeter2[,j])
title(main=colnames(mean.sizestr.sqmeter2)[j], xlab="", ylab="")
dev.off()
}
