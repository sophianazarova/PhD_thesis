tapply(paste("mean.sqmeter", levels(size.str.sqmeter$tidal_level)[1], sep=".")$Freq,
INDEX=list(paste("mean.sqmeter", levels(size.str.sqmeter$tidal_level)[1], sep=".")$year,
paste("mean.sqmeter", levels(size.str.sqmeter$tidal_level)[1], sep=".")$Length.int),FUN=mean, na.rm=T))
paste("mean.sqmeter", levels(size.str.sqmeter$tidal_level)[1], sep=".")
paste("mean.sqmeter", levels(size.str.sqmeter$tidal_level)[1], sep=".")$Freq
paste("mean.sqmeter", levels(size.str.sqmeter$tidal_level)[1]
)
assign(paste("mean.sqmeter", levels(size.str.sqmeter$tidal_level)[1], sep="."),
tapply(Freq, INDEX=list(year, Length.int), data=paste(levels(size.str.sqmeter$tidal_level)[1]), FUN=mean, na.rm=T))
assign(paste("mean.sqmeter", levels(size.str.sqmeter$tidal_level)[1], sep="."),
tapply(data=paste(levels(size.str.sqmeter$tidal_level)[1]), Freq, INDEX=list(year, Length.int), FUN=mean, na.rm=T))
attach(paste(levels(size.str.sqmeter$tidal_level)[1]))
fucus_zone
attach(fucus_zone)
attach("fucus_zone")
attach(name=paste(levels(size.str.sqmeter$tidal_level)[1]))
attach(what=data.frame, name=paste(levels(size.str.sqmeter$tidal_level)[1]))
attach(what="data.frame", name=paste(levels(size.str.sqmeter$tidal_level)[1]))
attach(what=paste(levels(size.str.sqmeter$tidal_level)[1]))
assign(paste("mean.sqmeter", levels(size.str.sqmeter$tidal_level)[1], sep="."),
tapply(levels(size.str.sqmeter$tidal_level)[1]$Freq, INDEX=list(levels(size.str.sqmeter$tidal_level)[1]$year, levels(size.str.sqmeter$tidal_level)[1]$Length.int), FUN=mean, na.rm=T)
)
assign(paste("mean.sqmeter", levels(size.str.sqmeter$tidal_level)[1], sep="."),
tapply(levels(size.str.sqmeter$tidal_level)[1]$Freq,
INDEX=list(levels(size.str.sqmeter$tidal_level)[1]$year, levels(size.str.sqmeter$tidal_level)[1]$Length.int),
FUN=mean, na.rm=T))
levels(size.str.sqmeter$tidal_level)[1]
levels(size.str.sqmeter$tidal_level)[1]$Freq
paste(levels(size.str.sqmeter$tidal_level)[1])$Freq
paste(levels(size.str.sqmeter$tidal_level)[1])
paste(abv, i, sep"")
paste(abv, i, sep="")
paste("abv, i, sep="")
)
")"
paste("abv", i, sep="")
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i]))
write.table(paste(levels(size.str.sqmeter$tidal_level)[i], file=paste(levels(size.str.sqmeter$tidal_level)[i])
}
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i]))
write.table(paste(levels(size.str.sqmeter$tidal_level)[i]), file=paste(levels(size.str.sqmeter$tidal_level)[i]))
}
write.table(x=paste(levels(size.str.sqmeter$tidal_level)[i]), file=paste(levels(size.str.sqmeter$tidal_level)[i]))
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
write.table(assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i])), file=paste(levels(size.str.sqmeter$tidal_level)[i]))
}
rm(fucus_zone, zostera_zone, high_beatch,low_beatch)
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
write.table(assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i])), file=paste(levels(size.str.sqmeter$tidal_level)[i]))
}
attach(paste(levels(size.str.sqmeter$tidal_level)[1]))
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
write.table(assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i])), file=paste(levels(size.str.sqmeter$tidal_level)[i]), sep=",")
}
attach(paste(levels(size.str.sqmeter$tidal_level)[1]))
(mean.sqmeter.high_beatch<-tapply(high_beatch$Freq,INDEX=list(high_beatch$year, high_beatch$tidal_level,  high_beatch$Length.int),FUN=sd, na.rm=T))
str(high_beatch)
(mean.sqmeter.high_beatch<-tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T))
(sd.sqmeter.high_beatch<-tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T))
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal.level), length ))
n.samples.df<-as.data.frame(n.samples)
(n.samples.df<-as.data.frame(n.samples))
(sem.sqmeter.high_beatch <-t(sd.sqmeter.high_beatch/sqrt(n.samples.df$high_beatch)))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
mean.sqmeter.high_beatch.df<-as.data.frame(mean.sizestr.sqmeter)
sem.sqmeter.high_beatch.df<-as.data.frame(sem.sizestr.sqmeter)
(mean.sqmeter.fucus_zone<-tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.fucus_zone.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sqmeter.fucus_zone<-tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T))
(sem.sqmeter.fucus_zone <-t(sd.sqmeter.fucus_zone/sqrt(n.samples.df$fucus_zone)))
sem.sqmeter.fucus_zone.df<-as.data.frame(sem.sizestr.sqmeter)
sem.sqmeter.high_beatch.df<-as.data.frame(sem.sqmeter.high_beatch)
mean.sqmeter.fucus_zone<-tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T)
mean.sqmeter.fucus_zone.df<-as.data.frame(mean.sizestr.sqmeter)
sd.sqmeter.fucus_zone<-tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.fucus_zone <-t(sd.sqmeter.fucus_zone/sqrt(n.samples.df$fucus_zone))
sem.sqmeter.fucus_zone.df<-as.data.frame(sem.sqmeter.fucus_zone)
mean.sqmeter.zostera_zone<-tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T)
mean.sqmeter.zostera_zone.df<-as.data.frame(mean.sizestr.sqmeter)
sd.sqmeter.zostera_zone<-tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.zostera_zone <-t(sd.sqmeter.zostera_zone/sqrt(n.samples.df$zostera_zone))
sem.sqmeter.zostera_zone.df<-as.data.frame(sem.sqmeter.zostera_zone)
#нижний пляж
mean.sqmeter.low_beatch<-tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)
mean.sqmeter.low_beatch.df<-as.data.frame(mean.sizestr.sqmeter)
sd.sqmeter.low_beatch<-tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low_beatch <-t(sd.sqmeter.low_beatch/sqrt(n.samples.df$low_beatch))
sem.sqmeter.low_beatch.df<-as.data.frame(sem.sqmeter.low_beatch)
length.class<-seq(1,20,1)
#from R-book
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
for (j in 1:length(colnames(mean.sqmeter.high_beatch)))
{
pdf(file=paste("high_beatch", colnames(mean.sqmeter.high_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.high_beatch[,j], nn=length.class, z=sem.sizestr.sqmeter[,j])
title(main=colnames(mean.sqmeter.high_beatch)[j], xlab="", ylab="")
dev.off()
}
for (j in 1:length(colnames(mean.sqmeter.high_beatch)))
{
pdf(file=paste("high_beatch", colnames(mean.sqmeter.high_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.high_beatch[,j], nn=length.class, z=sem.sqmeter.high_beatch[,j])
title(main=colnames(mean.sqmeter.high_beatch)[j], xlab="", ylab="")
dev.off()
}
length.class<-seq(1,20,1)
for (j in 1:length(colnames(mean.sqmeter.high_beatch)))
{
pdf(file=paste("high_beatch", colnames(mean.sqmeter.high_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.high_beatch[,j], nn=length.class, z=sem.sqmeter.high_beatch[,j])
title(main=colnames(mean.sqmeter.high_beatch)[j], xlab="", ylab="")
dev.off()
}
high_beatch
levels(high_beatch$Length.int)
mean.sqmeter.high_beatch
length.class
sem.sqmeter.high_beatch[,j]
for (j in 1:length(colnames(mean.sqmeter.high_beatch)))
{
pdf(file=paste("high_beatch", colnames(mean.sqmeter.high_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.high_beatch[,j], nn=length.class, z=sem.sqmeter.high_beatch[,j])
title(main=colnames(mean.sqmeter.high_beatch)[j], xlab="", ylab="")
dev.off()
}
for (j in 1:length(colnames(mean.sqmeter.high_beatch)))
{
pdf(file=paste("high_beatch", colnames(mean.sqmeter.high_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.high_beatch[,j],  z=sem.sqmeter.high_beatch[,j])
title(main=colnames(mean.sqmeter.high_beatch)[j], xlab="", ylab="")
dev.off()
}
barplot(mean.sqmeter.high_beatch[,j])
barplot(mean.sqmeter.high_beatch[,j])
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
barplot(mean.sqmeter.high_beatch[,j])
barplot(mean.sqmeter.high_beatch[j,])
mean.sqmeter.high_beatch[j,]
sem.sqmeter.high_beatch[,j]
for (j in 1:length(colnames(mean.sqmeter.high_beatch)))
{
pdf(file=paste("high_beatch", colnames(mean.sqmeter.high_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.high_beatch[j,], nn=length.class,  z=sem.sqmeter.high_beatch[,j])
title(main=colnames(mean.sqmeter.high_beatch)[j], xlab="", ylab="")
dev.off()
}
sem.sqmeter.high_beatch[,j]
sem.sqmeter.high_beatch[,j]
sem.sqmeter.high_beatch
sem.sqmeter.high_beatch[,1]
j
rm(j)
for (j in 1:length(colnames(mean.sqmeter.high_beatch)))
{
pdf(file=paste("high_beatch", colnames(mean.sqmeter.high_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.high_beatch[j,], nn=length.class,  z=sem.sqmeter.high_beatch[,j])
title(main=colnames(mean.sqmeter.high_beatch)[j], xlab="", ylab="")
dev.off()
}
length(sem.sqmeter.high_beatch[,1])
error.bars(yv=mean.sqmeter.high_beatch[j,], nn=length.class,  z=sem.sqmeter.high_beatch[,j])
barplot(mean.sqmeter.high_beatch[j,], length.class)
barplot(mean.sqmeter.high_beatch[j,])
barplot(mean.sqmeter.high_beatch[j,])
barplot(mean.sqmeter.high_beatch[,j])
mean.sqmeter.high_beatch[,j]
barplot(mean.sqmeter.high_beatch[j,])
mean.sqmeter.high_beatch[j,]
for (j in 1:length(rownames(mean.sqmeter.high_beatch)))
{
pdf(file=paste("high_beatch", colnames(mean.sqmeter.high_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.high_beatch[j,], nn=length.class,  z=sem.sqmeter.high_beatch[,j])
title(main=colnames(mean.sqmeter.high_beatch)[j], xlab="", ylab="")
dev.off()
}
mean.sqmeter.low_beatch<-t(tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.high_beatch[,j]
for (j in 1:length(colnames(mean.sqmeter.high_beatch)))
{
pdf(file=paste("high_beatch", colnames(mean.sqmeter.high_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.high_beatch[,j], nn=length.class,  z=sem.sqmeter.high_beatch[,j])
title(main=colnames(mean.sqmeter.high_beatch)[j], xlab="", ylab="")
dev.off()
}
mean.sqmeter.high_beatch[,j]
mean.sqmeter.high_beatch[j,]
(mean.sqmeter.low_beatch<-t(tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)))
sem.sqmeter.low_beatch <-t(sd.sqmeter.low_beatch/sqrt(n.samples.df$low_beatch))
sem.sqmeter.low_beatch
sem.sqmeter.low_beatch[,1]
mean.sqmeter.low_beatch[,1]
for (j in 1:length(colnames(mean.sqmeter.high_beatch)))
{
pdf(file=paste("high_beatch", colnames(mean.sqmeter.high_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.high_beatch[,j], nn=length.class,  z=sem.sqmeter.high_beatch[,j])
title(main=colnames(mean.sqmeter.high_beatch)[j], xlab="", ylab="")
dev.off()
}
length.class
length(mean.sqmeter.low_beatch[,1])
length(length.class)
length(sem.sqmeter.low_beatch[,1])
rm(j)
for (j in 1:length(colnames(mean.sqmeter.high_beatch)))
{
pdf(file=paste("high_beatch", colnames(mean.sqmeter.high_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.high_beatch[,j], nn=length.class,  z=sem.sqmeter.high_beatch[,j])
title(main=colnames(mean.sqmeter.high_beatch)[j], xlab="", ylab="")
dev.off()
}
error.bars(yv=mean.sqmeter.high_beatch[,j], nn=length.class,  z=sem.sqmeter.high_beatch[,j])
title(main=colnames(mean.sqmeter.high_beatch)[j], xlab="", ylab="")
error.bars(yv=mean.sqmeter.high_beatch[,j], nn=length.class,  z=sem.sqmeter.high_beatch[,j])
error.bars(yv=mean.sqmeter.high_beatch[,1], nn=length.class,  z=sem.sqmeter.high_beatch[,1])
error.bars(yv=mean.sqmeter.high_beatch[,j], nn=length.class,  z=sem.sqmeter.high_beatch[,j])
error.bars(yv=mean.sqmeter.high_beatch[,1], nn=length.class,  z=sem.sqmeter.high_beatch[,1])
error.bars(yv=mean.sqmeter.high_beatch[,1], nn=seq(1, length(mean.sqmeter.high_beatch[,1]),1),  z=sem.sqmeter.high_beatch[,1])
error.bars(yv=mean.sqmeter.high_beatch[,1], nn=seq(1, length(mean.sqmeter.high_beatch[,1]),1),  z=sem.sqmeter.high_beatch[,1])
mean.sqmeter.high_beatch[,1]
#Верхний пляж
(mean.sqmeter.high_beatch<-t(tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.high_beatch.df<-as.data.frame(mean.sqmeter.high_beatch)
(sd.sqmeter.high_beatch<-tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T))
(sem.sqmeter.high_beatch <-t(sd.sqmeter.high_beatch/sqrt(n.samples.df$high_beatch)))
sem.sqmeter.high_beatch.df<-as.data.frame(sem.sqmeter.high_beatch)
#пояс фукоидов
mean.sqmeter.fucus_zone<-t(tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.fucus_zone.df<-as.data.frame(mean.sqmeter.fucus_zone)
sd.sqmeter.fucus_zone<-tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.fucus_zone <-t(sd.sqmeter.fucus_zone/sqrt(n.samples.df$fucus_zone))
sem.sqmeter.fucus_zone.df<-as.data.frame(sem.sqmeter.fucus_zone)
#пояс зостеры
mean.sqmeter.zostera_zone<-t(tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.zostera_zone.df<-as.data.frame(mean.sqmeter.zostera_zone)
sd.sqmeter.zostera_zone<-tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.zostera_zone <-t(sd.sqmeter.zostera_zone/sqrt(n.samples.df$zostera_zone))
sem.sqmeter.zostera_zone.df<-as.data.frame(sem.sqmeter.zostera_zone)
#нижний пляж
(mean.sqmeter.low_beatch<-t(tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.low_beatch.df<-as.data.frame(mean.sqmeter.low_beatch)
sd.sqmeter.low_beatch<-tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low_beatch <-t(sd.sqmeter.low_beatch/sqrt(n.samples.df$low_beatch))
sem.sqmeter.low_beatch.df<-as.data.frame(sem.sqmeter.low_beatch)
length.class<-seq(1,20,1)
for (j in 1:length(colnames(mean.sqmeter.high_beatch)))
{
pdf(file=paste("high_beatch", colnames(mean.sqmeter.high_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.high_beatch[,j], nn=length.class,  z=sem.sqmeter.high_beatch[,j])
title(main=colnames(mean.sqmeter.high_beatch)[j], xlab="", ylab="")
dev.off()
}
for (j in 1:length(colnames(mean.sqmeter.high_beatch)))
{
pdf(file=paste("low_beatch", colnames(mean.sqmeter.low_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.low_beatch[,j], nn=length.class,  z=sem.sqmeter.low_beatch[,j])
title(main=colnames(mean.sqmeter.low_beatch)[j], xlab="", ylab="")
dev.off()
}
for (j in 1:length(colnames(mean.sqmeter.low_beatch)))
{
pdf(file=paste("low_beatch", colnames(mean.sqmeter.low_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.low_beatch[,j], nn=length.class,  z=sem.sqmeter.low_beatch[,j])
title(main=colnames(mean.sqmeter.low_beatch)[j], xlab="", ylab="")
dev.off()
}
sem.sqmeter.low_beatch
mean.sqmeter.low_beatch
for (j in 1:length(colnames(mean.sqmeter.fucus_zone)))
{
pdf(file=paste("fucus_zone", colnames(mean.sqmeter.fucus_zone)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.fucus_zone[,j], nn=length.class,  z=sem.sqmeter.fucus_zone[,j])
title(main=colnames(mean.sqmeter.fucus_zone)[j], xlab="", ylab="")
dev.off()
}
for (j in 1:length(colnames(mean.sqmeter.zostera_zone)))
{
pdf(file=paste("zostera_zone", colnames(mean.sqmeter.zostera_zone)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.zostera_zone[,j], nn=length.class,  z=sem.sqmeter.zostera_zone[,j])
title(main=colnames(mean.sqmeter.zostera_zone)[j], xlab="", ylab="")
dev.off()
}
for (j in 1:length(colnames(mean.sqmeter.low_beatch)))
{
pdf(file=paste("low_beatch", colnames(mean.sqmeter.low_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=data.frame(mean.sqmeter.high_beatch[,j], mean.sqmeter.fucus_zone[,j],
mean.sqmeter.zostera_zone[,j],mean.sqmeter.low_beatch[,j]),
nn=length.class,
z=sem.sqmeter.low_beatch[,j])
title(main=colnames(mean.sqmeter.low_beatch)[j], xlab="", ylab="")
dev.off()
}
for (j in 1:length(colnames(mean.sqmeter.low_beatch)))
{
pdf(file=paste("low_beatch", colnames(mean.sqmeter.low_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=matrix(mean.sqmeter.high_beatch[,j], mean.sqmeter.fucus_zone[,j],
mean.sqmeter.zostera_zone[,j],mean.sqmeter.low_beatch[,j]),
nn=length.class,
z=sem.sqmeter.low_beatch[,j])
title(main=colnames(mean.sqmeter.low_beatch)[j], xlab="", ylab="")
dev.off()
}
#нижний пляж
for (j in 1:length(colnames(mean.sqmeter.low_beatch)))
{
pdf(file=paste("low_beatch", colnames(mean.sqmeter.low_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.low_beatch[,j], nn=length.class,  z=sem.sqmeter.low_beatch[,j])
title(main=colnames(mean.sqmeter.low_beatch)[j], xlab="", ylab="")
dev.off()
}
for (j in 1:length(colnames(mean.sqmeter.low_beatch)))
{
pdf(file=paste("all_tidal", colnames(mean.sqmeter.low_beatch)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=matrix(mean.sqmeter.high_beatch[,j], mean.sqmeter.fucus_zone[,j],
mean.sqmeter.zostera_zone[,j],mean.sqmeter.low_beatch[,j]),
nn=length.class,
z=sem.sqmeter.low_beatch[,j])
title(main=colnames(mean.sqmeter.low_beatch)[j], xlab="", ylab="")
dev.off()
}
barplot(matrix(mean.sqmeter.high_beatch[,j], mean.sqmeter.fucus_zone[,j],
mean.sqmeter.zostera_zone[,j],mean.sqmeter.low_beatch[,j])
)
barplot(matrix(mean.sqmeter.high_beatch[,1], mean.sqmeter.fucus_zone[,1],
mean.sqmeter.zostera_zone[,1],mean.sqmeter.low_beatch[,1])
)
matrix(mean.sqmeter.high_beatch[,1], mean.sqmeter.fucus_zone[,1],
mean.sqmeter.zostera_zone[,1],mean.sqmeter.low_beatch[,1]))
matrix(mean.sqmeter.high_beatch[,1], mean.sqmeter.fucus_zone[,1],
mean.sqmeter.zostera_zone[,1],mean.sqmeter.low_beatch[,1])
setwd("~/Dropbox/PhD_thesis/White_Sea/Luvenga_II_razrez/")
setwd("~/Dropbox/PhD_thesis/White_Sea/Luvenga_Goreliy//")
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
write.table(assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i])), file=paste(levels(size.str.sqmeter$tidal_level)[i]), sep=",")
}
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal.level), length ))
(n.samples.df<-as.data.frame(n.samples))
samples.names
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal_level), length ))
(n.samples.df<-as.data.frame(n.samples))
ls()
(mean.sqmeter.high<-t(tapply(high$Freq,INDEX=list(high$year,  high$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.high.df<-as.data.frame(mean.sqmeter.high)
(sd.sqmeter.high<-tapply(high$Freq,INDEX=list(high$year,  high$Length.int),FUN=sd, na.rm=T))
(sem.sqmeter.high <-t(sd.sqmeter.high/sqrt(n.samples.df$high)))
sem.sqmeter.high.df<-as.data.frame(sem.sqmeter.high)
mean.sqmeter.middle<-t(tapply(middle$Freq,INDEX=list(middle$year,  middle$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.middle.df<-as.data.frame(mean.sqmeter.middle)
sd.sqmeter.middle<-tapply(middle$Freq,INDEX=list(middle$year,  middle$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.middle <-t(sd.sqmeter.middle/sqrt(n.samples.df$middle))
sem.sqmeter.middle.df<-as.data.frame(sem.sqmeter.middle)
mean.sqmeter.Mid-low<-t(tapply(Mid-low$Freq,INDEX=list(Mid-low$year,  Mid-low$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.Mid-low.df<-as.data.frame(mean.sqmeter.Mid-low)
sd.sqmeter.Mid-low<-tapply(Mid-low$Freq,INDEX=list(Mid-low$year,  Mid-low$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.Mid-low <-t(sd.sqmeter.Mid-low/sqrt(n.samples.df$Mid-low))
sem.sqmeter.Mid-low.df<-as.data.frame(sem.sqmeter.Mid-low)
ls()
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
write.table(assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i])), file=paste(levels(size.str.sqmeter$tidal_level)[i]), sep=",")
}
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal_level), length ))
(n.samples.df<-as.data.frame(n.samples))
mean.sqmeter.midlow<-t(tapply(midlow$Freq,INDEX=list(midlow$year,  midlow$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.midlow.df<-as.data.frame(mean.sqmeter.midlow)
sd.sqmeter.midlow<-tapply(midlow$Freq,INDEX=list(midlow$year,  midlow$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.midlow <-t(sd.sqmeter.midlow/sqrt(n.samples.df$midlow))
sem.sqmeter.midlow.df<-as.data.frame(sem.sqmeter.midlow)
(mean.sqmeter.low<-t(tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.low.df<-as.data.frame(mean.sqmeter.low)
sd.sqmeter.low<-tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low <-t(sd.sqmeter.low/sqrt(n.samples.df$low))
sem.sqmeter.low.df<-as.data.frame(sem.sqmeter.low)
length.class<-seq(1,20,1)
#from R-book
error.bars<-function(yv,z,nn){
xv<-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn)#,ylab=deparse(substitute(yv)))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
#верхний горизонт
for (j in 1:length(colnames(mean.sqmeter.high)))
{
pdf(file=paste("high", colnames(mean.sqmeter.high)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.high[,j], nn=length.class,  z=sem.sqmeter.high[,j])
title(main=colnames(mean.sqmeter.high)[j], xlab="", ylab="")
dev.off()
}
#средний горизонт
for (j in 1:length(colnames(mean.sqmeter.middle)))
{
pdf(file=paste("middle", colnames(mean.sqmeter.middle)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.middle[,j], nn=length.class,  z=sem.sqmeter.middle[,j])
title(main=colnames(mean.sqmeter.middle)[j], xlab="", ylab="")
dev.off()
}
#граница среднего и нижнего горизонтов, в фукоидах
for (j in 1:length(colnames(mean.sqmeter.midlow)))
{
pdf(file=paste("midlow", colnames(mean.sqmeter.midlow)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.midlow[,j], nn=length.class,  z=sem.sqmeter.midlow[,j])
title(main=colnames(mean.sqmeter.midlow)[j], xlab="", ylab="")
dev.off()
}
#нижний горизонт, у нуля глубин
for (j in 1:length(colnames(mean.sqmeter.low)))
{
pdf(file=paste("low", colnames(mean.sqmeter.low)[j], ".pdf",sep="_"), paper="a4")
error.bars(yv=mean.sqmeter.low[,j], nn=length.class,  z=sem.sqmeter.low[,j])
title(main=colnames(mean.sqmeter.low)[j], xlab="", ylab="")
dev.off()
}
sem.sqmeter.high
arraay(sem.sqmeter.high)
array(sem.sqmeter.high)
is.array(sem.sqmeter.high)
samples.names
str(samples.names)
str(samples.squares)
source('~/Dropbox/PhD_thesis/White_Sea/Estuatiy_Luvenga/size_str.r')
source('~/.active-rstudio-document', echo=TRUE)
