mac <- read.csv("estuary_N2.csv", header=TRUE)
mac <- read.table("clipboard", header=TRUE)
mac
(mac <- read.table("clipboard", header=TRUE))
library("ggplot2", lib.loc="C:/Users/Vadim/Documents/R/win-library/3.0")
pl <- ggplot(mac, aes(x=year, y=N))
pl+geom(line)
pl+geom_line())
pl+geom_line()
detrend_mac <- lm((N ~ as.numeric(year), data=mac)$residuals + mean(mac$N)
detrend_mac <- lm(N ~ as.numeric(year), data=mac)$residuals + mean(mac$N)
detrend_mac
mac$detrendN <- detrend_mac
pl <- ggplot(mac, aes(x=year, y=detrendN))
pl+geom_line()
nrow(mac)
pacf_detrend <- pacf(detrend_mac, lag.max=10)
pacf(mac$N, lag.max=10)
PRCF <- function (data=mac$N)
{
n <- length(data)
prcf <- data.frame(lag=c(1:round(n/2)))
#pracf<- data.frame(lag=c(1:round(n/2)))
Lt <- log(data)
R <- Lt[2:n]-Lt[1:(n-1)]
prcf$acf <- pacf(Lt, lag.max=round(n/2), plot=FALSE)$acf
prcf$acf[1] <- cor(R,Lt[1:(n-1)])
prcf$type <- "PRCF"
#pracf$acf <- pacf(R, lag.max=round(n/2), plot=FALSE)$acf
#pracf$type <- "PRACF"
#prcf <- rbind(prcf, pracf)
Rt <- data.frame(Rt=R, Lt_1=Lt[1:(n-1)])
return(list(prcf, Rt))
}
PRCF()
PRCF2 <- function (data)
{
n <- length(data)
prcf <- data.frame(lag=c(1:round(n/2)))
#pracf<- data.frame(lag=c(1:round(n/2)))
Lt <- log(data)
R <- Lt[2:n]-Lt[1:(n-1)]
prcf$acf <- pacf(Lt, lag.max=round(n/2), plot=FALSE)$acf
prcf$acf[1] <- cor(R,Lt[1:(n-1)])
prcf$type <- "PRCF"
#pracf$acf <- pacf(R, lag.max=round(n/2), plot=FALSE)$acf
#pracf$type <- "PRACF"
#prcf <- rbind(prcf, pracf)
Rt <- data.frame(Rt=R, Lt_1=Lt[1:(n-1)])
return(prcf$acf)
}
PRCF(mac$N)
prcf_mac <- (PRCF(mac$N))[[1]])
prcf_mac <- PRCF(mac$N)[[1]]
prcf_mac
prcf_all <- prcf_mac
pl_PRCF <- ggplot(prcf_all, aes(x=as.factor(lag), y=acf, fill=type))
pl_PRCF + geom_bar(colour="black", stat="identity", position="dodge") + facet_grid(bank~.) + scale_fill_manual(values=c("PRCF" = "grey")) + geom_hline(yintercept=0) + geom_hline(yintercept=c(-2/sqrt(longiv),2/sqrt(longiv)), linetype=2) + xlab("Time lag") + ylab("Partial autocorrelations") + theme_bw()
pl_PRCF + geom_bar(colour="black", stat="identity", position="dodge")  + scale_fill_manual(values=c("PRCF" = "grey")) + geom_hline(yintercept=0) + geom_hline(yintercept=c(-2/sqrt(21),2/sqrt(21)), linetype=2) + xlab("Time lag") + ylab("Partial autocorrelations") + theme_bw()
perm_PRCF <- function(data)
{
prcf <- PRCF(data)[[1]]
n <- nrow(prcf)
longiv <- length(data)
signif_prcf <- data.frame(lag=prcf$lag, prcf=prcf$acf)
signif_prcf$p <- 0
for(i in 1:999)
{
data <- sample(data, longiv)
prcf_perm <- PRCF(data)[[1]]
for (j in 1:n) if(abs(prcf_perm$acf[j])>=abs(prcf$acf[j])) signif_prcf$p [j] <- signif_prcf$p[j] +1
cat("Permutation ", i, "\n")
}
signif_prcf$p <- (signif_prcf$p + 1)/1000
return(signif_prcf)
}
perm_prcf_mac <- perm_PRCF(mac$N)
perm_prcf_vor2
perm_prcf_mac
boot_PRCF <- function (data, n=99, dl=3, confid=0.95)
{
set.seed(1234)
data<-as.ts(data)
longiv <- length(data)
boot_res <- tsboot(data, PRCF2, n, sim="fixed", l=round(longiv/dl))
result <- data.frame(lag=1:length(as.numeric(boot_res$t0)), PRCF=as.numeric(boot_res$t0))
for (i in 1:round(longiv/dl)) result$se[i] <- sd(boot_res$t[,i])
for(i in 1:length(as.numeric(boot_res$t0)))
{
result$low.ci[i] <- boot.ci(boot_res, type="basic", conf=confid, index=i)$basic[4]
result$upper.ci[i] <- boot.ci(boot_res, type="basic",conf=confid, index=i)$basic[5]
}
return(result)
}
perm_prcf_mac_detr <- perm_PRCF(mac$detrN)
mac
perm_prcf_mac_detr <- perm_PRCF(mac$detrendN)
perm_prcf_mac_detr
boot_PRCF <- function (data, n=99, dl=3, confid=0.95)
{
set.seed(1234)
data<-as.ts(data)
longiv <- length(data)
boot_res <- tsboot(data, PRCF2, n, sim="fixed", l=round(longiv/dl))
result <- data.frame(lag=1:length(as.numeric(boot_res$t0)), PRCF=as.numeric(boot_res$t0))
for (i in 1:round(longiv/dl)) result$se[i] <- sd(boot_res$t[,i])
for(i in 1:length(as.numeric(boot_res$t0)))
{
result$low.ci[i] <- boot.ci(boot_res, type="basic", conf=confid, index=i)$basic[4]
result$upper.ci[i] <- boot.ci(boot_res, type="basic",conf=confid, index=i)$basic[5]
}
return(result)
}
boot_PRCF_mac <- boot_PRCF(mac$detrendN, n=999, confid=0.99)
library("boot", lib.loc="C:/Program Files/R/R-3.0.2/library")
boot_PRCF_mac <- boot_PRCF(mac$detrendN, n=999, confid=0.99)
pl_PRCF_ci <- ggplot(boot_prcf_all, aes(x=lag, y=PRCF))
boot_prcf_all
boot_prcf_all <-boot_PRCF_mac
pl_PRCF_ci <- ggplot(boot_prcf_all, aes(x=lag, y=PRCF))
pl_PRCF_ci + geom_bar(colour="black", fill="darkgray", stat="identity", position="dodge")  + geom_hline(yintercept=0) + geom_hline(yintercept=c(-2/sqrt(longiv),2/sqrt(longiv)), linetype=2) + geom_errorbar(aes(ymin=low.ci, ymax=upper.ci),width=0.1)+ xlab("Time lag") + ylab("Partial autocorrelations") + theme_bw()
pl_PRCF_ci + geom_bar(colour="black", fill="darkgray", stat="identity", position="dodge")  + geom_hline(yintercept=0) + geom_hline(yintercept=c(-2/sqrt(21),2/sqrt(21)), linetype=2) + geom_errorbar(aes(ymin=low.ci, ymax=upper.ci),width=0.1)+ xlab("Time lag") + ylab("Partial autocorrelations") + theme_bw()
boot_PRCF_mac <- boot_PRCF(mac$N, n=999, confid=0.99)
#Рисуем диаграммы PRCF с бутстреповыми доверительными интервалами
boot_prcf_all <-boot_PRCF_mac
pl_PRCF_ci <- ggplot(boot_prcf_all, aes(x=lag, y=PRCF))
pl_PRCF_ci + geom_bar(colour="black", fill="darkgray", stat="identity", position="dodge")  + geom_hline(yintercept=0) + geom_hline(yintercept=c(-2/sqrt(21),2/sqrt(21)), linetype=2) + geom_errorbar(aes(ymin=low.ci, ymax=upper.ci),width=0.1)+ xlab("Time lag") + ylab("Partial autocorrelations") + theme_bw()
circus <- function(n,p, met="euclidean"){
# n - число точек
# p - период
factor<- points <- data.frame(X=c(1:n), Y=c(1:n))
k <- 0
for (i in 1:n){
factor$X[i] <- (i-1)/p - k
if ((i/p - trunc(i/p))==0) k <- k + 1
}
factor$Y <- factor$X
for (i in 1:n){
points$X[i] <- cos(2*pi*factor$X[i])
points$Y[i] <- sin(2*pi*factor$Y[i])
}
dist <- dist(points, method=met, diag=TRUE, upper=TRUE)
#dist <- as.dist(matrix(rank(as.matrix(round(dist, digits=3))), ncol=n))
return(dist)
}
Mantel_cycles <- function(m = "euclidean", r="spearman", partial=FALSE, perm=999)
{
data_uni <- mac$N
longiv <- length(mac$N)
dist_uni <- vegdist(data_uni, method = "euclidean")
result_uni <- data.frame(period=rep(NA, (longiv-2)), mantel=rep(NA, (longiv-2)), p=rep(NA, (longiv-2)))
if(!partial)
{
for (i in 3:longiv)
{
mt<-mantel(dist_uni, circus(longiv, i), method=r, permutations=perm)
result_uni$period[i-2] <- i
result_uni$mantel[i-2] <- round(mt$statistic, digits=4)
result_uni$p[i-2] <- mt$signif
}
}
else
{
for (i in 3:longiv)
{
mt<-mantel.partial(dist_uni, circus(longiv, i), dist_year, method=r, permutations=perm)
result_uni$period[i-2] <- i
result_uni$mantel[i-2] <- round(mt$statistic, digits=4)
result_uni$p[i-2] <- mt$signif
}
}
return(list(result_uni))
}
mantel_result <- Mantel_cycles(partial=TRUE)
library("vegan", lib.loc="C:/Users/Vadim/Documents/R/win-library/3.0")
mantel_result <- Mantel_cycles(partial=TRUE)
dist_year <- vegdist(mac$year, method="euclidean")
mantel_result <- Mantel_cycles(partial=TRUE)
mantel_result <- Mantel_cycles(partial=TRUE)
dist_year
dist_mac <- vegdist(mac$N, method="euclidean")
mantel(dist_mac,dist_year)
Mantel_cycles <- function(m = "euclidean", r="spearman", partial=FALSE, perm=999)
{
data_uni <- mac$N
longiv <- length(mac$N)
dist_uni <- vegdist(data_uni, method = "euclidean")
result_uni <- data.frame(period=rep(NA, (longiv-2)), mantel=rep(NA, (longiv-2)), p=rep(NA, (longiv-2)))
if(!partial)
{
for (i in 3:longiv)
{
mt<-mantel(dist_uni, circus(longiv, i), method=r, permutations=perm)
result_uni$period[i-2] <- i
result_uni$mantel[i-2] <- round(mt$statistic, digits=4)
result_uni$p[i-2] <- mt$signif
}
}
else
{
for (i in 3:longiv)
{
mt<-mantel.partial(dist_uni, circus(longiv, i), dist_year, method=r, permutations=perm)
result_uni$period[i-2] <- i
result_uni$mantel[i-2] <- round(mt$statistic, digits=4)
result_uni$p[i-2] <- mt$signif
}
}
return(list(result_uni))
}
dist_mac <- vegdist(mac$N, method="euclidean")
mantel_result <- Mantel_cycles(partial=TRUE)
Mantel_cycles <- function(m = "euclidean", r="spearman", partial=FALSE, perm=999)
{
data_uni <- mac$N
longiv <- length(mac$N)
dist_uni <- vegdist(data_uni, method = "euclidean")
result_uni <- data.frame(period=rep(NA, (longiv-2)), mantel=rep(NA, (longiv-2)), p=rep(NA, (longiv-2)))
if(!partial)
{
for (i in 3:longiv)
{
mt<-mantel(dist_uni, circus(longiv, i), method=r, permutations=perm)
result_uni$period[i-2] <- i
result_uni$mantel[i-2] <- round(mt$statistic, digits=4)
result_uni$p[i-2] <- mt$signif
}
}
else
{
for (i in 3:longiv)
{
mt<-mantel.partial(dist_uni, circus(longiv, i), dist_year, method=r, permutations=perm)
result_uni$period[i-2] <- i
result_uni$mantel[i-2] <- round(mt$statistic, digits=4)
result_uni$p[i-2] <- mt$signif
cat("cycle ", i, "\n")
}
}
return(list(result_uni))
}
mantel_result <- Mantel_cycles(partial=TRUE)
mantel_result
data_uni <- mac$detrendN
Mantel_cycles <- function(m = "euclidean", r="spearman", partial=FALSE, perm=999)
{
data_uni <- mac$detrendN
longiv <- length(mac$N)
dist_uni <- vegdist(data_uni, method = "euclidean")
result_uni <- data.frame(period=rep(NA, (longiv-2)), mantel=rep(NA, (longiv-2)), p=rep(NA, (longiv-2)))
if(!partial)
{
for (i in 3:longiv)
{
mt<-mantel(dist_uni, circus(longiv, i), method=r, permutations=perm)
result_uni$period[i-2] <- i
result_uni$mantel[i-2] <- round(mt$statistic, digits=4)
result_uni$p[i-2] <- mt$signif
}
}
else
{
for (i in 3:longiv)
{
mt<-mantel.partial(dist_uni, circus(longiv, i), dist_year, method=r, permutations=perm)
result_uni$period[i-2] <- i
result_uni$mantel[i-2] <- round(mt$statistic, digits=4)
result_uni$p[i-2] <- mt$signif
cat("cycle ", i, "\n")
}
}
return(list(result_uni))
}
mantel_result <- Mantel_cycles(partial=TRUE)
mantel_result
mac <- read.table("clipboard", header=TRUE)
pl <- ggplot(mac, aes(x=year, y=N))
pl+geom_line()
install.packages("ggplot")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
mac <- read.table("clipboard", header=TRUE)
mac <- read.table("est1.csv", header=TRUE)
pl <- ggplot(mac, aes(x=year, y=N))
pl+geom_line()
mac
mac <- read.table("est1.csv", header=TRUE, sep=";", dec=",")
pl <- ggplot(mac, aes(x=year, y=N))
str(mac)
pl <- ggplot(mac, aes(x=year, y=N))
pl+geom_line()
circus <- function(n,p, met="euclidean"){
# n - число точек
# p - период
factor<- points <- data.frame(X=c(1:n), Y=c(1:n))
k <- 0
for (i in 1:n){
factor$X[i] <- (i-1)/p - k
if ((i/p - trunc(i/p))==0) k <- k + 1
}
factor$Y <- factor$X
for (i in 1:n){
points$X[i] <- cos(2*pi*factor$X[i])
points$Y[i] <- sin(2*pi*factor$Y[i])
}
dist <- dist(points, method=met, diag=TRUE, upper=TRUE)
#dist <- as.dist(matrix(rank(as.matrix(round(dist, digits=3))), ncol=n))
return(dist)
}
Mantel_cycles <- function(m = "euclidean", r="spearman", partial=FALSE, perm=999)
{
data_uni <- mac$detrendN
longiv <- length(mac$N)
dist_uni <- vegdist(data_uni, method = "euclidean")
result_uni <- data.frame(period=rep(NA, (longiv-2)), mantel=rep(NA, (longiv-2)), p=rep(NA, (longiv-2)))
if(!partial)
{
for (i in 3:longiv)
{
mt<-mantel(dist_uni, circus(longiv, i), method=r, permutations=perm)
result_uni$period[i-2] <- i
result_uni$mantel[i-2] <- round(mt$statistic, digits=4)
result_uni$p[i-2] <- mt$signif
}
}
else
{
for (i in 3:longiv)
{
mt<-mantel.partial(dist_uni, circus(longiv, i), dist_year, method=r, permutations=perm)
result_uni$period[i-2] <- i
result_uni$mantel[i-2] <- round(mt$statistic, digits=4)
result_uni$p[i-2] <- mt$signif
cat("cycle ", i, "\n")
}
}
return(list(result_uni))
}
dist_year <- vegdist(mac$year, method="euclidean")
