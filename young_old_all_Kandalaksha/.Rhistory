sem.sqmeter.middle[sem.sqmeter.middle==t(sd.sqmeter.middle)]<-0
#граница среднего и нижнего горизонта, в фукусах
mean.sqmeter.midlow<-t(tapply(midlow$Freq,INDEX=list(midlow$year,  midlow$Length.int),FUN=mean, na.rm=T))
mean.sqmeter.midlow.df<-as.data.frame(mean.sqmeter.midlow)
sd.sqmeter.midlow<-tapply(midlow$Freq,INDEX=list(midlow$year,  midlow$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.midlow <-t(sd.sqmeter.midlow/sqrt(n.samples.df$midlow))
sem.sqmeter.midlow.df<-as.data.frame(sem.sqmeter.midlow)
sem.sqmeter.midlow[sem.sqmeter.midlow==t(sd.sqmeter.midlow)]<-0
#нижний горизонт, у нуля глубин
(mean.sqmeter.low<-t(tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.low.df<-as.data.frame(mean.sqmeter.low)
sd.sqmeter.low<-tapply(low$Freq,INDEX=list(low$year,  low$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low <-t(sd.sqmeter.low/sqrt(n.samples.df$low))
sem.sqmeter.low.df<-as.data.frame(sem.sqmeter.low)
sem.sqmeter.low[sem.sqmeter.low==t(sd.sqmeter.low)]<-0
length.class<-seq(1,20,1)
##size structure >1mm
#верхний горизонт
(mean.sqmeter2.high<-mean.sqmeter.middle[2:20,])
mean.sqmeter2.high.df<-as.data.frame(mean.sqmeter2.high)
(sd.sqmeter2.high<-sd.sqmeter.middle[,2:20])
(sem.sqmeter2.high <-t(sd.sqmeter2.high/sqrt(n.samples.df$high)))
#TODO надо те строки где по одной пробе сделать вместо ошибки NA!!
sem.sqmeter2.high.df<-as.data.frame(sem.sqmeter2.high)
sem.sqmeter2.high[sem.sqmeter2.high==t(sd.sqmeter2.high)]<-0
#средний горизонт
mean.sqmeter2.middle<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.middle.df<-as.data.frame(mean.sqmeter2.middle)
sd.sqmeter2.middle<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.middle <-t(sd.sqmeter2.middle/sqrt(n.samples.df$middle))
sem.sqmeter2.middle.df<-as.data.frame(sem.sqmeter2.middle)
sem.sqmeter2.middle[sem.sqmeter2.middle==t(sd.sqmeter2.middle)]<-0
#граница среднего и нижнего горизонта, в фукусах
mean.sqmeter2.midlow<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.midlow.df<-as.data.frame(mean.sqmeter2.midlow)
sd.sqmeter2.midlow<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.midlow <-t(sd.sqmeter2.midlow/sqrt(n.samples.df$midlow))
sem.sqmeter2.midlow.df<-as.data.frame(sem.sqmeter2.midlow)
sem.sqmeter2.midlow[sem.sqmeter2.midlow==t(sd.sqmeter2.midlow)]<-0
#нижний горизонт, у нуля глубин
mean.sqmeter2.low<-mean.sqmeter.middle[2:20,]
mean.sqmeter2.low.df<-as.data.frame(mean.sqmeter2.low)
sd.sqmeter2.low<-sd.sqmeter.middle[,2:20]
sem.sqmeter2.low <-t(sd.sqmeter2.low/sqrt(n.samples.df$low))
sem.sqmeter2.low.df<-as.data.frame(sem.sqmeter2.low)
sem.sqmeter2.low[sem.sqmeter2.low==t(sd.sqmeter2.low)]<-0
length.class2<-seq(2,20,1)
(N2.sqmeter<-tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"],
size.str.df$tidal_level[size.str.sqmeter$Length.int!="(0,1]"]), sum))
(N2.mean.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=mean))
N2.mean.sqmeter[11,3]<-NA
(N2.sd.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=sd))
(N2.sem.sqmeter<-N2.sd.sqmeter/sqrt(n.samples))
N2.sem.sqmeter[N2.sem.sqmeter==N2.sd.sqmeter]<-NA
write.table(N2.mean.sqmeter, file="goreliy_N2.csv", sep=";", dec=",")
## динамика молоди <2mm и половозрелых  >8mm
young.old.int<-cut(Length.mm, breaks=c(1,2.5,7.9,max(Length.mm, na.rm=T)))
(young.old.table<-table(young.old.int, year, tidal_level, sample))
young.old.df<-as.data.frame(young.old.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(young.old.df$year)))
{ (xxx<-young.old.df$sample[young.old.df$year==levels(young.old.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(young.old.df$year)[i]])
antixxx<-as.logical(1-xxx)
young.old.df$Freq[young.old.df$year==levels(young.old.df$year)[i]][antixxx]<-NA
}
#теперь на квадратный метр
young.old.sqmeter<-young.old.df
for (i in 1:length(levels(young.old.sqmeter$year)))
{
young.old.sqmeter$Freq[young.old.sqmeter$year==levels(young.old.sqmeter$year)[i]]<-
young.old.sqmeter$Freq[young.old.sqmeter$year==levels(young.old.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(young.old.sqmeter$year)[i]]
}
str(young.old.sqmeter)
(mean.young.old.sqmeter<-tapply(young.old.sqmeter$Freq,
INDEX=list(young.old.sqmeter$year,young.old.sqmeter$young.old.int, young.old.sqmeter$tidal_level),
FUN=mean, na.rm=T))
for (i in 1:4)
{assign(paste("mean",dimnames(mean.young.old.sqmeter)[[3]][i],sep="."),mean.young.old.sqmeter[,,i])
}
(sd.young.old.sqmeter<-tapply(young.old.sqmeter$Freq,
INDEX=list(young.old.sqmeter$year, young.old.sqmeter$tidal_level, young.old.sqmeter$young.old.int),
FUN=sd, na.rm=T))
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal_level), length ))
(n.samples.df<-as.data.frame(n.samples))
(sem.young.old.sqmeter <-sd.young.old.sqmeter/sqrt(as.vector(n.samples)))
sem.young.old.sqmeter[sem.young.old.sqmeter==sd.young.old.sqmeter]<-NA
for (i in 1:4)
{assign(paste("sem",dimnames(sem.young.old.sqmeter)[[2]][i],sep="."),sem.young.old.sqmeter[,i,])
}
str(mean.young.old.sqmeter)
write.table(mean.young.old.sqmeter, file="goreliy_young_old_mean.csv", sep=";", dec=",")
##  численность молоди и биомасса половозрелых
## рассчетная биомасса только с учетом >8mm особей
biomass8.count<-0.00016*(Length.mm[Length.mm>8.0]^2.96)
(biomass8.samples<-tapply(biomass8.count, list(year[Length.mm>8.0], sample[Length.mm>8.0], tidal_level[Length.mm>8.0]), sum, na.rm=T))
(biomass8.sqmeter<-biomass8.samples*samples.squares$square)
(B2.mean.sqmeter<-apply(biomass8.sqmeter, c(1,3), mean, na.rm=T))
(B2.sd.sqmeter<-apply(biomass8.sqmeter, c(1,3), sd, na.rm=T))
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal_level), length ))
(B2.sem.sqmeter<-B2.sd.sqmeter/sqrt(n.samples))
write.table(B8.mean.sqmeter, file="goreliy_biomass_old.csv", sep=";", dec=",")
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Estuatiy_Luvenga")
#setwd("~/note_backup_2013-04-13/PhD_thesis/White_Sea/Estuatiy_Luvenga")
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
biomass.measure<-read.table(file="biomass.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
## размерная структура суммарно по годам по горизонтам
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year,sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] * samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
n.samples<-tapply(samples.names$sample,samples.names$year, length )
#subset(size.str.sqmeter,subset=size.str.sqmeter$year=="1992")
#и среднее??
# tapply выдает как резудьтат матрицу
(mean.sizestr.sqmeter<-t(tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=mean, na.rm=T)))
mean.sqmeter.df<-as.data.frame(mean.sizestr.sqmeter)
(sd.sizestr.sqmeter<-tapply(size.str.sqmeter$Freq,INDEX=list(size.str.sqmeter$year, size.str.sqmeter$Length.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter <-t(sd.sizestr.sqmeter/sqrt(as.vector(n.samples))))
sem.sqmeter.df<-as.data.frame(sem.sizestr.sqmeter)
##>2mm mean size structure
(mean.sizestr.sqmeter2<-mean.sizestr.sqmeter[2:20,])
mean.sqmeter.df2<-as.data.frame(mean.sizestr.sqmeter2)
(sd.sizestr.sqmeter2<-sd.sizestr.sqmeter[,2:20])
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.sizestr.sqmeter2<-t(sd.sizestr.sqmeter2/sqrt(as.vector(n.samples))))
sem.sqmeter.df2<-as.data.frame(sem.sizestr.sqmeter2)
length.class<-seq(1,20,1)
length.class2<-seq(2,20,1)
##динамика без молод ( больше 2+)
(N2.sqmeter<-(t(tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"]), sum))))
(N2.mean.sqmeter<-colMeans(N2.sqmeter, na.rm=T))
N2.sd.sqmeter<-apply(N2.sqmeter, 2, sd, na.rm=T)
N2.sem.sqmeter<-N2.sd.sqmeter/sqrt(n.samples)
#точность учета
(D.n2<-N2.sem.sqmeter/N2.mean.sqmeter*100)
write.table(N2.mean.sqmeter, file="estuary_N2.csv", sep=";", dec=",")
##динамика молоди <2mm и половозрелых  >8mm
(young.old.int<-cut(Length.mm, breaks=c(1,2.5,7.9,max(Length.mm, na.rm=T))))
(young.old.table<-table(young.old.int,year,sample))
young.old.df<-as.data.frame(young.old.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(young.old.df$year)))
{ (xxx<-young.old.df$sample[young.old.df$year==levels(young.old.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(young.old.df$year)[i]])
antixxx<-as.logical(1-xxx)
young.old.df$Freq[young.old.df$year==levels(young.old.df$year)[i]][antixxx]<-NA
}
#теперь на квадратный метр
young.old.sqmeter<-young.old.df
for (i in 1:length(levels(young.old.sqmeter$year)))
{
young.old.sqmeter$Freq[young.old.sqmeter$year==levels(young.old.sqmeter$year)[i]]<-
young.old.sqmeter$Freq[young.old.sqmeter$year==levels(young.old.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(young.old.sqmeter$year)[i]]
}
str(young.old.sqmeter)
(mean.young.old.sqmeter<-t(tapply(young.old.sqmeter$Freq,INDEX=list(young.old.sqmeter$year, young.old.sqmeter$young.old.int),FUN=mean, na.rm=T)))
(sd.young.old.sqmeter<-tapply(young.old.sqmeter$Freq,INDEX=list(young.old.sqmeter$year, young.old.sqmeter$young.old.int),FUN=sd, na.rm=T))
n.samples<-tapply(samples.names$sample,samples.names$year, length )
(sem.young.old.sqmeter <-t(sd.young.old.sqmeter/sqrt(as.vector(n.samples))))
write.table(t(mean.young.old.sqmeter), file="estuary_young_old_mean.csv", sep=";", dec=",")
setwd("~/Dropbox/PhD_thesis/PhD_thesis/White_Sea/Luvenga_II_razrez/")
#setwd("~/note_backup_2013-04-13/PhD_thesis/White_Sea/Luvenga_II_razrez/")
## размерная структура средние по годам по горизонтам
ishodnik<-read.table(file="length.csv", sep=";", dec=",", head=T)
samples.squares<-read.table(file="squares.csv", sep=";", dec=",", head=T)
samples.names<-read.table(file="sample.csv", sep=";", dec=",", head=T)
attach(ishodnik)
#year<-factor(year)
str(ishodnik)
Length.int<-cut(Length.mm, breaks=seq(0,20,1))
(size.str.table<-table(Length.int,year, tidal_level, sample))
size.str.df<-as.data.frame(size.str.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(size.str.df$year)))
{ (xxx<-size.str.df$sample[size.str.df$year==levels(size.str.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(size.str.df$year)[i]])
antixxx<-as.logical(1-xxx)
size.str.df$Freq[size.str.df$year==levels(size.str.df$year)[i]][antixxx]<-NA
}
# SUBSET - для фильтрации таблицы данных
# APPLY - кто-то из них для средней и СД по фрейму
#теперь на квадратный метр
size.str.sqmeter<-size.str.df
for (i in 1:length(levels(size.str.sqmeter$year)))
{
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]]<-
size.str.sqmeter$Freq[size.str.sqmeter$year==levels(size.str.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(size.str.sqmeter$year)[i]]
}
for (i in 1: length(levels(size.str.sqmeter$tidal_level)))
{
assign(paste(levels(size.str.sqmeter$tidal_level)[i]),
subset(size.str.sqmeter, size.str.sqmeter$tidal_level==levels(size.str.sqmeter$tidal_level)[i]))
}
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal.level), length ))
(n.samples.df<-as.data.frame(n.samples))
#Верхний пляж
(mean.sqmeter.high_beatch<-t(tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.high_beatch.df<-as.data.frame(mean.sqmeter.high_beatch)
(sd.sqmeter.high_beatch<-tapply(high_beatch$Freq,INDEX=list(high_beatch$year,  high_beatch$Length.int),FUN=sd, na.rm=T))
(sem.sqmeter.high_beatch <-t(sd.sqmeter.high_beatch/sqrt(n.samples.df$high_beatch)))
sem.sqmeter.high_beatch.df<-as.data.frame(sem.sqmeter.high_beatch)
#пояс фукоидов
mean.sqmeter.fucus_zone<-t(tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.fucus_zone.df<-as.data.frame(mean.sqmeter.fucus_zone)
sd.sqmeter.fucus_zone<-tapply(fucus_zone$Freq,INDEX=list(fucus_zone$year,  fucus_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.fucus_zone <-t(sd.sqmeter.fucus_zone/sqrt(n.samples.df$fucus_zone))
sem.sqmeter.fucus_zone.df<-as.data.frame(sem.sqmeter.fucus_zone)
#пояс зостеры
mean.sqmeter.zostera_zone<-t(tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T))
mean.sqmeter.zostera_zone.df<-as.data.frame(mean.sqmeter.zostera_zone)
sd.sqmeter.zostera_zone<-tapply(zostera_zone$Freq,INDEX=list(zostera_zone$year,  zostera_zone$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.zostera_zone <-t(sd.sqmeter.zostera_zone/sqrt(n.samples.df$zostera_zone))
sem.sqmeter.zostera_zone.df<-as.data.frame(sem.sqmeter.zostera_zone)
#нижний пляж
(mean.sqmeter.low_beatch<-t(tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)))
mean.sqmeter.low_beatch.df<-as.data.frame(mean.sqmeter.low_beatch)
sd.sqmeter.low_beatch<-tapply(low_beatch$Freq,INDEX=list(low_beatch$year,  low_beatch$Length.int),FUN=sd, na.rm=T)
sem.sqmeter.low_beatch <-t(sd.sqmeter.low_beatch/sqrt(n.samples.df$low_beatch))
sem.sqmeter.low_beatch.df<-as.data.frame(sem.sqmeter.low_beatch)
length.class<-seq(1,20,1)
##>1mm
#Верхний пляж
(mean.sqmeter2.high_beatch<-mean.sqmeter.high_beatch[2:20,])
mean.sqmeter2.high_beatch.df<-as.data.frame(mean.sqmeter2.high_beatch)
(sd.sqmeter2.high_beatch<-sd.sqmeter.high_beatch[,2:20])
(sem.sqmeter2.high_beatch <-t(sd.sqmeter2.high_beatch/sqrt(n.samples.df$high_beatch)))
sem.sqmeter2.high_beatch.df<-as.data.frame(sem.sqmeter2.high_beatch)
#пояс фукоидов
mean.sqmeter2.fucus_zone<-mean.sqmeter.fucus_zone[2:20,]
mean.sqmeter2.fucus_zone.df<-as.data.frame(mean.sqmeter2.fucus_zone)
sd.sqmeter2.fucus_zone<-sd.sqmeter.fucus_zone[,2:20]
sem.sqmeter2.fucus_zone <-t(sd.sqmeter2.fucus_zone/sqrt(n.samples.df$fucus_zone))
sem.sqmeter2.fucus_zone.df<-as.data.frame(sem.sqmeter2.fucus_zone)
#пояс зостеры
mean.sqmeter2.zostera_zone<-mean.sqmeter.zostera_zone[2:20,]
mean.sqmeter2.zostera_zone.df<-as.data.frame(mean.sqmeter2.zostera_zone)
sd.sqmeter2.zostera_zone<-sd.sqmeter.zostera_zone[,2:20]
sem.sqmeter2.zostera_zone <-t(sd.sqmeter2.zostera_zone/sqrt(n.samples.df$zostera_zone))
sem.sqmeter2.zostera_zone.df<-as.data.frame(sem.sqmeter2.zostera_zone)
#нижний пляж
mean.sqmeter2.low_beatch<-mean.sqmeter.low_beatch[2:20,]
mean.sqmeter2.low_beatch.df<-as.data.frame(mean.sqmeter2.low_beatch)
sd.sqmeter2.low_beatch<-sd.sqmeter.low_beatch[,2:20]
sem.sqmeter2.low_beatch <-t(sd.sqmeter2.low_beatch/sqrt(n.samples.df$low_beatch))
sem.sqmeter2.low_beatch.df<-as.data.frame(sem.sqmeter2.low_beatch)
length.class2<-seq(2,20,1)
## динамика без молод ( больше 2+)
(N2.sqmeter<-tapply(size.str.sqmeter$Freq[size.str.sqmeter$Length.int!="(0,1]"],
list(size.str.sqmeter$year[size.str.sqmeter$Length.int!="(0,1]"],
size.str.sqmeter$sample[size.str.sqmeter$Length.int!="(0,1]"],
size.str.df$tidal_level[size.str.sqmeter$Length.int!="(0,1]"]), sum))
(N2.mean.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=mean))
N2.mean.sqmeter[11,3]<-NA
(N2.sd.sqmeter<-apply(N2.sqmeter, na.rm=T, MARGIN=c(1,3), FUN=sd))
(N2.sem.sqmeter<-N2.sd.sqmeter/sqrt(n.samples))
write.table(N2.mean.sqmeter, file="2razrez_N2.csv", sep=";", dec=",")
## динамика молоди <2mm и половозрелых  >8mm
young.old.int<-cut(Length.mm, breaks=c(1,2.5,7.9,max(Length.mm, na.rm=T)))
(young.old.table<-table(young.old.int, year, tidal_level, sample))
young.old.df<-as.data.frame(young.old.table) # как таблица данных
#убираем те пробы которых на самом деле нету
for (i in 1:length(levels(young.old.df$year)))
{ (xxx<-young.old.df$sample[young.old.df$year==levels(young.old.df$year)[i] ]%in%
samples.names$sample[samples.names$year==levels(young.old.df$year)[i]])
antixxx<-as.logical(1-xxx)
young.old.df$Freq[young.old.df$year==levels(young.old.df$year)[i]][antixxx]<-NA
}
#теперь на квадратный метр
young.old.sqmeter<-young.old.df
for (i in 1:length(levels(young.old.sqmeter$year)))
{
young.old.sqmeter$Freq[young.old.sqmeter$year==levels(young.old.sqmeter$year)[i]]<-
young.old.sqmeter$Freq[young.old.sqmeter$year==levels(young.old.sqmeter$year)[i]] *
samples.squares$square[samples.squares$year==levels(young.old.sqmeter$year)[i]]
}
str(young.old.sqmeter)
(mean.young.old.sqmeter<-tapply(young.old.sqmeter$Freq,
INDEX=list(young.old.sqmeter$year,young.old.sqmeter$young.old.int, young.old.sqmeter$tidal_level),
FUN=mean, na.rm=T))
for (i in 1:4)
{assign(paste("mean",dimnames(mean.young.old.sqmeter)[[3]][i],sep="."),mean.young.old.sqmeter[,,i])
}
(sd.young.old.sqmeter<-tapply(young.old.sqmeter$Freq,
INDEX=list(young.old.sqmeter$year, young.old.sqmeter$tidal_level, young.old.sqmeter$young.old.int),
FUN=sd, na.rm=T))
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal.level), length ))
(n.samples.df<-as.data.frame(n.samples))
(sem.young.old.sqmeter <-sd.young.old.sqmeter/sqrt(as.vector(n.samples)))
sem.young.old.sqmeter[sem.young.old.sqmeter==sd.young.old.sqmeter]<-NA
for (i in 1:4)
{assign(paste("sem",dimnames(sem.young.old.sqmeter)[[2]][i],sep="."),sem.young.old.sqmeter[,i,])
}
write.table(mean.young.old.sqmeter, file="2razrez_young_old_mean.csv", sep=";", dec=",")
##  численность молоди и биомасса половозрелых
## рассчетная биомасса только с учетом >1mm особей
biomass8.count<-0.00016*(Length.mm[Length.mm>8.0]^2.96)
(biomass8.samples<-tapply(biomass8.count, list(year[Length.mm>8.0], sample[Length.mm>8.0], tidal_level[Length.mm>8.0]), sum, na.rm=T))
(biomass8.sqmeter<-biomass8.samples*samples.squares$square)
(B2.mean.sqmeter<-apply(biomass8.sqmeter, c(1,3), mean, na.rm=T))
(B2.sd.sqmeter<-apply(biomass8.sqmeter, c(1,3), sd, na.rm=T))
(n.samples<-tapply(samples.names$sample,list(samples.names$year,samples.names$tidal.level), length ))
(B2.sem.sqmeter<-B2.sd.sqmeter/sqrt(n.samples))
(D.b2<-B2.sem.sqmeter/B2.mean.sqmeter*100)
write.table(B8.mean.sqmeter, file="2razrez_biomass_old.csv", sep=";", dec=",")
setwd("~/Dropbox/PhD_thesis/PhD_thesis/young_old_all_Kandalaksha/")
ishodnik<-read.table(file="young_old_all_Kandalaksha.csv", sep=";", dec=",", head=T)
str(ishodnik)
ishodnik<-read.table(file="young_old_all_Kandalaksha.csv", sep=";", dec=",", head=T)
str(ishodnik)
attach(ishodnik)
str(area)
levels(area)
levels(tidal_level)
str(ishodnik)
levels(tidal_zone)
levels(area)
ishodnik$year<-factor(ishodnik$year)
attach(ishodnik)
plot(x=N2_all, y=young, pch=as.numeric(year), col=10*as.numeric(area)+as.numeric(tidal_zone))
subset(ishodnik, max(ishodnik$N2_all))
subset(ishodnik, ishodnik$N2_all==max(ishodnik$N2_all))
max(ishodnik$N2_all)
subset(ishodnik, ishodnik$N2_all==max(ishodnik$N2_all, is.na=T))
max(ishodnik$N2_all, is.na=T)
subset(ishodnik, ishodnik$N2_all==max(ishodnik$N2_all, na.rm=T))
plot(x=N2_all[!=6], y=young[!=6], pch=as.numeric(year)[!=6], col=10*as.numeric(area)+as.numeric(tidal_zone)[!=6])
N2_all[!=6]
N2_all!=[6]
N2_all!=6
young[young!=6]
young[6]
[N2_all==6]
N2_all==6
N2_all[6 & 6]
N2_all[6]
N2_all[N2_all==6]
N2_all[N2_all=6]
N2_all[N2_all!=6]
N2_all[N2_all=6]
x=N2_all[1:5 & 7:length(N2_all)]
N2_all[1:5]
N2_all[1:5, 7:length(N2_all)]
N2_all[c(1:5, 7:length(N2_all))]
plot(x=N2_all[c(1:5, 7:length(N2_all))],
y=young[c(1:5, 7:length(young))],
pch=as.numeric(year)[c(1:5, 7:length(year))],
col=10*as.numeric(area)[c(1:5, 7:length(area))]+as.numeric(tidal_zone)[c(1:5, 7:length(tidal_zone))])
pdf(file="young_N2_Kandalaksha.pdf", family="NimbusSan") # указываем шрифт подпией
plot(x=N2_all,
y=young,
pch=as.numeric(year),
col=10*as.numeric(area)+as.numeric(tidal_zone))
dev.off()
embedFonts("young_N2_Kandalaksha.pdf") #встройка шрифтов в файл
pdf(file="young_N2__without_max_Kandalaksha.pdf", family="NimbusSan") # указываем шрифт подпией
plot(x=N2_all[c(1:5, 7:length(N2_all))],
y=young[c(1:5, 7:length(young))],
pch=as.numeric(year)[c(1:5, 7:length(year))],
col=10*as.numeric(area)[c(1:5, 7:length(area))]+as.numeric(tidal_zone)[c(1:5, 7:length(tidal_zone))])
dev.off()
embedFonts("young_N2__without_max_Kandalaksha.pdf") #встройка шрифтов в файл
cor.test(x=N2_all[c(1:5, 7:length(N2_all))], y=young[c(1:5, 7:length(young))] method=spearman)
cor.test(x=N2_all[c(1:5, 7:length(N2_all))], y=young[c(1:5, 7:length(young))], method=spearman)
cor.test(x=N2_all[c(1:5, 7:length(N2_all))], y=young[c(1:5, 7:length(young))], method="spearman")
pdf(file="young_N2_Kandalaksha.pdf", family="NimbusSan") # указываем шрифт подпией
plot(x=N2_all,
y=young,
pch=as.numeric(year),
col=10*as.numeric(area)+as.numeric(tidal_zone),
xlab="N, экз./кв.м", ylab="N1+, экз./кв.м")
dev.off()
embedFonts("young_N2_Kandalaksha.pdf") #встройка шрифтов в файл
# убираем отскок - максимум. Это в ЗРС. и рисуем снова график
pdf(file="young_N2__without_max_Kandalaksha.pdf", family="NimbusSan") # указываем шрифт подпией
plot(x=N2_all[c(1:5, 7:length(N2_all))],
y=young[c(1:5, 7:length(young))],
pch=as.numeric(year)[c(1:5, 7:length(year))],
col=10*as.numeric(area)[c(1:5, 7:length(area))]+as.numeric(tidal_zone)[c(1:5, 7:length(tidal_zone))],
xlab="N, экз./кв.м", ylab="N1+, экз./кв.м")
dev.off()
embedFonts("young_N2__without_max_Kandalaksha.pdf") #встройка шрифтов в файл
plot(x=N8_previous,
y=young,
pch=as.numeric(year),
col=10*as.numeric(area)+as.numeric(tidal_zone),
)
plot(x=N8_previous[c(1:5, 7:length(N8_previous))],
y=young[c(1:5, 7:length(young))],
pch=as.numeric(year)[c(1:5, 7:length(year))],
col=10*as.numeric(area)[c(1:5, 7:length(area))]+as.numeric(tidal_zone)[c(1:5, 7:length(tidal_zone))],
xlab="N, экз./кв.м", ylab="N1+, экз./кв.м")
pdf(file="young_N2__without_max_Kandalaksha.pdf", family="NimbusSan") # указываем шрифт подпией
plot(x=N8_previous[c(1:5, 7:length(N8_previous))],
y=young[c(1:5, 7:length(young))],
pch=as.numeric(year)[c(1:5, 7:length(year))],
col=10*as.numeric(area)[c(1:5, 7:length(area))]+as.numeric(tidal_zone)[c(1:5, 7:length(tidal_zone))],
xlab="Nad, экз./кв.м", ylab="N1+, экз./кв.м")
# убираем отскок - максимум. Это в ЗРС. и рисуем снова график
pdf(file="young_N8__without_max_Kandalaksha.pdf", family="NimbusSan") # указываем шрифт подпией
plot(x=N8_previous[c(1:5, 7:length(N8_previous))],
y=young[c(1:5, 7:length(young))],
pch=as.numeric(year)[c(1:5, 7:length(year))],
col=10*as.numeric(area)[c(1:5, 7:length(area))]+as.numeric(tidal_zone)[c(1:5, 7:length(tidal_zone))],
xlab="Nad, экз./кв.м", ylab="N1+, экз./кв.м")
dev.off()
embedFonts("young_N8__without_max_Kandalaksha.pdf") #встройка шрифтов в файл
pdf(file="young_N8_Kandalaksha.pdf", family="NimbusSan") # указываем шрифт подпией
plot(x=N8_previous,
y=young,
pch=as.numeric(year),
col=10*as.numeric(area)+as.numeric(tidal_zone),
xlab="N, экз./кв.м", ylab="N1+, экз./кв.м")
dev.off()
embedFonts("young_N8_Kandalaksha.pdf") #встройка шрифтов в файл
cor.test(x=N8_previous[c(1:5, 7:length(N8_previous))], y=young[c(1:5, 7:length(young))], method="spearman")
pdf(file="young_N8_Kandalaksha.pdf", family="NimbusSan") # указываем шрифт подпией
plot(x=N8_previous,
y=young,
pch=as.numeric(year),
col=10*as.numeric(area)+as.numeric(tidal_zone),
xlab="Nad, экз./кв.м", ylab="N1+, экз./кв.м")
dev.off()
embedFonts("young_N8_Kandalaksha.pdf") #встройка шрифтов в файл
plot(x=B8_previous,
y=young,
pch=as.numeric(year),
col=10*as.numeric(area)+as.numeric(tidal_zone),
xlab="Bad, экз./кв.м", ylab="N1+, экз./кв.м")
plot(x=B8_previous[c(1:5, 7:length(B8_previous))],
y=young[c(1:5, 7:length(young))],
pch=as.numeric(year)[c(1:5, 7:length(year))],
col=10*as.numeric(area)[c(1:5, 7:length(area))]+as.numeric(tidal_zone)[c(1:5, 7:length(tidal_zone))],
xlab="Bad, экз./кв.м", ylab="N1+, экз./кв.м")
cor.test(x=B8_previous[c(1:5, 7:length(B8_previous))], y=young[c(1:5, 7:length(young))], method="spearman")
pdf(file="young_B8_Kandalaksha.pdf", family="NimbusSan") # указываем шрифт подпией
plot(x=B8_previous,
y=young,
pch=as.numeric(year),
col=10*as.numeric(area)+as.numeric(tidal_zone),
xlab="Bad, г/кв.м", ylab="N1+, экз./кв.м")
dev.off()
embedFonts("young_B8_Kandalaksha.pdf") #встройка шрифтов в файл
# убираем отскок - максимум. Это в ЗРС. и рисуем снова график
pdf(file="young_B8__without_max_Kandalaksha.pdf", family="NimbusSan") # указываем шрифт подпией
plot(x=B8_previous[c(1:5, 7:length(B8_previous))],
y=young[c(1:5, 7:length(young))],
pch=as.numeric(year)[c(1:5, 7:length(year))],
col=10*as.numeric(area)[c(1:5, 7:length(area))]+as.numeric(tidal_zone)[c(1:5, 7:length(tidal_zone))],
xlab="Bad, г/кв.м", ylab="N1+, экз./кв.м")
dev.off()
embedFonts("young_B8__without_max_Kandalaksha.pdf") #встройка шрифтов в файл
# корреляция Спирмена
cor.test(x=B8_previous[c(1:5, 7:length(B8_previous))], y=young[c(1:5, 7:length(young))], method="spearman")
setwd("~/Dropbox/PhD_thesis/PhD_thesis/young_old_all_Kandalaksha/")
ishodnik<-read.table(file="young_old_all_Kandalaksha.csv", sep=";", dec=",", head=T)
ishodnik$year<-factor(ishodnik$year)
str(ishodnik)
attach(ishodnik)
levels(year)
plot(x=as.numeric(levels(year)), y=max(young), type="n",
xlab="год", ylab="N, экз./кв.м")
plot(x=as.numeric(levels(year)), y=young[area=="Estuary"], type="n",
xlab="год", ylab="N, экз./кв.м")
lines(x=year[area=="Estuary"], y=young[area=="Estuary"])
lines(x=year[area=="Estuary"], y=young[area=="Estuary"], pch=15)
lines(x=year[area=="Estuary"], y=young[area=="Estuary"], pch=15, type="b")
young[area=="Estuary"]
year[area=="Estuary"]
lines(x=year[area=="Estuary"], y=young[area=="Estuary"], pch=15, type="b")
lines(x=year[area=="Estuary"], y=young[area=="Estuary"], pch=15, type="b", col=1)
plot(x=as.numeric(levels(year)), y=young[area=="Estuary"], type="n",
xlab="год", ylab="N, экз./кв.м")
lines(x=year[area=="Estuary"], y=young[area=="Estuary"], pch=15, type="b", col=1)
plot(x=as.numeric(levels(year)), y=young[area=="Estuary"], #type="n",
xlab="год", ylab="N, экз./кв.м")
lines(x=year[area=="Estuary"], y=young[area=="Estuary"], pch=15, type="b", col=1)
lines(x=as.numeric(levels(year)), y=young[area=="Estuary"], pch=15, type="b", col=1)
lines(x=as.numeric(levels(year)), y=young[area=="Lomnishniy"], pch=16, type="b", col=2) #Ломнишный
young_kanda<-read.table(file="young_Kandalaksha.csv", sep=";", dec=",", head=T)
str(young_kanda)
attach(young_kanda)
young_kanda_mean<-read.table(file="young_Kandalaksha.csv", sep=";", dec=",", head=T)
str(young_kanda_mean)
attach(young_kanda_mean)
str(young_kanda_mean)
